{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/array-sort-pipe.ts","./src/app/ban.pipe.ts","./src/app/bar-collection-information/bar-collection-information.component.ts","./src/app/bar-collection-information/bar-collection-information.component.html","./src/app/collection-new-deactive-guard.ts","./src/app/deck-deactive-guard.ts","./src/app/dialog-import-collection/dialog-import-collection.component.ts","./src/app/dialog-import-collection/dialog-import-collection.component.html","./src/app/dialog-remove-collection/dialog-edit-remove-collection.component.ts","./src/app/dialog-remove-collection/dialog-edit-remove-collection.component.html","./src/app/drag-drop.directive.ts","./src/app/empty-layout/empty-layout.component.ts","./src/app/empty-layout/empty-layout.component.html","./src/app/error-notifier.interceptor.ts","./src/app/filter-dialog/filter-dialog.component.ts","./src/app/filter-dialog/filter-dialog.component.html","./src/app/filter-dialog/filter-dto.ts","./src/app/full-image-dialog/full-image-dialog.component.ts","./src/app/full-image-dialog/full-image-dialog.component.html","./src/app/global.ts","./src/app/loading.directive.ts","./src/app/loading/loading.component.ts","./src/app/loading/loading.component.html","./src/app/modal-card-detail/modal-card-detail.component.ts","./src/app/modal-card-detail/modal-card-detail.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/safe.pipe.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/snack-bar/snack-bar.component.ts","./src/app/snack-bar/snack-bar.component.html","./src/app/sort-dialog/card-sort.ts","./src/app/sort-dialog/sort-dialog.component.ts","./src/app/sort-dialog/sort-dialog.component.html","./src/app/upload-file/upload-file.component.ts","./src/app/upload-file/upload-file.component.html","./src/app/yes-no-dialog/yes-no-dialog.component.ts","./src/app/yes-no-dialog/yes-no-dialog.component.html","./src/app/yu-gi-oh/collection/card-consultation.component.ts","./src/app/yu-gi-oh/collection/card-consultation.component.html","./src/app/yu-gi-oh/collection/card-matcher.component.ts","./src/app/yu-gi-oh/collection/card-matcher.component.html","./src/app/yu-gi-oh/collection/card.ts","./src/app/yu-gi-oh/collection/collection-by-user.component.ts","./src/app/yu-gi-oh/collection/collection-by-user.component.html","./src/app/yu-gi-oh/collection/collection-import-pojo.ts","./src/app/yu-gi-oh/collection/collection-item.ts","./src/app/yu-gi-oh/collection/collection-light.ts","./src/app/yu-gi-oh/collection/collection-list.component.ts","./src/app/yu-gi-oh/collection/collection-list.component.html","./src/app/yu-gi-oh/collection/collection-new.component.ts","./src/app/yu-gi-oh/collection/collection-new.component.html","./src/app/yu-gi-oh/collection/collection.ts","./src/app/yu-gi-oh/collection/deck-list.component.ts","./src/app/yu-gi-oh/collection/deck-list.component.html","./src/app/yu-gi-oh/collection/deck.component.ts","./src/app/yu-gi-oh/collection/deck.component.html","./src/app/yu-gi-oh/collection/dialog-add-collection.component.ts","./src/app/yu-gi-oh/collection/dialog-add-collection.html","./src/app/yu-gi-oh/collection/image.ts","./src/app/yu-gi-oh/collection/position.ts","./src/app/yu-gi-oh/collection/tooltip-card/tooltip-card.component.ts","./src/app/yu-gi-oh/collection/tooltip-card/tooltip-card.component.html","./src/app/yu-gi-oh/collection/utils.ts","./src/app/yu-gi-oh/combo-graph-two/card-node.ts","./src/app/yu-gi-oh/combo-graph-two/card.ts","./src/app/yu-gi-oh/combo-graph-two/combo-graph-two.component.ts","./src/app/yu-gi-oh/combo-graph-two/combo-graph-two.component.html","./src/app/yu-gi-oh/combo-graph-two/type-of-summon.enum.ts","./src/app/yugioh.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {ComboGraphTwoComponent} from './yu-gi-oh/combo-graph-two/combo-graph-two.component';\r\nimport {CollectionListComponent} from './yu-gi-oh/collection/collection-list.component';\r\nimport {DeckComponent} from './yu-gi-oh/collection/deck.component';\r\nimport {DeckDeactivateGuard} from './deck-deactive-guard';\r\nimport {CollectionNewComponent} from './yu-gi-oh/collection/collection-new.component';\r\nimport {CollectionNewDeactivateGuard} from './collection-new-deactive-guard';\r\nimport {CollectionByUserComponent} from './yu-gi-oh/collection/collection-by-user.component';\r\nimport {CardMatcherComponent} from './yu-gi-oh/collection/card-matcher.component';\r\nimport {CardConsultationComponent} from './yu-gi-oh/collection/card-consultation.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: CollectionListComponent},\r\n  {path: 'yu-gi-oh/2', component: ComboGraphTwoComponent},\r\n  {path: 'yu-gi-oh/collections', component: CollectionListComponent},\r\n  {path: 'yu-gi-oh/decks', component: CollectionListComponent},\r\n  {path: 'yu-gi-oh/decks/by-id/:id', component: DeckComponent, canDeactivate: [DeckDeactivateGuard]},\r\n  {path: 'yu-gi-oh/collections/by-id/:id', component: CollectionNewComponent, canDeactivate: [CollectionNewDeactivateGuard]},\r\n  {path: 'yu-gi-oh/collections/by-user', component: CollectionByUserComponent},\r\n  {path: 'yu-gi-oh/collections/by-user/:name', component: CollectionNewComponent},\r\n  {path: 'yu-gi-oh/collections/allCollections', component: CollectionNewComponent},\r\n  {path: 'yu-gi-oh/card-matcher', component: CardMatcherComponent},\r\n  {path: 'yu-gi-oh/cards', component: CardConsultationComponent},\r\n  {path: 'not-found', component: NotFoundComponent},\r\n  {path: '**', redirectTo: 'not-found'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {YugiohService} from './yugioh.service';\r\nimport {Router} from '@angular/router';\r\nimport {idAllCollections} from './global';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    trigger('openClose', [\r\n      state('open', style({\r\n        transform: 'rotate(360deg)'\r\n      })),\r\n      state('closed', style({\r\n        transform: 'rotate(-360deg)'\r\n      })),\r\n      transition('* => *', [\r\n        animate('1s')\r\n      ])\r\n    ]),\r\n    trigger('sideNavOpenClose', [\r\n      state('open', style({\r\n        transform: 'translateX(0)'\r\n      })),\r\n      state('closed', style({\r\n        transform: 'translateX(-100%)'\r\n      })),\r\n      transition('* => *', [\r\n        animate('0.5s')\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'angularDemo';\r\n  isFrench = true;\r\n  canScroll = true;\r\n  isOpen = false;\r\n  bodySize: number;\r\n  scrollInProgress = false;\r\n  englishCheck: boolean;\r\n\r\n  deckNavItemActive: boolean;\r\n  collectionNavItemActive: boolean;\r\n  cardMatcherNavItemActive: boolean;\r\n  cardConsultationItemActive: boolean;\r\n  itemActive: number;\r\n\r\n  constructor(public translate: TranslateService, public yugiohService: YugiohService, public router: Router) {\r\n    translate.addLangs(['en', 'fr']);\r\n\r\n    const browserLang = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\r\n\r\n    // CardSet up the language switch\r\n    this.englishCheck = translate.currentLang === 'en';\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => this.refreshActiveTab(this.router.url), 100);\r\n  }\r\n\r\n  refreshActiveTab(url) {\r\n    if (url.includes('/decks')) {\r\n      this.itemActive = 0;\r\n    } else if (url.includes('/collection')) {\r\n      this.itemActive = 1;\r\n    } else if (url.includes('/card-matcher')) {\r\n      this.itemActive = 2;\r\n    } else if (url.includes('/cards')) {\r\n      this.itemActive = 3;\r\n    }\r\n  }\r\n\r\n  onAuxClick($event: MouseEvent, url: string) {\r\n    $event.preventDefault();\r\n    if ($event.which === 2) {\r\n      window.open(url);\r\n      this.refreshActiveTab(url);\r\n    }\r\n  }\r\n\r\n  handleRoutingToDeckOrIndividualCollection(event: MouseEvent, isCollection?: boolean) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      console.log(isCollection);\r\n      const url = '/yu-gi-oh/' + (isCollection ? 'collections' : 'decks');\r\n\r\n      console.log(url);\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n      this.refreshActiveTab(url);\r\n    }\r\n  }\r\n\r\n  handleRoutingToCollectionsByUser(event: MouseEvent) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = 'yu-gi-oh/collections/by-user';\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n      this.refreshActiveTab(url);\r\n    }\r\n  }\r\n\r\n  handleRoutingToAllCollection(event: MouseEvent) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = '/yu-gi-oh/collections/' + idAllCollections;\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n      this.refreshActiveTab(url);\r\n    }\r\n  }\r\n\r\n  handleRoutingToCardMatcher(event: MouseEvent) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = '/yu-gi-oh/card-matcher';\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n      this.refreshActiveTab(url);\r\n    }\r\n  }\r\n\r\n  handleRoutingToCardConsultations(event: MouseEvent) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = '/yu-gi-oh/cards';\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n      this.refreshActiveTab(url);\r\n    }\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light\"\r\n     style=\"background-color: rgb(31 31 31) !important;\">\r\n  <div class=\"navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\" [class.active]=\"itemActive === 0\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"handleRoutingToDeckOrIndividualCollection($event,false)\"\r\n           (auxclick)=\"handleRoutingToDeckOrIndividualCollection($event,false)\">Decks</a>\r\n      </li>\r\n\r\n      <li class=\"nav-item dropdown\" [class.active]=\"itemActive === 1\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\r\n           aria-haspopup=\"true\" aria-expanded=\"false\" (auxclick)=\"handleRoutingToDeckOrIndividualCollection($event,true)\">\r\n          Collections\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\" style=\"background-color: rgb(31 31 31)\">\r\n          <a class=\"dropdown-item\" href=\"#\" (click)=\"handleRoutingToDeckOrIndividualCollection($event,true)\"\r\n             (auxclick)=\"handleRoutingToDeckOrIndividualCollection($event,true)\">Individuelles</a>\r\n          <a class=\"dropdown-item\" href=\"#\" (click)=\"handleRoutingToCollectionsByUser($event)\"\r\n             (auxclick)=\"handleRoutingToCollectionsByUser($event)\">Par utilisateur</a>\r\n          <a class=\"dropdown-item\" href=\"#\" (click)=\"handleRoutingToAllCollection($event)\"\r\n             (auxclick)=\"handleRoutingToAllCollection($event)\">Globale</a>\r\n        </div>\r\n      </li>\r\n\r\n      <li class=\"nav-item\" [class.active]=\"itemActive === 2\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"handleRoutingToCardMatcher($event)\"\r\n           (auxclick)=\"handleRoutingToCardMatcher($event)\">Card Matcher (Beta)</a>\r\n      </li>\r\n      <li class=\"nav-item\" [class.active]=\"itemActive === 3\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"handleRoutingToCardConsultations($event)\"\r\n           (auxclick)=\"handleRoutingToCardConsultations($event)\">Consultations cartes</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {SafePipe} from './safe.pipe';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {DragDropDirective} from './drag-drop.directive';\r\nimport {UploadFileComponent} from './upload-file/upload-file.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n\r\nimport {DragulaModule} from 'ng2-dragula';\r\nimport {ColorSketchModule} from 'ngx-color/sketch';\r\nimport {ColorGithubModule} from 'ngx-color/github';\r\nimport {ColorCircleModule} from 'ngx-color/circle';\r\n\r\n// import {AuthServiceConfig, GoogleLoginProvider, LoginOpt, SocialLoginModule} from 'angularx-social-login';\r\nimport {EmptyLayoutComponent} from './empty-layout/empty-layout.component';\r\nimport {LoadingDirective} from './loading.directive';\r\nimport {LoadingComponent} from './loading/loading.component';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {ErrorNotifierInterceptor} from './error-notifier.interceptor';\r\nimport {SnackBarComponent} from './snack-bar/snack-bar.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {ComboGraphTwoComponent} from './yu-gi-oh/combo-graph-two/combo-graph-two.component';\r\nimport {CollectionListComponent} from './yu-gi-oh/collection/collection-list.component';\r\nimport {DialogAddCollectionComponent} from './yu-gi-oh/collection/dialog-add-collection.component';\r\nimport {DialogEditRemoveCollectionComponent} from './dialog-remove-collection/dialog-edit-remove-collection.component';\r\nimport {DeckComponent} from './yu-gi-oh/collection/deck.component';\r\nimport {TooltipCardComponent} from './yu-gi-oh/collection/tooltip-card/tooltip-card.component';\r\nimport {DialogImportCollectionComponent} from './dialog-import-collection/dialog-import-collection.component';\r\nimport {FullImageDialogComponent} from './full-image-dialog/full-image-dialog.component';\r\nimport {SortDialogComponent} from './sort-dialog/sort-dialog.component';\r\nimport {DeckDeactivateGuard} from './deck-deactive-guard';\r\nimport {CollectionNewComponent} from './yu-gi-oh/collection/collection-new.component';\r\nimport {CollectionNewDeactivateGuard} from './collection-new-deactive-guard';\r\nimport {ArraySortPipe} from './array-sort-pipe';\r\nimport {BanPipe} from './ban.pipe';\r\nimport {FilterDialogComponent} from './filter-dialog/filter-dialog.component';\r\nimport { YesNoDialogComponent } from './yes-no-dialog/yes-no-dialog.component';\r\nimport { ModalCardDetailComponent } from './modal-card-detail/modal-card-detail.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { DeckListComponent } from './yu-gi-oh/collection/deck-list.component';\r\nimport { CollectionByUserComponent } from './yu-gi-oh/collection/collection-by-user.component';\r\nimport { CardMatcherComponent } from './yu-gi-oh/collection/card-matcher.component';\r\nimport { CardConsultationComponent } from './yu-gi-oh/collection/card-consultation.component';\nimport { BarCollectionInformationComponent } from './bar-collection-information/bar-collection-information.component';\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n////////////////////// SOCIAL LOGIN ////////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n// const googleLoginOptions: LoginOpt = {\r\n//   scope: 'profile email'\r\n//   /*scope: 'profile email https://www.googleapis.com/auth/drive.readonly'*/\r\n// }; // https://developers.google.com/api-client-library/javascript/reference/referencedocs#gapiauth2clientconfig\r\n//\r\n//\r\n// const config = new AuthServiceConfig([\r\n//   {\r\n//     id: GoogleLoginProvider.PROVIDER_ID,\r\n//     provider: new GoogleLoginProvider('554774137176-p6pr1qe22srgmp5ab9qmjeh2hfaftrh4.apps.googleusercontent.com', googleLoginOptions)\r\n//   }/*,\r\n//   {\r\n//     id: FacebookLoginProvider.PROVIDER_ID,\r\n//     provider: new FacebookLoginProvider('Facebook-App-Id')\r\n//   }*/\r\n// ]);\r\n//\r\n// export function provideConfig() {\r\n//   return config;\r\n// }\r\n\r\n////////////////////////////////////////////////////////////////\r\n//////////////////// END SOCIAL LOGIN //////////////////////////\r\n////////////////////////////////////////////////////////////////\r\n\r\n\r\n// AoT requires an exported function for factories\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        SafePipe,\r\n        ArraySortPipe,\r\n        DragDropDirective,\r\n        UploadFileComponent,\r\n        EmptyLayoutComponent,\r\n        LoadingDirective,\r\n        LoadingComponent,\r\n        SnackBarComponent,\r\n        NotFoundComponent,\r\n        ComboGraphTwoComponent,\r\n        CollectionNewComponent,\r\n        CollectionListComponent,\r\n        DialogAddCollectionComponent,\r\n        DialogEditRemoveCollectionComponent,\r\n        DeckComponent,\r\n        TooltipCardComponent,\r\n        DialogImportCollectionComponent,\r\n        FullImageDialogComponent,\r\n        SortDialogComponent,\r\n        BanPipe,\r\n        FilterDialogComponent,\r\n        YesNoDialogComponent,\r\n        ModalCardDetailComponent,\r\n        SearchComponent,\r\n        DeckListComponent,\r\n        CollectionByUserComponent,\r\n        CardMatcherComponent,\r\n        CardConsultationComponent,\r\n        BarCollectionInformationComponent\r\n    ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    NgbModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatRippleModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDividerModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    DragulaModule.forRoot(),\r\n    ColorSketchModule,\r\n    ColorGithubModule,\r\n    ColorCircleModule,\r\n    // SocialLoginModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatTooltipModule,\r\n  ],\r\n    providers: [\r\n        // {\r\n        // provide: AuthServiceConfig,\r\n        // useFactory: provideConfig\r\n        // },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorNotifierInterceptor, multi: true },\r\n        CollectionNewDeactivateGuard,\r\n        DeckDeactivateGuard\r\n    ],\r\n    bootstrap: [AppComponent],\r\n    exports: []\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Pipe} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'sort'\r\n})\r\nexport class ArraySortPipe {\r\n  transform(array: Array<any>, field?: string, sortString?: boolean): Array<any> {\r\n    if (!Array.isArray(array)) {\r\n      return;\r\n    }\r\n    if (field) {\r\n      if (sortString) {\r\n        array.sort((a: string, b: string) => a[field].toLowerCase().localeCompare(b[field].toLowerCase()));\r\n        return array;\r\n      } else {\r\n        array.sort((a: any, b: any) => {\r\n          if (a[field] < b[field]) {\r\n            return -1;\r\n          } else if (a[field] > b[field]) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        return array;\r\n      }\r\n    } else {\r\n      if (sortString) {\r\n        array.sort((a: string, b: string) => a.toLowerCase().localeCompare(b.toLowerCase()));\r\n        return array;\r\n      } else {\r\n        array.sort((a: any, b: any) => {\r\n          if (a < b) {\r\n            return -1;\r\n          } else if (a > b) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        return array;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'ban'\r\n})\r\nexport class BanPipe implements PipeTransform {\r\n\r\n  transform(value: string, ...args: any[]): string {\r\n    return String(value === 'Banned' ? 0 : value === 'Limited' ? 1 : value === 'Semi-Limited' ? 2 : 3);\r\n  }\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Collection} from '../yu-gi-oh/collection/collection';\nimport {backendUrl} from '../global';\n\n@Component({\n  selector: 'app-bar-collection-information',\n  templateUrl: './bar-collection-information.component.html',\n  styleUrls: ['./bar-collection-information.component.scss']\n})\nexport class BarCollectionInformationComponent implements OnInit {\n\n  backEndCardUrl = backendUrl + '/cards/';\n\n  @Input() collection: Collection;\n  @Input() staticCollection: boolean;\n  @Input() canSave: boolean;\n  @Input() totalPrice: number;\n\n  @Output() save = new EventEmitter<void>();\n  @Output() removeImage = new EventEmitter<void>();\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  saveCollection() {\n    this.save.emit();\n  }\n\n  removeImageFromCollection() {\n    this.removeImage.emit();\n  }\n}\n","<div style=\"background-color: rgb(61,61,61); width: 100%; display: flex; justify-content: center\">\n  <div *ngIf=\"collection\" style=\"display: flex; align-items: center; padding: 8px\">\n    <div *ngIf=\"collection?.mainCardApiId\">\n      <img [src]=\"backEndCardUrl + collection.mainCardApiId + '/image-cropped'\" alt=\"website icon\"\n           style=\"width:42px;height:42px;border:0;\" (contextmenu)=\"removeImageFromCollection()\">\n    </div>\n    <div style=\"color: white\">Collection {{collection.name}} ({{collection.totalItems}} cartes) <span\n      *ngIf=\"totalPrice\"> - Prix total ~{{totalPrice}}€</span></div>\n    <div>\n      <button mat-stroked-button (click)=\"saveCollection()\" *ngIf=\"!staticCollection && canSave\" style=\"color: white; margin-left: 8px; border: 1px solid white !important;\">\n        Sauvegarder\n      </button>\n    </div>\n  </div>\n</div>\n","import {ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {CollectionNewComponent} from './yu-gi-oh/collection/collection-new.component';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class CollectionNewDeactivateGuard implements CanDeactivate<CollectionNewComponent> {\r\n  canDeactivate(component: CollectionNewComponent, currentRoute: ActivatedRouteSnapshot, currentState: RouterStateSnapshot,\r\n                nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return component.canDeactivate();\r\n  }\r\n\r\n\r\n}\r\n","import { CanDeactivate } from '@angular/router';\r\nimport {DeckComponent} from './yu-gi-oh/collection/deck.component';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class DeckDeactivateGuard implements CanDeactivate<DeckComponent> {\r\n\r\n  canDeactivate(component: DeckComponent) {\r\n    return component.canDeactivate();\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {YugiohService} from '../yugioh.service';\r\nimport {Set} from '../yu-gi-oh/collection/set';\r\n\r\nexport class ImportData {\r\n  importText: string;\r\n  setCode: string;\r\n  language: string;\r\n  selectedIndex: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dialog-import-collection',\r\n  templateUrl: './dialog-import-collection.component.html',\r\n  styleUrls: ['./dialog-import-collection.component.scss']\r\n})\r\nexport class DialogImportCollectionComponent implements OnInit {\r\n\r\n  placeholder: string;\r\n  collectionString: string;\r\n  activeSet: Set;\r\n  sets: Array<Set> = [];\r\n  activeLanguage = 'fr';\r\n  languages = ['fr', 'en'];\r\n  selectedIndex = 0;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogImportCollectionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, yugiohService: YugiohService) {\r\n    if (data?.type === 'DECK') {\r\n      this.placeholder = `Main deck\r\n1 Souleating Oviraptor SR04\r\n1x Aérosol de Destruction\r\nExtra deck\r\n1 Evolzar Dolkka\r\n1 Superdreadnought Rail Cannon Gustav Max\r\nSide deck\r\n6x TrOU noIr\r\n2 Ultimate Conductor Tyranno`;\r\n    } else {\r\n      this.placeholder = `1 Souleating Oviraptor SR04\r\n1x Aérosol de Destruction\r\n6x TrOU noIr\r\n2 Ultimate Conductor Tyranno`;\r\n    }\r\n\r\n    yugiohService.getSets().subscribe(value => {\r\n      this.sets = value;\r\n      this.activeSet = value[0];\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onConfirmClick(): void {\r\n    const data = new ImportData();\r\n    data.selectedIndex = this.selectedIndex;\r\n    if (this.selectedIndex === 0) {\r\n      data.importText = this.collectionString;\r\n    } else if (this.selectedIndex === 1) {\r\n      data.setCode = this.activeSet.code;\r\n      data.language = this.activeLanguage;\r\n    }\r\n    this.dialogRef.close(data);\r\n  }\r\n}\r\n","<h1 mat-dialog-title> Importer une collection </h1>\r\n<div mat-dialog-content>\r\n  <mat-tab-group style=\"width: 100%;\" [(selectedIndex)]=\"selectedIndex\">\r\n    <mat-tab label=\"Import manuel\">\r\n         <textarea matInput style=\"height: 300px; width: 100%;\r\n     border: #3b3b3b 1px solid; padding: 8px\"\r\n                   [placeholder]=\"placeholder\" [(ngModel)]=\"collectionString\"></textarea>\r\n    </mat-tab>\r\n    <mat-tab label=\"Import par set\">\r\n      <div style=\"width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center; margin-top: 8px\">\r\n        <mat-form-field class=\"w-100\" appearance=\"outline\" color=\"accent\">\r\n          <mat-label>Set</mat-label>\r\n          <mat-select [(value)]=\"activeSet\">\r\n            <mat-option *ngFor=\"let set of sets\" [value]=\"set\">\r\n              {{set.name}} ({{set.code}})</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"w-100\" appearance=\"outline\" color=\"accent\">\r\n          <mat-label>Langue</mat-label>\r\n          <mat-select [(value)]=\"activeLanguage\">\r\n            <mat-option *ngFor=\"let language of languages\" [value]=\"language\">\r\n              {{language}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button type=\"button\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-button type=\"submit\" (click)=\"onConfirmClick()\">Confirm</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ColorEvent} from 'ngx-color';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {YesNoDialogComponent} from '../yes-no-dialog/yes-no-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-remove-collection',\r\n  templateUrl: './dialog-edit-remove-collection.component.html',\r\n  styleUrls: ['./dialog-edit-remove-collection.component.scss']\r\n})\r\nexport class DialogEditRemoveCollectionComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogEditRemoveCollectionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onRemoveClick(): void {\r\n    this.dialog.open(YesNoDialogComponent, {\r\n      width: '400px',\r\n    }).afterClosed().subscribe(value => {\r\n      if (value) {\r\n        this.data.result = 'REMOVE';\r\n        this.dialogRef.close(this.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  onConfirmClick(): void {\r\n    this.data.result = 'OK';\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  changeComplete($event: ColorEvent) {\r\n    this.data.color = $event.color.hex;\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Edition / Suppression</h1>\r\n<div mat-dialog-content>\r\n  <div>\r\n    <mat-form-field style=\"width: 100%\">\r\n      <mat-label>Nom</mat-label>\r\n      <input matInput [(ngModel)]=\"data.name\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div>\r\n    <mat-form-field style=\"width: 100%\">\r\n      <mat-label>Créé par</mat-label>\r\n      <input matInput [(ngModel)]=\"data.createdBy\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div style=\"display: flex; align-items: center; justify-content: center\">\r\n    <div style=\"width: 50%\">\r\n      <mat-form-field style=\"width: 100%\">\r\n        <mat-label>Couleur</mat-label>\r\n        <input matInput [(ngModel)]=\"data.color\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div style=\"width: 50%; display: flex; align-items: center; justify-content: center\">\r\n      <color-circle [color]=\"data.color\" (onChangeComplete)=\"changeComplete($event)\"></color-circle>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button type=\"button\" (click)=\"onCancelClick()\">Annuler</button>\r\n  <button mat-button type=\"button\" (click)=\"onRemoveClick()\">Supprimer</button>\r\n  <button mat-button type=\"submit\" (click)=\"onConfirmClick()\">Mettre à jour</button>\r\n</div>\r\n","\r\nimport { Directive, Output, Input, EventEmitter, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDragDrop]'\r\n})\r\nexport class DragDropDirective {\r\n\r\n  @Output() onFileDropped = new EventEmitter<any>();\r\n\r\n  //@HostBinding('style.background-color') public background = '#white';\r\n  @HostBinding('style.opacity') public opacity = '1';\r\n\r\n  // Dragover listener\r\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    //this.background = '#9ecbec';\r\n    this.opacity = '0.8';\r\n  }\r\n\r\n  // Dragleave listener\r\n  @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n   //this.background = '#f5fcff';\r\n    this.opacity = '1';\r\n  }\r\n\r\n  // Drop listener\r\n  @HostListener('drop', ['$event']) public ondrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n   // this.background = '#f5fcff';\r\n    this.opacity = '1';\r\n    const files = evt.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      this.onFileDropped.emit(files);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-layout',\n  templateUrl: './empty-layout.component.html',\n  styleUrls: ['./empty-layout.component.scss']\n})\nexport class EmptyLayoutComponent {\n\n  @Input() hideBackground: boolean;\n  @Input() displayHorizontal: boolean;\n  @Input() message: string;\n  @Input() iconFontSize: number;\n\n  constructor() { }\n}\n","<div class=\"flex-center bg-third\" [style.flex-direction]=\"displayHorizontal ? 'row' : 'column'\"\n    [style.background-color]=\"hideBackground ? 'transparent' : ''\" [style.padding]=\"hideBackground ? '0px' : '1rem'\"\n    [style.margin]=\"hideBackground ? '0px' : '0.5rem'\" style=\"border-radius: 24px;\">\n    <mat-icon aria-hidden=\"false\" aria-label=\"Empty layout icon\"\n        [style.font-size]=\"iconFontSize ? iconFontSize+'px' : '24px'\" style=\"height: auto; width: auto;\">\n        error_outline\n    </mat-icon>\n    <div [style.margin-top]=\"displayHorizontal ? '0' : '8px'\" [style.margin-left]=\"displayHorizontal ? '8px' : '0'\"\n        *ngIf=\"message\" [translate]=\"message\">\n    </div>\n</div>","import {Injectable} from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {tap} from 'rxjs/operators';\nimport {SnackBarComponent, SnackBarData} from './snack-bar/snack-bar.component';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable()\nexport class ErrorNotifierInterceptor implements HttpInterceptor {\n\n  constructor(private snackBar: MatSnackBar, private router: Router, private translate: TranslateService) {\n  }\n\n  intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(req).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          // console.log(event);\n          const splitUrl = req.url.split('/');\n          const endpoint = splitUrl[splitUrl.length - 1];\n          // A 2XX status code is contained in the event and the event is not a GET, or login or logout\n          if (req.method.localeCompare('GET') !== 0\n            && endpoint.localeCompare('login') !== 0\n            && endpoint.localeCompare('logout') !== 0\n            && Math.floor(event.status / 100) === 2\n            && !req.url.includes('/cards')) {\n\n            const params: SnackBarData = {\n              isSuccess: true,\n              body: req.body,\n              endpoint,\n              url: req.url,\n              extraMessage: null,\n              doAction: () => this.snackBar.dismiss()\n            };\n\n            this.snackBar.openFromComponent(SnackBarComponent,\n              {\n                data: params,\n                duration: 5000\n              });\n          }\n        }\n      }, (error: HttpEvent<any>) => {\n        if (error instanceof HttpErrorResponse) {\n          const splitUrl = req.url.split('/');\n          if (error.status === 404) {\n            this.router.navigateByUrl('/not-found', {replaceUrl: true});\n          } else if (error.status === 401) {\n\n            this.translate.get('UNAUTHORIZED').subscribe(value => {\n              const params: SnackBarData = {\n                isSuccess: false,\n                body: req.body,\n                endpoint: splitUrl[splitUrl.length - 1],\n                url: req.url,\n                extraMessage: value,\n                doAction: () => {\n                  // retry\n                  console.log('ok');\n                  this.snackBar.dismiss();\n                  /*return next.handle(req);*/ // TODO : find how to do the retry\n                }\n              };\n\n              this.snackBar.openFromComponent(SnackBarComponent,\n                {\n                  data: params,\n                  duration: 200000\n                });\n            });\n          } else if (Math.floor(error.status / 100) >= 4) { // 4XX or 5XX status code (except 404 because it's processed before)\n            const params: SnackBarData = {\n              isSuccess: false,\n              body: req.body,\n              endpoint: splitUrl[splitUrl.length - 1],\n              url: req.url,\n              extraMessage: null,\n              doAction: () => {\n                // retry\n                console.log('ok');\n                this.snackBar.dismiss();\n                /*return next.handle(req);*/ // TODO : find how to do the retry\n              }\n            };\n\n            this.snackBar.openFromComponent(SnackBarComponent,\n              {\n                data: params,\n                duration: 200000\n              });\n          }\n        }\n      })\n    );\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {FilterDto} from './filter-dto';\r\nimport {UntypedFormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {YugiohService} from '../yugioh.service';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-filter-dialog',\r\n  templateUrl: './filter-dialog.component.html',\r\n  styleUrls: ['./filter-dialog.component.scss']\r\n})\r\nexport class FilterDialogComponent implements OnInit {\r\n\r\n  cardTypes = [\r\n    'Normal',\r\n    'Effect',\r\n    'Fusion',\r\n    'Ritual',\r\n    'Synchro',\r\n    'Xyz',\r\n    'Pendulum',\r\n    'Link',\r\n    'Spell',\r\n    'Trap'\r\n  ];\r\n  activeCardTypes = [];\r\n\r\n  attributes = [\r\n    'LIGHT',\r\n    'DARK',\r\n    'WATER',\r\n    'FIRE',\r\n    'EARTH',\r\n    'WIND',\r\n    'DIVINE'\r\n  ];\r\n  activeAttributes = [];\r\n\r\n  levels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\n  activeLevels = [];\r\n\r\n  monsterRaces = [\r\n    'Aqua',\r\n    'Beast',\r\n    'Beast-Warrior',\r\n    'Creator-God',\r\n    'Cyberse',\r\n    'Dinosaur',\r\n    'Divine-Beast',\r\n    'Dragon',\r\n    'Fairy',\r\n    'Fiend',\r\n    'Fish',\r\n    'Insect',\r\n    'Machine',\r\n    'Plant',\r\n    'Psychic',\r\n    'Pyro',\r\n    'Reptile',\r\n    'Rock',\r\n    'Sea Serpent',\r\n    'Spellcaster',\r\n    'Thunder',\r\n    'Warrior',\r\n    'Winged Beast',\r\n    'Wyrm',\r\n    'Zombie'\r\n  ];\r\n  activeMonsterRaces = [];\r\n\r\n  spellRaces = [\r\n    'Normal',\r\n    'Field',\r\n    'Equip',\r\n    'Continuous',\r\n    'Quick-Play',\r\n    'Ritual',\r\n  ];\r\n  activeSpellRaces = [];\r\n\r\n  trapRaces = [\r\n    'Normal',\r\n    'Continuous',\r\n    'Counter'\r\n  ];\r\n  activeTrapRaces = [];\r\n\r\n  archetypeControl = new UntypedFormControl('');\r\n  archetype;\r\n  activeArchetype = '';\r\n  options: string[] = [];\r\n  filteredOptions: Observable<string[]>;\r\n\r\n  tmpFilterDto: FilterDto;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: FilterDto,\r\n              private dialogRef: MatDialogRef<FilterDialogComponent>, private yugiohService: YugiohService) {\r\n    this.filteredOptions = this.archetypeControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value || '')),\r\n    );\r\n\r\n    this.tmpFilterDto = JSON.parse(JSON.stringify(data));\r\n    console.log(this.tmpFilterDto);\r\n    this.activeLevels = this.tmpFilterDto.levels;\r\n    this.activeAttributes = this.tmpFilterDto.attributes;\r\n    this.activeCardTypes = this.tmpFilterDto.cardTypes;\r\n    this.activeMonsterRaces = this.tmpFilterDto.monsterRaces;\r\n    this.activeSpellRaces = this.tmpFilterDto.spellRaces;\r\n    this.activeTrapRaces = this.tmpFilterDto.trapRaces;\r\n    this.archetypeControl.setValue(this.tmpFilterDto.archetype);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.yugiohService.getArchetypes().subscribe(value => this.options = value);\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onConfirmClick(): void {\r\n    this.data.attributes = this.activeAttributes;\r\n    this.data.levels = this.activeLevels;\r\n    this.data.cardTypes = this.activeCardTypes;\r\n    this.data.monsterRaces = this.activeMonsterRaces;\r\n    this.data.spellRaces = this.activeSpellRaces;\r\n    this.data.trapRaces = this.activeTrapRaces;\r\n    this.data.archetype = this.activeArchetype;\r\n    console.log(this.data);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  toggle(filter, filterList) {\r\n    const index = filterList.indexOf(filter);\r\n    if (index === -1) { // Not present\r\n      filterList.push(filter);\r\n    } else { // Present\r\n      filterList.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.activeAttributes = [];\r\n    this.activeLevels = [];\r\n    this.activeCardTypes = [];\r\n    this.activeMonsterRaces = [];\r\n    this.activeSpellRaces = [];\r\n    this.activeTrapRaces = [];\r\n    this.archetypeControl.setValue(undefined);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    this.activeArchetype = value;\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n","<h1 mat-dialog-title>\r\n  <div style=\"display: flex; justify-content: space-between\">\r\n    <div>Filtres</div>\r\n    <div>\r\n      <button mat-button type=\"button\" (click)=\"clear()\">Réinitialiser</button>\r\n    </div>\r\n  </div>\r\n</h1>\r\n<div mat-dialog-content>\r\n  <div *ngIf=\"data.collectionView\" style=\"display: flex;\">\r\n    <div style=\"width: 20%; margin-right: 8px;\">Type de carte</div>\r\n    <div style=\"display: flex; width: 80%; flex-wrap: wrap\">\r\n      <div *ngFor=\"let cardtype of cardTypes\"\r\n           style=\"cursor: pointer; padding: 8px; margin: 2px;  border-radius: 4px; border: 1px black solid;\"\r\n           (click)=\"toggle(cardtype, activeCardTypes)\"\r\n           [ngClass]=\"activeCardTypes.indexOf(cardtype) !== -1 ? 'selected' : ''\">\r\n        {{cardtype}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"display: flex;\">\r\n    <div style=\"width: 20%; margin-right: 8px\">Attribut</div>\r\n    <div style=\"display: flex; width: 80%; flex-wrap: wrap\">\r\n      <div *ngFor=\"let attribute of attributes\"\r\n           style=\"cursor: pointer; padding: 8px; margin: 2px;  border-radius: 4px; border: 1px black solid;\"\r\n           (click)=\"toggle(attribute, activeAttributes)\"\r\n           [ngClass]=\"activeAttributes.indexOf(attribute) !== -1 ? 'selected' : ''\">\r\n        {{attribute}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"display: flex;\">\r\n    <div style=\"width: 20%; margin-right: 8px\">Level / Rank / Link</div>\r\n    <div style=\"display: flex; width: 80%; flex-wrap: wrap\">\r\n      <div *ngFor=\"let level of levels\"\r\n           style=\"cursor: pointer; padding: 8px; margin: 2px;  border-radius: 4px; border: 1px black solid;\"\r\n           (click)=\"toggle(level, activeLevels)\" [ngClass]=\"activeLevels.indexOf(level) !== -1 ? 'selected' : ''\">\r\n        {{level}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"display: flex;\">\r\n    <div style=\"width: 20%; margin-right: 8px\">Type de monstre</div>\r\n    <div style=\"display: flex; width: 80%; flex-wrap: wrap\">\r\n      <div *ngFor=\"let race of monsterRaces\"\r\n           style=\"cursor: pointer; padding: 8px; margin: 2px;  border-radius: 4px; border: 1px black solid;\"\r\n           (click)=\"toggle(race, activeMonsterRaces)\"\r\n           [ngClass]=\"activeMonsterRaces.indexOf(race) !== -1 ? 'selected' : ''\">\r\n        {{race}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"display: flex;\">\r\n    <div style=\"width: 20%; margin-right: 8px\">Type de magie</div>\r\n    <div style=\"display: flex; width: 80%; flex-wrap: wrap\">\r\n      <div *ngFor=\"let spell of spellRaces\"\r\n           style=\"cursor: pointer; padding: 8px; margin: 2px;  border-radius: 4px; border: 1px black solid;\"\r\n           (click)=\"toggle(spell, activeSpellRaces)\"\r\n           [ngClass]=\"activeSpellRaces.indexOf(spell) !== -1 ? 'selected' : ''\">\r\n        {{spell}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"display: flex;\">\r\n    <div style=\"width: 20%; margin-right: 8px\">Type de piège</div>\r\n    <div style=\"display: flex; width: 80%; flex-wrap: wrap\">\r\n      <div *ngFor=\"let trap of trapRaces\"\r\n           style=\"cursor: pointer; padding: 8px; margin: 2px;  border-radius: 4px; border: 1px black solid;\"\r\n           (click)=\"toggle(trap, activeTrapRaces)\"\r\n           [ngClass]=\"activeTrapRaces.indexOf(trap) !== -1 ? 'selected' : ''\">\r\n        {{trap}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div style=\"display: flex;\">\r\n    <div style=\"width: 20%; margin-right: 8px\">Archétype</div>\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <input type=\"text\"\r\n             placeholder=\"Branded...\"\r\n             matInput\r\n             [formControl]=\"archetypeControl\"\r\n             [matAutocomplete]=\"auto\">\r\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n          {{option}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button type=\"button\" (click)=\"onCancelClick()\">Annuler</button>\r\n  <button mat-button type=\"button\" (click)=\"onConfirmClick()\">Ok</button>\r\n</div>\r\n","export class FilterDto {\r\n  attributes = [];\r\n  levels = [];\r\n  cardTypes = [];\r\n  monsterRaces = [];\r\n  spellRaces = [];\r\n  trapRaces = [];\r\n  archetype;\r\n  collectionView = true;\r\n}\r\n","import {Component, Inject} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-full-image-dialog',\r\n  templateUrl: './full-image-dialog.component.html',\r\n  styleUrls: ['./full-image-dialog.component.scss']\r\n})\r\nexport class FullImageDialogComponent {\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<FullImageDialogComponent>\r\n  ) {}\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}\r\n","<mat-dialog-content style=\"max-height: 100vh;\">\r\n   <img [src]=\"data\">\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"center\">\r\n  <button mat-button mat-dialog-close>Close</button>\r\n</mat-dialog-actions>\r\n","import {HttpHeaders} from '@angular/common/http';\r\n\r\n// export const backendUrl = 'https://smash-production.up.railway.app';\r\nexport const backendUrl = 'https://smash-back.herokuapp.com';\r\n// export const backendUrl = 'http://localhost:8080';\r\n\r\nexport const ygoproApiUrl = 'https://db.ygoprodeck.com/api/v7/cardinfo.php';\r\n\r\nexport const idAllCollections = 'allCollections';\r\n\r\nexport const httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  })\r\n};\r\n\r\n\r\n","import { Directive, ComponentFactory, ComponentRef, Input, TemplateRef, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { LoadingComponent } from './loading/loading.component';\n\n@Directive({\n  selector: '[appLoading]'\n})\nexport class LoadingDirective {\n\n  loadingFactory: ComponentFactory<LoadingComponent>;\n  loadingComponent: ComponentRef<LoadingComponent>;\n\n  @Input()\n  set appLoading(loading: boolean) {\n    this.vcRef.clear();\n\n    if (loading) {\n      // create and embed an instance of the loading component\n      this.loadingComponent = this.vcRef.createComponent(this.loadingFactory);\n    } else {\n      // embed the contents of the host template\n      this.vcRef.createEmbeddedView(this.templateRef);\n    }\n  }\n\n  constructor(private templateRef: TemplateRef<any>, private vcRef: ViewContainerRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n    // Create resolver for loading component\n    this.loadingFactory = this.componentFactoryResolver.resolveComponentFactory(LoadingComponent);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flex-center p-3 m-1\" style=\"flex-direction: column;\">\n    <div translate style=\"margin-bottom: 8px; font-size: large;\">LOADING</div>\n    <div>\n        <mat-spinner></mat-spinner>\n    </div>\n</div>","import {Component, Input, OnInit} from '@angular/core';\nimport {backendUrl} from '../global';\nimport {Card} from '../yu-gi-oh/collection/card';\nimport {YugiohService} from '../yugioh.service';\n\n@Component({\n  selector: 'app-modal-card-detail',\n  templateUrl: './modal-card-detail.component.html',\n  styleUrls: ['./modal-card-detail.component.scss']\n})\nexport class ModalCardDetailComponent implements OnInit {\n\n  backEndCardUrl = backendUrl + '/cards/';\n\n  @Input() card: Card;\n\n  cardmarketPrice: string;\n\n  constructor(private yugiohService: YugiohService) {\n    console.log(this.card);\n  }\n\n  ngOnInit(): void {\n    this.yugiohService.getCardPriceById(this.card?.apiId)\n      .subscribe(value => {\n        if (value?.data && value.data.length > 0) {\n          if (value.data[0]?.card_prices && value.data[0].card_prices.length > 0) {\n            this.cardmarketPrice = value.data[0].card_prices[0].cardmarket_price;\n          }\n        }\n      });\n  }\n}\n","<div style=\"opacity: 1; padding: 8px\">\n  <div style=\"display: flex; justify-content: space-between\">\n    <div style=\"display: flex; flex-direction: column;\">\n      <div style=\"font-weight: bolder; font-size: 20px; height: 100%\">\n        {{card.name}}\n      </div>\n      <div>{{card.race}}, {{card.attribute}}</div>\n      <div>\n        {{card.type}}<span *ngIf=\"card.type !== 'Spell Card' && card.type !== 'Trap Card'\">, {{card.atk}}\n        ATK, {{card.def}} DEF <br>Level / Rank / Link : {{card.level}}</span>\n      </div>\n    </div>\n\n    <img class=\"img-fluid\" style=\"margin-right: 4px; width:124px;height:124px;border:0\"\n         src=\"{{backEndCardUrl + card.apiId + '/image-cropped'}}\"\n         alt=\"Character picture\">\n  </div>\n\n  <mat-divider style=\"width: 94%; margin-left: 3%;margin-top: 4px;padding-bottom: 4px; color: black\"></mat-divider>\n  <div>\n    <div>{{card.description}}</div>\n    <div *ngIf=\"cardmarketPrice\">Prix CardMarket : {{cardmarketPrice}}€</div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flex-center\" style=\"flex-direction: column; height: 100%\">\n    <div style=\"margin-top:10%; font-size: 5rem;\">\n        <i class=\"far fa-frown-open\"></i>\n    </div>\n    <h1 style=\"line-height: 1\" translate>404-MESSAGE</h1>\n    <button mat-stroked-button routerLink=\"/\" style=\"margin-top:16px;\"><span translate>GO-BACK</span></button>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(protected sanitizer: DomSanitizer) { }\r\n\r\n  public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n      case 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\r\n      case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n      case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n      case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n      case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n      default: throw new Error(`Invalid safe type specified: ${type}`);\r\n    }\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FilterDto} from '../filter-dialog/filter-dto';\r\nimport {FilterDialogComponent} from '../filter-dialog/filter-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as ydke from 'ydke';\r\nimport {CollectionImportPojo} from '../yu-gi-oh/collection/collection-import-pojo';\r\nimport {SortDialogComponent} from '../sort-dialog/sort-dialog.component';\r\nimport {CardSort} from '../sort-dialog/card-sort';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  @Input() showYdke = true;\r\n  @Input() showDownloadAndUpload = true;\r\n\r\n  searchValue: string;\r\n  @Output() searchValueChanged = new EventEmitter<string>();\r\n\r\n  filterDto: FilterDto = new FilterDto();\r\n  @Output() filterDtoChanged = new EventEmitter<FilterDto>();\r\n\r\n  sort = CardSort.alphabeticalAsc;\r\n  @Output() sortChanged = new EventEmitter<CardSort>();\r\n\r\n  @Output() downloadClicked = new EventEmitter<void>();\r\n  @Output() importYdkeClicked = new EventEmitter<Array<CollectionImportPojo>>();\r\n  @Output() exportYdkeClicked = new EventEmitter<void>();\r\n  @Output() importDialogClicked = new EventEmitter<void>();\r\n\r\n  constructor(public dialog: MatDialog, private snackBar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // TODO : ajout parametrer searchValue by default (cas http://localhost:4200/yu-gi-oh/decks/24274?cardSearchValue=ultim)\r\n    // TODO : afficher filtre icon avec border si filterDto != null\r\n  }\r\n\r\n  refreshSearchValue() {\r\n    this.searchValueChanged.emit(this.searchValue);\r\n  }\r\n\r\n  isFiltered() {\r\n    return this.filterDto.attributes.length > 0\r\n      || this.filterDto.levels.length > 0\r\n      || this.filterDto.cardTypes.length > 0\r\n      || this.filterDto.monsterRaces.length > 0\r\n      || this.filterDto.spellRaces.length > 0\r\n      || this.filterDto.trapRaces.length > 0\r\n      || this.filterDto.archetype;\r\n  }\r\n\r\n  openFilterDialog() {\r\n    const dialog = this.dialog.open(FilterDialogComponent, {\r\n      width: '500px',\r\n      data: this.filterDto\r\n    });\r\n\r\n    dialog.afterClosed().subscribe(() => {\r\n      this.filterDtoChanged.emit(this.filterDto);\r\n    });\r\n  }\r\n\r\n  download() {\r\n    this.downloadClicked.emit();\r\n  }\r\n\r\n  exportAsYdke() {\r\n    this.exportYdkeClicked.emit();\r\n  }\r\n\r\n  // TODO : handle langue for import ydke (full french or full english)\r\n  importAsYdke() {\r\n    navigator.clipboard.readText().then(ydkeString => {\r\n      try {\r\n        const deck = ydke.parseURL(ydkeString);\r\n        const lines = new Array<CollectionImportPojo>();\r\n\r\n        const mapMainApiIdQuantity = new Map<number, number>();\r\n        deck.main.forEach(apiId => {\r\n          const quantity = mapMainApiIdQuantity.get(apiId);\r\n          if (quantity) {\r\n            mapMainApiIdQuantity.set(apiId, quantity + 1);\r\n          } else {\r\n            mapMainApiIdQuantity.set(apiId, 1);\r\n          }\r\n        });\r\n\r\n        const mapExtraApiIdQuantity = new Map<number, number>();\r\n        deck.extra.forEach(apiId => {\r\n          const quantity = mapExtraApiIdQuantity.get(apiId);\r\n          if (quantity) {\r\n            mapExtraApiIdQuantity.set(apiId, quantity + 1);\r\n          } else {\r\n            mapExtraApiIdQuantity.set(apiId, 1);\r\n          }\r\n        });\r\n\r\n        const mapSideApiIdQuantity = new Map<number, number>();\r\n        deck.side.forEach(apiId => {\r\n          const quantity = mapSideApiIdQuantity.get(apiId);\r\n          if (quantity) {\r\n            mapSideApiIdQuantity.set(apiId, quantity + 1);\r\n          } else {\r\n            mapSideApiIdQuantity.set(apiId, 1);\r\n          }\r\n        });\r\n\r\n        mapMainApiIdQuantity.forEach((value, key) =>\r\n          lines.push(new CollectionImportPojo(value, null, null, 0, String(key))));\r\n        mapExtraApiIdQuantity.forEach((value, key) =>\r\n          lines.push(new CollectionImportPojo(value, null, null, 1, String(key))));\r\n        mapSideApiIdQuantity.forEach((value, key) =>\r\n          lines.push(new CollectionImportPojo(value, null, null, 2, String(key))));\r\n\r\n        console.log(lines);\r\n\r\n        this.importYdkeClicked.emit(lines);\r\n      } catch (exception) {\r\n        this.openSnackBar('Deck impossible à importer : ' + exception, 'OK');\r\n      }\r\n    }, reason => this.openSnackBar('Deck impossible à importer : ' + reason, 'OK'));\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  openImportDialog() {\r\n    this.importDialogClicked.emit();\r\n  }\r\n\r\n  openSortDialog() {\r\n    const dialogRef = this.dialog.open(SortDialogComponent, {\r\n      width: '300px',\r\n      data: {\r\n        sort: this.sort !== undefined ? this.sort : null,\r\n        collectionView: true\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(value => {\r\n      this.sort = value;\r\n      this.sortChanged.emit(this.sort);\r\n    });\r\n  }\r\n}\r\n","<div style=\"display: flex; flex-direction: column; align-items: center\">\n  <div style=\"margin-top: 4px\">\n    <button mat-stroked-button *ngIf=\"showDownloadAndUpload\" (click)=\"openImportDialog()\">\n      import\n    </button>\n    <button style=\"margin-left: 4px\" mat-stroked-button *ngIf=\"showDownloadAndUpload\" (click)=\"download()\">\n      export\n    </button>\n\n    <button style=\"margin-left: 4px\" mat-stroked-button *ngIf=\"showYdke\" (click)=\"exportAsYdke()\">\n      YDKE export\n    </button>\n    <button style=\"margin-left: 4px\" mat-stroked-button *ngIf=\"showYdke\" (click)=\"importAsYdke()\">\n      YDKE import\n    </button>\n  </div>\n  <div style=\"display: flex; align-items: center; justify-content: center; flex-wrap: wrap\">\n    <div>\n      <mat-icon (click)=\"openFilterDialog()\"\n                [ngClass]=\"isFiltered() ? 'selected' : ''\">\n        filter_alt\n      </mat-icon>\n    </div>\n    <mat-form-field style=\"width: 400px;\" appearance=\"outline\">\n      <mat-label>Recherche de cartes</mat-label>\n      <input matInput type=\"text\" accept=\"image/png, image/jpeg\" [(ngModel)]=\"searchValue\"\n             (keyup)=\"refreshSearchValue()\">\n      <button *ngIf=\"searchValue\" matSuffix mat-icon-button aria-label=\"Clear\"\n              (click)=\"searchValue=''; refreshSearchValue()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n    <div>\n      <mat-icon (click)=\"openSortDialog()\">\n        sort\n      </mat-icon>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\nexport interface SnackBarData {\n  isSuccess: boolean;\n  body: any;\n  url: string;\n  endpoint: string;\n  extraMessage: string;\n  doAction(): void;\n}\n\n@Component({\n  selector: 'app-snack-bar',\n  templateUrl: './snack-bar.component.html',\n  styleUrls: ['./snack-bar.component.scss']\n})\nexport class SnackBarComponent implements OnInit {\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: SnackBarData) { }\n\n  ngOnInit(): void {\n  }\n\n  doAction() {\n    this.data.doAction();\n  }\n\n}\n","<div style=\"display:flex; justify-content: space-between; word-break: break-word; align-items: center;\">\n    <div *ngIf=\"data.isSuccess\" style=\"width:70%;\">Service {{ data.endpoint }} executed with success</div>\n    <div *ngIf=\"!data.isSuccess\" style=\"width:70%;\">Service {{ data.endpoint }} failed <div *ngIf=\"data.extraMessage\">\n            <br>{{data.extraMessage}}</div>\n    </div>\n\n    <div style=\"width:30%;\">\n        <button style=\"float:right;\" mat-stroked-button (click)=\"doAction()\"><span\n                [translate]=\"data.isSuccess ? 'OK' : 'RETRY'\"></span></button>\n    </div>\n</div>","export enum CardSort {\r\n  alphabeticalAsc,\r\n  alphabeticalDesc,\r\n  nbOwnedAsc,\r\n  nbOwnedDesc,\r\n  rarityAsc,\r\n  rarityDesc,\r\n  levelRankLinkAsc,\r\n  levelRankLinkDesc,\r\n  atkAsc,\r\n  atkDesc,\r\n  defAsc,\r\n  defDesc,\r\n  priceAsc,\r\n  priceDesc\r\n}\r\n","import {Component, Inject} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport {CardSort} from './card-sort';\r\n\r\n@Component({\r\n  selector: 'app-sort-dialog',\r\n  templateUrl: './sort-dialog.component.html',\r\n  styleUrls: ['./sort-dialog.component.scss']\r\n})\r\nexport class SortDialogComponent {\r\n\r\n  CardSort = CardSort;\r\n  sort = CardSort.alphabeticalAsc;\r\n  collectionView = true;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<SortDialogComponent>\r\n  ) {\r\n    this.sort = data.sort;\r\n    this.collectionView = data.collectionView;\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(this.data.sort);\r\n  }\r\n\r\n  onConfirmClick(chosenFilter: CardSort): void {\r\n    this.dialogRef.close(chosenFilter);\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title> Tri </h1>\r\n<div mat-dialog-content>\r\n  <div style=\"display: flex; justify-content: space-between\">\r\n    <div>A-Z</div>\r\n    <div>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.alphabeticalAsc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n        [ngClass]=\"sort === CardSort.alphabeticalAsc ? 'selected' : ''\">\r\n        arrow_upward\r\n      </mat-icon>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.alphabeticalDesc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.alphabeticalDesc ? 'selected' : ''\">\r\n        arrow_downward\r\n      </mat-icon>\r\n    </div>\r\n  </div>\r\n  <div  *ngIf=\"collectionView\" style=\"display: flex; justify-content: space-between\">\r\n    <div>Nombre possédé</div>\r\n    <div>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.nbOwnedAsc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n        [ngClass]=\"sort === CardSort.nbOwnedAsc ? 'selected' : ''\">\r\n        arrow_upward\r\n      </mat-icon>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.nbOwnedDesc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.nbOwnedDesc ? 'selected' : ''\">\r\n        arrow_downward\r\n      </mat-icon>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"false\" style=\"display: flex; justify-content: space-between\">\r\n    <div>Rareté</div>\r\n    <div>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.rarityAsc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.rarityAsc ? 'selected' : ''\">\r\n        arrow_upward\r\n      </mat-icon>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.rarityDesc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.rarityDesc ? 'selected' : ''\">\r\n        arrow_downward\r\n      </mat-icon>\r\n    </div>\r\n  </div>\r\n  <div style=\"display: flex; justify-content: space-between\">\r\n    <div>Level / Rank / Link</div>\r\n    <div>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.levelRankLinkAsc)\"\r\n                style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.levelRankLinkAsc ? 'selected' : ''\">\r\n        arrow_upward\r\n      </mat-icon>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.levelRankLinkDesc)\"\r\n                style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.levelRankLinkDesc ? 'selected' : ''\">\r\n        arrow_downward\r\n      </mat-icon>\r\n    </div>\r\n  </div>\r\n  <div style=\"display: flex; justify-content: space-between\">\r\n    <div>ATK</div>\r\n    <div>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.atkAsc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.atkAsc ? 'selected' : ''\">\r\n        arrow_upward\r\n      </mat-icon>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.atkDesc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.atkDesc ? 'selected' : ''\">\r\n        arrow_downward\r\n      </mat-icon>\r\n    </div>\r\n  </div>\r\n  <div style=\"display: flex; justify-content: space-between\">\r\n    <div>DEF</div>\r\n    <div>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.defAsc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.defAsc ? 'selected' : ''\">\r\n        arrow_upward\r\n      </mat-icon>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.defDesc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.defDesc ? 'selected' : ''\">\r\n        arrow_downward\r\n      </mat-icon>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"collectionView\" style=\"display: flex; justify-content: space-between\">\r\n    <div>Prix</div>\r\n    <div>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.priceAsc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.priceAsc ? 'selected' : ''\">\r\n        arrow_upward\r\n      </mat-icon>\r\n      <mat-icon (click)=\"onConfirmClick(CardSort.priceDesc)\" style=\"position: relative; left: 8px; cursor: pointer;\"\r\n                [ngClass]=\"sort === CardSort.priceDesc ? 'selected' : ''\">\r\n        arrow_downward\r\n      </mat-icon>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button type=\"button\" (click)=\"onCancelClick()\">Cancel</button>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.scss']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n  @Output() fileUploaded = new EventEmitter<File>();\r\n  imagePreview;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  uploadFile(event) {\r\n    // for (let index = 0; index < event.length; index++) {\r\n    const element = event[0]; // we keep only the 1st image\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(element);\r\n    reader.onload = () => {\r\n      this.fileUploaded.emit(element);\r\n      this.imagePreview = reader.result;\r\n    };\r\n    // }\r\n  }\r\n\r\n  deleteImage() {\r\n    this.fileUploaded.emit(null);\r\n    this.imagePreview = null;\r\n  }\r\n\r\n}\r\n","<div class=\"uploadfilecontainer\" (click)=\"fileInput.click()\" appDragDrop (onFileDropped)=\"uploadFile($event)\">\r\n    <input hidden type=\"file\" #fileInput (change)=\"uploadFile($event.target.files)\">\r\n</div>\r\n<div class=\"file-preview\" *ngIf=\"imagePreview\">\r\n    <img [src]=\"imagePreview\" style=\"height: 150px; margin-right: 16px;\" height=\"120px\">\r\n    <mat-icon class=\"delete-file\" [ngStyle]=\"{'color':'white'}\" (click)=\"deleteImage()\" aria-hidden=\"false\"\r\n        aria-label=\"Delte icon\">delete</mat-icon>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-yes-no-dialog',\r\n  templateUrl: './yes-no-dialog.component.html',\r\n  styleUrls: ['./yes-no-dialog.component.scss']\r\n})\r\nexport class YesNoDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Suppression</h1>\r\n<div mat-dialog-content>\r\n  <p>Etes-vous sûr ?</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button [mat-dialog-close]=\"false\" cdkFocusInitial>Non</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" >Oui</button>\r\n</div>\r\n","import {AfterViewInit, Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {Card} from './card';\r\nimport {Utils} from './utils';\r\nimport {Subject} from 'rxjs';\r\nimport {FilterDto} from '../../filter-dialog/filter-dto';\r\nimport {CardSort} from '../../sort-dialog/card-sort';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\r\nimport {SortDialogComponent} from '../../sort-dialog/sort-dialog.component';\r\nimport {FilterDialogComponent} from '../../filter-dialog/filter-dialog.component';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {YugiohService} from '../../yugioh.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Router} from '@angular/router';\r\nimport {backendUrl} from '../../global';\r\n\r\n@Component({\r\n  selector: 'app-card-consultation',\r\n  templateUrl: './card-consultation.component.html',\r\n  styleUrls: ['./card-consultation.component.scss']\r\n})\r\nexport class CardConsultationComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('matPaginator') matPaginator: MatPaginator;\r\n\r\n  backEndCardUrl = backendUrl + '/cards/';\r\n\r\n  totalNumberOfCards = 0;\r\n  defaultPageSize = 25;\r\n  globalCards = new Array<Card>();\r\n  mainDeckMap = Utils.cardColorMap;\r\n  private searchSub2$ = new Subject<string>();\r\n  cardSearchValue2: any;\r\n  filterDto: FilterDto = new FilterDto();\r\n  sort = CardSort.alphabeticalAsc;\r\n\r\n  constructor(private yugiohService: YugiohService, private snackBar: MatSnackBar, public dialog: MatDialog, public router: Router,\r\n              private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.searchSub2$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged()\r\n    ).subscribe(() => {\r\n      this.refreshPaginator();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.refreshPaginator();\r\n  }\r\n\r\n  refreshPaginator() {\r\n    this.matPaginator.pageIndex = 0;\r\n    this.matPaginator._changePageSize(this.matPaginator.pageSize);\r\n  }\r\n\r\n  applyCardFilterForGlobalCards($event: KeyboardEvent, inputElement: HTMLInputElement) {\r\n    let searchValue;\r\n    if ($event) {\r\n      searchValue = ($event.target as HTMLInputElement).value;\r\n    } else {\r\n      searchValue = '';\r\n    }\r\n    this.cardSearchValue2 = searchValue;\r\n    this.searchSub2$.next(searchValue);\r\n    inputElement.focus();\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    console.log('pageChanged');\r\n    this.yugiohService.getCardsPaginated($event.pageIndex, $event.pageSize, this.sort, this.cardSearchValue2, this.filterDto)\r\n      .subscribe(response => {\r\n        this.globalCards = response.body;\r\n        this.totalNumberOfCards = Number(response.headers.get('pageTotalElements'));\r\n      });\r\n  }\r\n\r\n  openSortDialog() {\r\n    const dialogRef = this.dialog.open(SortDialogComponent, {\r\n      width: '300px',\r\n      data: {\r\n        sort: this.sort !== undefined ? this.sort : null,\r\n        collectionView: false\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(value => {\r\n      console.log(value);\r\n      this.sort = value;\r\n      this.refreshPaginator();\r\n    });\r\n  }\r\n\r\n  filter() {\r\n    this.filterDto.collectionView = false;\r\n    const dialog = this.dialog.open(FilterDialogComponent, {\r\n      width: '500px',\r\n      data: this.filterDto\r\n    });\r\n\r\n    dialog.afterClosed().subscribe(() => {\r\n      console.log(this.filterDto);\r\n      this.refreshPaginator();\r\n    });\r\n  }\r\n\r\n  isFiltered() {\r\n    return this.filterDto.attributes.length > 0\r\n      || this.filterDto.levels.length > 0\r\n      || this.filterDto.cardTypes.length > 0\r\n      || this.filterDto.monsterRaces.length > 0\r\n      || this.filterDto.spellRaces.length > 0\r\n      || this.filterDto.trapRaces.length > 0\r\n      || this.filterDto.archetype;\r\n  }\r\n\r\n  open(content: TemplateRef<any>) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      // this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n}\r\n","<div style=\"display: flex; flex-direction: column; align-items: center\">\r\n  <div style=\"width: 80%; padding: 1rem; display: flex; align-items: center\">\r\n    <mat-icon (click)=\"filter()\" style=\"position: relative; margin: 8px; cursor: pointer;\"\r\n              [ngClass]=\"isFiltered() ? 'selected' : ''\">\r\n      filter_alt\r\n    </mat-icon>\r\n    <div class=\"bAXgkK\">\r\n      <div class=\"qmUrg\">\r\n        <input #inputElement2 (keyup)=\"applyCardFilterForGlobalCards($event, inputElement2)\"\r\n               [(ngModel)]=\"cardSearchValue2\"\r\n               id=\"sidebar-search-input-for-cards\" placeholder=\"Rechercher une carte\" tabindex=\"0\">\r\n        <mat-icon (click)=\"applyCardFilterForGlobalCards(null, inputElement2)\" class=\"jNdboZ\">\r\n          clear\r\n        </mat-icon>\r\n      </div>\r\n    </div>\r\n    <mat-icon (click)=\"openSortDialog()\" style=\"position: relative; margin: 8px; cursor: pointer;\">\r\n      sort\r\n    </mat-icon>\r\n  </div>\r\n  <div class=\"card-group-container\">\r\n    <div *ngFor=\"let card of globalCards;\" class=\"card-container\"\r\n         [style.background-color]=\"mainDeckMap.get(card.type)\"\r\n         (click)=\"open(content)\">\r\n      <div class=\"card-container-inside\"\r\n           [matBadge]=\"card.banListInfo?.banTcg | ban\"\r\n           [matBadgeHidden]=\"card.banListInfo?.banTcg === null\">\r\n        <div class=\"card-name\">\r\n          <div style=\"display: flex; align-items: center\">\r\n            <img [src]=\"backEndCardUrl + card.apiId + '/image'\" alt=\"website icon\"\r\n                 style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n            <div>{{card.name}}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-template #content let-modal>\r\n        <app-modal-card-detail [card]=\"card\"></app-modal-card-detail>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <mat-paginator #matPaginator style=\"padding-bottom: 1vh\" [length]=\"totalNumberOfCards\"\r\n                 [pageSize]=\"defaultPageSize\"\r\n                 [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                 (page)=\"onPageChanged($event)\"\r\n                 aria-label=\"Select page\">\r\n  </mat-paginator>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {CollectionImportPojo} from './collection-import-pojo';\r\nimport {CollectionItemComparison} from './collection-item-comparison';\r\nimport {CollectionItem} from './collection-item';\r\nimport {Card} from './card';\r\nimport {YugiohService} from '../../yugioh.service';\r\n\r\n@Component({\r\n  selector: 'app-card-matcher',\r\n  templateUrl: './card-matcher.component.html',\r\n  styleUrls: ['./card-matcher.component.scss']\r\n})\r\nexport class CardMatcherComponent implements OnInit {\r\n\r\n  placeholder = `1 Souleating Oviraptor\r\n1x Aérosol de Destruction\r\n6x TrOU noIr\r\n2 Ultimate Conductor Tyranno\r\n\r\nNe pas mettre de set, il faut forcément mettre un nombre avant le nom de la carte`;\r\n  cardsForComparison = '';\r\n  foundLines = new Array<CollectionImportPojo>();\r\n  missingLines = new Array<CollectionImportPojo>();\r\n  foundCollectionItems = new Array<CollectionItemComparison>();\r\n  incompleteCollectionItems = new Array<CollectionItemComparison>();\r\n  missingCollectionItems = new Array<CollectionItemComparison>();\r\n  totalPrice: number;\r\n  foundCollectionItemsPrice: number;\r\n  incompleteCollectionItemsPrice: number;\r\n  missingCollectionItemsPrice: number;\r\n\r\n  constructor(private yugiohService: YugiohService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getCardsForComparison() {\r\n    this.totalPrice = 0;\r\n    const cardLines = this.cardsForComparison.split(/[\\r\\n]+/);\r\n    console.log(cardLines);\r\n\r\n    const lines = new Array<CollectionImportPojo>();\r\n\r\n    for (const line of cardLines) {\r\n      if (line && line.trim().length > 0) {\r\n        if (line.charAt(0) >= '0' && line.charAt(0) <= '9') { // first character is a number\r\n          const lineSplit = line.trim().split(/ +/); // to handle cases like \"  first    middle    last    \"\r\n          // tslint:disable-next-line:max-line-length\r\n          const cardNumber = lineSplit[0].split('x')[0];\r\n          let cardName = '';\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 1; i < lineSplit.length; i++) {\r\n            if (lineSplit[i] && lineSplit.length > 0) {\r\n              cardName += lineSplit[i] + ' ';\r\n            }\r\n          }\r\n          lines.push(new CollectionImportPojo(Number(cardNumber), cardName.trim(), null, 0));\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(lines);\r\n    this.foundCollectionItems = undefined;\r\n    this.incompleteCollectionItems = undefined;\r\n    this.missingCollectionItems = undefined;\r\n    this.foundLines = [];\r\n    this.missingLines = [];\r\n    let nbLinesGot = lines.length;\r\n    // TODO : JS pipe or something like that\r\n    for (const line of lines) {\r\n      this.yugiohService.getCardbyName(line.cardName).subscribe(value => {\r\n        line.cardApiId = value.apiId;\r\n        this.foundLines.push(line);\r\n        console.log(this.foundLines);\r\n        nbLinesGot -= 1;\r\n        if (nbLinesGot === 0) {\r\n          this.compareToCollections();\r\n        }\r\n      }, error => {\r\n        this.missingLines.push(line);\r\n        nbLinesGot -= 1;\r\n        if (nbLinesGot === 0) {\r\n          this.compareToCollections();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  compareToCollections() {\r\n    const collectionItems: CollectionItem[] = [];\r\n\r\n    this.foundLines.forEach(line => {\r\n      const card = new Card();\r\n      card.name = line.cardName;\r\n      card.apiId = line.cardApiId;\r\n      const collectionItem = new CollectionItem(0, card, null);\r\n      collectionItem.quantity = line.cardNumber;\r\n      collectionItems.push(collectionItem);\r\n    });\r\n\r\n    this.generateTotalPrice(collectionItems);\r\n    this.findCardsInCollectionAndAssociatePrices(collectionItems);\r\n  }\r\n\r\n  private generateTotalPrice(collectionItems: CollectionItem[]) {\r\n    const apiIds = collectionItems.map(value => value.card.apiId);\r\n    this.yugiohService.getCardsPriceById(apiIds)\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        if (value?.data && value.data.length > 0) {\r\n          const map = new Map<string, number>();\r\n          for (const data of value.data) {\r\n            map.set(String(data.id), data.card_prices[0].cardmarket_price);\r\n          }\r\n          this.totalPrice = 0;\r\n          console.log(map);\r\n          collectionItems.forEach(item => {\r\n            const price = Number(map.get(item.card.apiId));\r\n            if (price) {\r\n              this.totalPrice += price * item.quantity;\r\n              item.card.price = price;\r\n            } else {\r\n              console.log(item.card.apiId);\r\n              item.card.price = 0;\r\n            }\r\n          });\r\n          console.log(this.totalPrice);\r\n          // Keep only last 2 digits\r\n          this.totalPrice = Number(this.totalPrice.toFixed(2));\r\n          this.findCardsInCollectionAndAssociatePrices(collectionItems);\r\n        }\r\n      });\r\n  }\r\n\r\n  private findCardsInCollectionAndAssociatePrices(collectionItems: CollectionItem[]) {\r\n    this.foundCollectionItemsPrice = 0;\r\n    this.incompleteCollectionItemsPrice = 0;\r\n    this.missingCollectionItemsPrice = 0;\r\n    this.yugiohService.findCardsInCollection(collectionItems)\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        value[0].forEach(item => {\r\n          item.price = collectionItems.filter(itemm => itemm.card.name === item.cardName)[0]?.card?.price;\r\n          this.foundCollectionItemsPrice += item.price;\r\n        });\r\n        value[1].forEach(item => {\r\n          item.price = collectionItems.filter(itemm => itemm.card.name === item.cardName)[0]?.card?.price;\r\n          this.incompleteCollectionItemsPrice += item.price;\r\n        });\r\n        value[2].forEach(item => {\r\n          item.price = collectionItems.filter(itemm => itemm.card.name === item.cardName)[0]?.card?.price;\r\n          this.missingCollectionItemsPrice += item.price;\r\n        });\r\n\r\n        // Keep only last 2 digits\r\n        this.foundCollectionItemsPrice = Number(this.foundCollectionItemsPrice.toFixed(2));\r\n        this.incompleteCollectionItemsPrice = Number(this.incompleteCollectionItemsPrice.toFixed(2));\r\n        this.missingCollectionItemsPrice = Number(this.missingCollectionItemsPrice.toFixed(2));\r\n\r\n        this.foundCollectionItems = value[0];\r\n        this.incompleteCollectionItems = value[1];\r\n        this.missingCollectionItems = value[2];\r\n      });\r\n  }\r\n\r\n}\r\n","<div style=\"display: flex\">\r\n  <div\r\n    style=\"width: 50%; display: flex; flex-direction: column; align-items: center; margin-top: 8px; margin-left: 2%; margin-right: 1%\">\r\n    <button style=\"margin: 8px; width: fit-content\" (click)=\"getCardsForComparison()\" mat-raised-button>Rechercher\r\n      cartes\r\n    </button>\r\n    <textarea matInput\r\n              style=\"height: 300px; width: 100%; border: #3b3b3b 1px solid; padding: 8px; margin-bottom: 4px\"\r\n              [placeholder]=\"placeholder\" [(ngModel)]=\"cardsForComparison\"></textarea>\r\n    <div *ngIf=\"totalPrice && totalPrice > 0\" style=\"align-self: start; margin-bottom: 8px;\">Prix total estimé\r\n      : {{totalPrice}}€\r\n    </div>\r\n    <div *ngIf=\"missingLines && missingLines.length > 0\" style=\"align-self: start\">\r\n      <div>Les cartes suivantes n'existent pas :</div>\r\n      <div style=\"margin-left: 8px;\" *ngFor=\"let missingLine of missingLines\">{{missingLine.cardName}}</div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    style=\"width: 50%; display: flex; flex-direction: column; margin-top: 8px; margin-left:1%; margin-right: 2%\">\r\n    <div style=\"margin-bottom: 8px\" *ngIf=\"foundCollectionItems && foundCollectionItems.length > 0\">\r\n      <div style=\"font-size: 24px\">Trouvé (prix estimé {{foundCollectionItemsPrice}}€) :</div>\r\n      <div style=\"margin-left: 8px; display:flex; align-items:center\"\r\n           *ngFor=\"let foundCollectionItem of foundCollectionItems\">{{foundCollectionItem.cardName}}\r\n        <mat-icon [ngbTooltip]=\"tipContent\" [container]=\"'body'\" style=\"margin-left: 4px\">help_outline\r\n        </mat-icon>\r\n        <ng-template #tipContent>\r\n          <div style=\"background: black;padding: 8px; border-radius: 8px;\">\r\n            <div>Version française ? {{foundCollectionItem.foundInFrench ? 'oui' : 'non'}}</div>\r\n            <div>Version anglaise ? {{foundCollectionItem.foundInEnglish ? 'oui' : 'non'}}</div>\r\n            <div>Prix à l'unité : {{foundCollectionItem.price}}€</div>\r\n            <div>Trouvé dans les collections :</div>\r\n            <div style=\"margin-left: 4px\" *ngFor=\"let set of foundCollectionItem.setsFound\">{{set}}</div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n    <div style=\"margin-bottom: 8px\" *ngIf=\"incompleteCollectionItems && incompleteCollectionItems.length > 0\">\r\n      <div style=\"font-size: 24px\">Manquant en partie (prix estimé {{incompleteCollectionItemsPrice}}€) :</div>\r\n      <div style=\"margin-left: 8px; display:flex; align-items:center\"\r\n           *ngFor=\"let incompleteCollectionItem of incompleteCollectionItems\">{{incompleteCollectionItem.quantity}} {{incompleteCollectionItem.cardName}}\r\n        <mat-icon [ngbTooltip]=\"tipContent\" [container]=\"'body'\" style=\"margin-left: 4px\">help_outline\r\n        </mat-icon>\r\n        <ng-template #tipContent>\r\n          <div style=\"background: black; padding: 8px; border-radius: 8px;\">\r\n            <div>Version française ? {{incompleteCollectionItem.foundInFrench ? 'oui' : 'non'}}</div>\r\n            <div>Version anglaise ? {{incompleteCollectionItem.foundInEnglish ? 'oui' : 'non'}}</div>\r\n            <div>Prix à l'unité : {{incompleteCollectionItem.price}}€</div>\r\n            <div>Trouvé dans les collections :</div>\r\n            <div style=\"margin-left: 4px\" *ngFor=\"let set of incompleteCollectionItem.setsFound\">{{set}}</div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"missingCollectionItems && missingCollectionItems.length > 0\">\r\n      <div style=\"font-size: 24px\">Dans aucune collection (prix estimé {{missingCollectionItemsPrice}}€) :</div>\r\n      <div style=\"margin-left: 8px; display:flex; align-items:center\"\r\n           *ngFor=\"let missingCollectionItem of missingCollectionItems\">{{missingCollectionItem.cardName}}\r\n        <mat-icon [ngbTooltip]=\"tipContent\" [container]=\"'body'\" style=\"margin-left: 4px\">help_outline\r\n        </mat-icon>\r\n        <ng-template #tipContent>\r\n          <div style=\"background: black; padding: 8px; border-radius: 8px;\">\r\n            <div>Prix à l'unité : {{missingCollectionItem.price}}€</div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {CardPrice} from './card-price';\r\nimport {BanListInfo} from './ban-list-info';\r\n\r\nexport class Card {\r\n  id: number;\r\n  apiId: string;\r\n  name: string;\r\n  type: string;\r\n  language: string;\r\n  description: string;\r\n  level: number;\r\n  atk: number;\r\n  def: number;\r\n  race: string;\r\n  archetype: string;\r\n  attribute: string;\r\n  setCodes: Array<string> = [];\r\n  mapMainDeckQuantity: Map<string, number>;\r\n  mapExtraDeckQuantity: Map<string, number>;\r\n  mapSideDeckQuantity: Map<string, number>;\r\n  // tslint:disable-next-line:variable-name\r\n  card_prices: Array<CardPrice> = [];\r\n  banListInfo: BanListInfo;\r\n\r\n\r\n  price: number; // Price generated at runtime by querying ygopro api, not used in our backend\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {YugiohService} from '../../yugioh.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-collection-by-user',\r\n  templateUrl: './collection-by-user.component.html',\r\n  styleUrls: ['./collection-by-user.component.scss']\r\n})\r\nexport class CollectionByUserComponent implements OnInit {\r\n\r\n  collectionCreators = new Array<string>();\r\n\r\n  constructor(public router: Router, private yugiohService: YugiohService, private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.yugiohService.getCollections()\r\n      .subscribe(collections => {\r\n          const set = new Set<string>();\r\n          collections.forEach(collection => {\r\n            if (collection.createdBy) {\r\n              set.add(collection.createdBy);\r\n            }\r\n          });\r\n          this.collectionCreators = Array.from(set);\r\n        },\r\n        () => this.openSnackBar('Erreur lors de la récupération des collections', 'OK'));\r\n  }\r\n\r\n  handleRouting(event: MouseEvent, creator: string) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = '/yu-gi-oh/collections/by-user/' + creator;\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n}\r\n","<div\r\n  style=\"width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center; margin-top: 8px\">\r\n  <div (auxclick)=\"handleRouting($event,  creator)\" (click)=\"handleRouting($event,  creator)\"\r\n       *ngFor=\"let creator of collectionCreators | sort:null:true\" class=\"collection-light\">\r\n    <div style=\"font-weight: 500; font-size: 18px;\">\r\n      {{creator}}\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class CollectionImportPojo {\r\n  cardNumber: number;\r\n  cardName: string;\r\n  cardCode: string;\r\n  position: number;\r\n  cardApiId: string; // Used in collection comparison\r\n\r\n\r\n  constructor(cardNumber: number, cardName: string, cardCode: string, position: number, cardApiId?: string) {\r\n    this.cardNumber = cardNumber;\r\n    this.cardName = cardName;\r\n    this.cardCode = cardCode;\r\n    this.position = position;\r\n    this.cardApiId = cardApiId;\r\n  }\r\n}\r\n","import {Card} from './card';\r\nimport {Position} from './position';\r\nimport {Set} from './set';\r\n\r\nexport class CollectionItem {\r\n  id: number;\r\n  position: Position;\r\n  card: Card;\r\n  set: Set;\r\n  quantity = 1;\r\n  owner: string; // Only used in front during aggregation of collections\r\n\r\n  constructor(position: Position, card: Card, set: Set) {\r\n    this.position = position;\r\n    this.card = card;\r\n    this.set = set;\r\n  }\r\n}\r\n","export class CollectionLight {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  createdBy: string;\r\n  color: string;\r\n  mainCardApiId: string;\r\n\r\n  // global data\r\n  nbCards: number;\r\n\r\n  // collection data\r\n  nbMonsters: number;\r\n  nbSpells: number;\r\n  nbTraps: number;\r\n\r\n  // deck data\r\n  nbMainDeck: number;\r\n  nbSideDeck: number;\r\n  nbExtraDeck: number;\r\n\r\n\r\n  constructor(name: string, type: string, createdBy: string, color: string) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.createdBy = createdBy;\r\n    this.color = color;\r\n  }\r\n}\r\n","import {Component, HostListener, OnInit, TemplateRef} from '@angular/core';\r\nimport {YugiohService} from '../../yugioh.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {CollectionDialogData, DialogAddCollectionComponent} from './dialog-add-collection.component';\r\nimport {DialogEditRemoveCollectionComponent} from '../../dialog-remove-collection/dialog-edit-remove-collection.component';\r\nimport {Router} from '@angular/router';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {Subject} from 'rxjs';\r\nimport {CollectionLight} from './collection-light';\r\nimport {backendUrl} from '../../global';\r\nimport {FileSaverOptions, saveAs} from 'file-saver';\r\nimport {CollectionItem} from './collection-item';\r\nimport {CollectionImportPojo} from './collection-import-pojo';\r\nimport {Card} from './card';\r\nimport {CollectionItemComparison} from './collection-item-comparison';\r\nimport {NgbModal, NgbTooltip} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-collection-list',\r\n  templateUrl: './collection-list.component.html',\r\n  styleUrls: ['./collection-list.component.scss']\r\n})\r\nexport class CollectionListComponent implements OnInit {\r\n\r\n  constructor(private yugiohService: YugiohService, private snackBar: MatSnackBar, public dialog: MatDialog, public router: Router,\r\n              private modalService: NgbModal) {\r\n  }\r\n\r\n  backEndCardUrl = backendUrl + '/cards/';\r\n\r\n  isCollection: boolean;\r\n\r\n  collections: CollectionLight[] = [];\r\n  collectionCreators = new Array<string>();\r\n  activeCollectionCreators = [];\r\n  private searchSub$ = new Subject<string>();\r\n  cardSearchValue: any;\r\n\r\n  numberOfTimesMKeyPressedInARow = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.isCollection = this.router.url.includes('collections'); // Moche\r\n    this.getCollections();\r\n\r\n    this.searchSub$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged()\r\n    ).subscribe((filterValue: string) => {\r\n      this.getCollections(filterValue);\r\n    });\r\n  }\r\n\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.key === 'm') {\r\n      this.numberOfTimesMKeyPressedInARow++;\r\n      if (this.numberOfTimesMKeyPressedInARow >= 10) {\r\n        console.log('10 times');\r\n        this.downloadAll();\r\n        this.numberOfTimesMKeyPressedInARow = 0;\r\n      }\r\n    } else {\r\n      this.numberOfTimesMKeyPressedInARow = 0;\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  getCollections(filter?: string): void {\r\n    this.yugiohService.getCollections(filter, this.isCollection ? 'COLLECTION' : 'DECK')\r\n      .subscribe(collections => {\r\n          this.collections = collections;\r\n          const set = new Set<string>();\r\n          this.collections.forEach(collection => {\r\n            if (collection.createdBy) {\r\n              set.add(collection.createdBy);\r\n            }\r\n          });\r\n          this.collectionCreators = Array.from(set);\r\n        },\r\n        () => this.openSnackBar('Erreur lors de la récupération des collections', 'OK'));\r\n  }\r\n\r\n  addCollection(collectionDialogData: CollectionDialogData) {\r\n    const collection = new CollectionLight(collectionDialogData.name, collectionDialogData.type,\r\n      collectionDialogData.createdBy, collectionDialogData.color);\r\n    this.yugiohService.addOrUpdateCollectionLight(collection)\r\n      .subscribe(() => this.getCollections(),\r\n        () => this.openSnackBar('Erreur lors de la création de la collection', 'OK'));\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogAddCollectionComponent, {\r\n      width: '700px',\r\n      data: {type: this.isCollection ? 'COLLECTION' : 'DECK'}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      console.log(result);\r\n      this.addCollection(result);\r\n    });\r\n  }\r\n\r\n  openEditOrRemoveCollectionDialog($event, collection: CollectionLight): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(DialogEditRemoveCollectionComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: collection.id,\r\n        name: collection.name,\r\n        createdBy: collection.createdBy,\r\n        type: collection.type,\r\n        color: collection.color\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n\r\n      console.log(result);\r\n      if (result.result === 'REMOVE') {\r\n        this.yugiohService.removeCollectionById(collection.id as unknown as string)\r\n          .subscribe(() => this.getCollections());\r\n      } else if (result.result === 'OK') {\r\n        console.log('addOrUpdate');\r\n        console.log(result);\r\n        this.yugiohService.addOrUpdateCollectionLight(result)\r\n          .subscribe(() => this.getCollections());\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRouting(event: MouseEvent, collection: CollectionLight) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = '/yu-gi-oh/' + (this.isCollection ? 'collections' : 'decks') + ('/by-id/' + collection.id);\r\n\r\n      console.log(url);\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url], {queryParams: {cardSearchValue: this.cardSearchValue}});\r\n      } else {\r\n        let queryParam = '';\r\n        if (this.cardSearchValue) {\r\n          queryParam += '?cardSearchValue=' + this.cardSearchValue;\r\n        }\r\n        window.open(url + queryParam, '_blank');\r\n      }\r\n    }\r\n  }\r\n\r\n  applyCardFilter($event: KeyboardEvent, inputElement: HTMLInputElement) {\r\n    let searchValue;\r\n    if ($event) {\r\n      searchValue = ($event.target as HTMLInputElement).value;\r\n    } else {\r\n      searchValue = '';\r\n    }\r\n    this.cardSearchValue = searchValue;\r\n    this.searchSub$.next(searchValue);\r\n    inputElement.focus();\r\n  }\r\n\r\n  downloadAll() {\r\n    const collections: CollectionLight[] = [...this.collections];\r\n    collections.forEach(collectionLight => {\r\n      this.yugiohService.getCollectionById(String(collectionLight.id)).subscribe(collection => {\r\n        const strings = new Array<string>();\r\n        if (collection.type === 'COLLECTION') {\r\n          for (const value of collection.items) {\r\n            let code: string;\r\n            if (value?.set?.code) {\r\n              code = value?.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          }\r\n        } else {\r\n          const mainDeckCards = new Array<CollectionItem>();\r\n          const extraDeckCards = new Array<CollectionItem>();\r\n          const sideDeckCards = new Array<CollectionItem>();\r\n          collection.items.forEach(item => {\r\n            if (item.position === 0) {\r\n              mainDeckCards.push(item);\r\n            } else if (item.position === 1) {\r\n              extraDeckCards.push(item);\r\n            } else if (item.position === 2) {\r\n              sideDeckCards.push(item);\r\n            }\r\n          });\r\n\r\n          strings.push('main deck');\r\n          mainDeckCards.forEach(value => {\r\n            let code: string;\r\n            if (value.set?.code) {\r\n              code = value.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          });\r\n\r\n          strings.push('extra deck');\r\n          extraDeckCards.forEach(value => {\r\n            let code: string;\r\n            if (value.set?.code) {\r\n              code = value.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          });\r\n\r\n          strings.push('side deck');\r\n          sideDeckCards.forEach(value => {\r\n            let code: string;\r\n            if (value.set?.code) {\r\n              code = value.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          });\r\n        }\r\n\r\n        const stringToDownload = strings.join('\\r\\n');\r\n        const data: Blob = new Blob([stringToDownload], {type: 'text/plain;charset=utf-8'});\r\n        const filename = collection.name + '.json';\r\n        const options: FileSaverOptions = {\r\n          autoBom: false,\r\n        };\r\n\r\n        saveAs(data, filename, options);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Filter creators or deck\r\n  toggle(filter, filterList) {\r\n    const index = filterList.indexOf(filter);\r\n    if (index === -1) { // Not present\r\n      filterList.push(filter);\r\n    } else { // Present\r\n      filterList.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getCollectionsToDisplay() {\r\n    return this.activeCollectionCreators.length === 0\r\n      ? this.collections\r\n      : this.collections.filter(deck => this.activeCollectionCreators.includes(deck.createdBy));\r\n  }\r\n}\r\n","<div style=\"width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center\">\r\n  <button style=\"margin: 8px\" (click)=\"openDialog()\" mat-raised-button>\r\n    Ajouter {{isCollection ? 'une collection' : 'un deck'}} </button>\r\n  <div *ngIf=\"collectionCreators\" style=\"display: flex; align-items: center\">\r\n    <div style=\"margin-right: 8px\" *ngIf=\"collectionCreators.length > 0\">Créateurs</div>\r\n    <div style=\"display: flex; flex-wrap: wrap\">\r\n      <div *ngFor=\"let creator of collectionCreators\"\r\n           style=\"cursor: pointer; padding: 8px; margin: 2px;  border-radius: 4px; border: 1px black solid;\"\r\n           (click)=\"toggle(creator, activeCollectionCreators)\"\r\n           [ngClass]=\"activeCollectionCreators.indexOf(creator) !== -1 ? 'selected' : ''\">\r\n        {{creator}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div style=\"width: 80%;\">\r\n    <div class=\"bAXgkK\">\r\n      <div class=\"qmUrg\">\r\n        <input #inputElement (keyup)=\"applyCardFilter($event, inputElement)\"\r\n               [(ngModel)]=\"cardSearchValue\"\r\n               id=\"sidebar-search-input\" placeholder=\"Rechercher une carte dans les collections\" tabindex=\"0\">\r\n        <mat-icon (click)=\"applyCardFilter(null, inputElement)\" class=\"jNdboZ\">\r\n          clear\r\n        </mat-icon>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"width: 100%; display: flex; justify-content: center; flex-wrap: wrap; margin-top: 8px\">\r\n    <div (auxclick)=\"handleRouting($event, collection)\" (click)=\"handleRouting($event, collection)\"\r\n         *ngFor=\"let collection of getCollectionsToDisplay() | sort:'name':true\"\r\n         [style.background-color]=\"collection.color\"\r\n         class=\"collection\">\r\n      <div *ngIf=\"collection?.mainCardApiId\" class=\"bg-image\"\r\n           [ngStyle]=\"{'background': 'linear-gradient(to left, rgba(255,255,255,0) 20%,rgba(255,255,255,1)), url(' + backEndCardUrl + collection.mainCardApiId + '/image-cropped)'}\"\r\n      ></div>\r\n      <div style=\"position:relative; margin-left: 8px; margin-right: 8px\">\r\n        <div style=\"display: flex\">\r\n          <div style=\"flex-grow:1; font-weight: 500; font-size: 18px;\">{{collection.name}}\r\n            <span *ngIf=\"collection.createdBy\"> - {{collection.createdBy}}</span>\r\n          </div>\r\n          <div>\r\n            <mat-icon (click)=\"openEditOrRemoveCollectionDialog($event, collection)\" matSuffix>settings</mat-icon>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isCollection\">\r\n          {{collection.nbCards}} cartes<br>{{collection.nbMonsters}} monstres <br>{{collection.nbSpells}}\r\n          magies <br>{{collection.nbTraps}} pièges\r\n        </div>\r\n        <div *ngIf=\"!isCollection\">\r\n          {{collection.nbCards}} cartes <br>Main {{collection.nbMainDeck}} <br>Extra {{collection.nbExtraDeck}}\r\n          <br>Side {{collection.nbSideDeck}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import {AfterViewInit, Component, ElementRef, HostListener, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {YugiohService} from '../../yugioh.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {Card} from './card';\r\nimport {Set} from './set';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Collection} from './collection';\r\nimport {Position} from './position';\r\nimport {CollectionItem} from './collection-item';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {DialogImportCollectionComponent, ImportData} from '../../dialog-import-collection/dialog-import-collection.component';\r\nimport {CollectionImportPojo} from './collection-import-pojo';\r\nimport {NgbModal, NgbTooltip, NgbTooltipConfig} from '@ng-bootstrap/ng-bootstrap';\r\nimport {CardSort} from '../../sort-dialog/card-sort';\r\nimport {SortDialogComponent} from '../../sort-dialog/sort-dialog.component';\r\nimport {backendUrl, idAllCollections} from '../../global';\r\nimport {FileSaverOptions, saveAs} from 'file-saver';\r\nimport {FilterDto} from '../../filter-dialog/filter-dto';\r\nimport {Utils} from './utils';\r\n\r\n@Component({\r\n  selector: 'app-collection-new',\r\n  templateUrl: './collection-new.component.html',\r\n  styleUrls: ['./collection-new.component.scss']\r\n})\r\nexport class CollectionNewComponent implements OnInit, AfterViewInit {\r\n\r\n  backEndCardUrl = backendUrl + '/cards/';\r\n\r\n  @ViewChild('inputElement') searchInput: ElementRef;\r\n\r\n  canSave = false;\r\n\r\n  cards: Array<Card> = [];\r\n  collection: Collection;\r\n  sets: Array<Set>;\r\n  Position = Position;\r\n\r\n  sort = CardSort.alphabeticalAsc;\r\n\r\n  flatCollection: Collection;\r\n  setMap = new Map<string, Array<CollectionItem>>();\r\n  setNumberOfCardsMap = new Map<string, number>();\r\n\r\n  private searchSub$ = new Subject<string>();\r\n  cardSearchValue: string;\r\n  deckSearchValue: string;\r\n  isFullCollection = false;\r\n\r\n  staticCollection: boolean;\r\n\r\n  totalPrice: number;\r\n  cardPriceMap = new Map<Card, number>();\r\n  cardPriceEntries: [Card, number][];\r\n\r\n  mainDeckMap = Utils.cardColorMap;\r\n\r\n  filterDto: FilterDto = new FilterDto();\r\n  searchTypes = ['nom', 'set', 'id'];\r\n  searchBy = 'nom';\r\n\r\n  constructor(private yugiohService: YugiohService, private snackBar: MatSnackBar, private route: ActivatedRoute,\r\n              public dialog: MatDialog, config: NgbTooltipConfig, private modalService: NgbModal, public router: Router) {\r\n    config.openDelay = 400;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.yugiohService.getCardsbyName()\r\n      .subscribe(cards => {\r\n        this.cards = cards;\r\n        if (this.collection) {\r\n          this.refreshCollectionView();\r\n        }\r\n      });\r\n\r\n    const url = this.router.url; // Moche\r\n    console.log(url);\r\n\r\n    this.deckSearchValue = this.route.snapshot.queryParamMap.get('cardSearchValue');\r\n    console.log(this.deckSearchValue);\r\n    const idOrCreatedBy = url.split('/').slice(-1)[0]; // Get last item\r\n    console.log(idOrCreatedBy);\r\n    if (url.includes(idAllCollections)) {\r\n      this.staticCollection = true;\r\n      this.yugiohService.getCollectionsFull()\r\n        .subscribe(collections => {\r\n          const aggregatedCollection = new Collection(idOrCreatedBy, 'COLLECTION');\r\n          const mapApiIdOwnerItems = new Map<string, CollectionItem>();\r\n          collections.forEach(collection => {\r\n            collection.items.forEach(item => {\r\n              item.owner = collection.createdBy;\r\n              const mapItem = mapApiIdOwnerItems.get(item.card.apiId + item?.set?.code + item.owner);\r\n              if (mapItem) {\r\n                mapItem.quantity += item.quantity;\r\n              } else {\r\n                mapApiIdOwnerItems.set(item.card.apiId + item?.set?.code + item.owner, item);\r\n              }\r\n            });\r\n          });\r\n\r\n          aggregatedCollection.items.push(...mapApiIdOwnerItems.values());\r\n\r\n          this.collection = aggregatedCollection;\r\n          this.collection.id = null; // TODO TODO -> IMPORTANT : KEEP NULL AT ALL COSTS OR ELSE IT WILL MESS UP WITH EXISTING COLLECTIONS !\r\n          this.isFullCollection = true;\r\n          this.generateTotalPrice();\r\n          this.refreshCollectionView();\r\n        });\r\n    } else if ( url.includes('by-id')) {\r\n      this.staticCollection = false;\r\n      this.yugiohService.getCollectionById(idOrCreatedBy)\r\n        .subscribe(collection => {\r\n          this.collection = collection;\r\n          this.isFullCollection = true;\r\n          this.generateTotalPrice();\r\n          this.refreshCollectionView();\r\n        });\r\n    } else {\r\n      this.staticCollection = true;\r\n      this.yugiohService.getCollectionsByCreator(idOrCreatedBy)\r\n        .subscribe(collections => {\r\n          const aggregatedCollection = new Collection(idOrCreatedBy, 'COLLECTION');\r\n\r\n          const mapApiIdOwnerItems = new Map<string, CollectionItem>();\r\n          collections.forEach(collection => {\r\n            collection.items.forEach(item => {\r\n              const mapItem = mapApiIdOwnerItems.get(item.card.apiId + item?.set?.code);\r\n              if (mapItem) {\r\n                mapItem.quantity += item.quantity;\r\n              } else {\r\n                mapApiIdOwnerItems.set(item.card.apiId + item?.set?.code, item);\r\n              }\r\n            });\r\n          });\r\n\r\n          aggregatedCollection.items.push(...mapApiIdOwnerItems.values());\r\n\r\n          this.collection = aggregatedCollection;\r\n          this.collection.id = null; // TODO TODO -> IMPORTANT : KEEP NULL AT ALL COSTS OR ELSE IT WILL MESS UP WITH EXISTING COLLECTIONS !\r\n          this.isFullCollection = true;\r\n          this.generateTotalPrice();\r\n          this.refreshCollectionView();\r\n        });\r\n    }\r\n\r\n    this.yugiohService.getSets().subscribe(sets => this.sets = sets,\r\n      () => this.openSnackBar('Erreur lors de la récupération des sets', 'OK'));\r\n\r\n    this.searchSub$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged()\r\n    ).subscribe((filterValue: string) => {\r\n      this.searchCardWithString(filterValue);\r\n    });\r\n  }\r\n\r\n  private generateTotalPrice() {\r\n    if (!this.totalPrice) {\r\n      const apiIds = this.collection.items.map(value => value.card.apiId);\r\n      this.yugiohService.getCardsPriceById(apiIds)\r\n        .subscribe(value => {\r\n          console.log(value);\r\n          if (value?.data && value.data.length > 0) {\r\n            const map = new Map<string, number>();\r\n            for (const data of value.data) {\r\n              map.set(String(data.id), data.card_prices[0].cardmarket_price);\r\n              this.cardPriceMap.set(this.collection.items.map(item => item.card)\r\n                .find(c => c.apiId === String(data.id)), data.card_prices[0].cardmarket_price);\r\n            }\r\n            // sort\r\n            this.cardPriceEntries = Array.from(new Map([...this.cardPriceMap.entries()].sort((a, b) => b[1] - a[1])).entries());\r\n            console.log(this.cardPriceEntries);\r\n            console.log(map);\r\n            this.totalPrice = 0;\r\n            this.collection.items.forEach(item => {\r\n              const price = Number(map.get(item.card.apiId));\r\n              if (price) {\r\n                this.totalPrice += price * item.quantity;\r\n                item.card.price = price;\r\n              } else {\r\n                console.log(item.card.apiId);\r\n                item.card.price = 0;\r\n              }\r\n            });\r\n            console.log(this.totalPrice);\r\n            // Keep only last 2 digits\r\n            this.totalPrice = Number(this.totalPrice.toFixed(2));\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  searchCardWithString(search: string) {\r\n    let cardsObservable: Observable<Array<Card>>;\r\n    if (this.searchBy === 'id') {\r\n      cardsObservable = this.yugiohService.getCardsByApiId(search.trim().toLowerCase());\r\n    } else if (this.searchBy === 'nom') {\r\n      cardsObservable = this.yugiohService.getCardsbyName(search.trim().toLowerCase());\r\n    } else if (this.searchBy === 'set') {\r\n      cardsObservable = this.yugiohService.getCardsBySet(search.trim().toLowerCase());\r\n    }\r\n\r\n    cardsObservable\r\n      .subscribe(cards => {\r\n        this.cards = cards;\r\n        if (this.collection) {\r\n          this.refreshCollectionView();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.code === 'Escape') {\r\n      setTimeout(() => {\r\n        this.searchInput.nativeElement.blur();\r\n        this.searchInput.nativeElement.focus();\r\n      }, 15);\r\n    }\r\n  }\r\n\r\n  applyCardFilter($event: KeyboardEvent) {\r\n    let searchValue;\r\n    console.log($event);\r\n    if ($event) {\r\n      if ($event.code === 'Escape') {\r\n        searchValue = '';\r\n      } else {\r\n        searchValue = ($event.target as HTMLInputElement).value;\r\n      }\r\n    } else {\r\n      searchValue = '';\r\n    }\r\n    this.cardSearchValue = searchValue;\r\n    this.searchSub$.next(searchValue);\r\n  }\r\n\r\n  addCollectionItemSimple(item: CollectionItem) {\r\n    item.quantity += 1;\r\n    this.localUpdateCollection(true);\r\n  }\r\n\r\n  removeCollectionItemSimple(item: CollectionItem) { // if add = false then it is a removal\r\n    console.log(this.collection.items.length);\r\n    if (item.quantity > 1) {\r\n      item.quantity -= 1;\r\n    } else {\r\n      this.collection.items.splice(this.collection.items.indexOf(item), 1);\r\n    }\r\n    this.localUpdateCollection(true);\r\n  }\r\n\r\n  addCollectionItem(card: Card, setCode: string, position: Position) {\r\n    let isUpdate = false;\r\n    const set = this.sets.filter(cardSet => cardSet.code === setCode)[0];\r\n    for (const item of this.collection.items) {\r\n      if (item.card.id === card.id && item.position === position && item?.set?.code === set.code) {\r\n        item.quantity += 1;\r\n        isUpdate = true;\r\n      }\r\n    }\r\n    if (!isUpdate) {\r\n      this.collection.items.push(new CollectionItem(position, card, set));\r\n    }\r\n    this.localUpdateCollection(true);\r\n  }\r\n\r\n  removeCollectionItem(card: Card, setCode: string, position: Position) {\r\n    const set = this.sets.filter(cardSet => cardSet.code === setCode)[0];\r\n    for (const item of this.collection.items) {\r\n      if (item.card.id === card.id && item.position === position && item?.set?.code === set.code) {\r\n        if (item.quantity > 1) {\r\n          item.quantity -= 1;\r\n        } else {\r\n          this.collection.items.splice(this.collection.items.indexOf(item), 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.localUpdateCollection(true);\r\n    return false;\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  getKeys() {\r\n    return Array.from(this.setMap.keys());\r\n  }\r\n\r\n  getSetNumberOfCards(set: string) {\r\n    const nbCards = this.sets.find(value => set === value.code)?.numCards;\r\n    return nbCards ? ' / ' + nbCards : '';\r\n  }\r\n\r\n  getSetName(set: string) {\r\n    if (this.sets) {\r\n      const name = this.sets.find(value => set === value.code)?.name;\r\n      return name ? '  (' + name + ') ' : '';\r\n    }\r\n  }\r\n\r\n  refreshCollectionView() {\r\n    this.setMap.clear();\r\n    this.setNumberOfCardsMap.clear();\r\n\r\n    this.setMap.set('SANS CODE', new Array<CollectionItem>());\r\n    this.setNumberOfCardsMap.set('SANS CODE', 0);\r\n\r\n    this.flatCollection = new Collection(null, null);\r\n    this.sortCollection(this.collection.items);\r\n    // Pour enlever les doublons fr/en dans le comptage du nombre de cartes d'un set\r\n    const alreadyIncludedCardInSetMap = new Map<string, Array<string>>(); // setCode - apiId[]\r\n    alreadyIncludedCardInSetMap.set('SANS CODE', []);\r\n    this.collection.items.filter(item => !this.deckSearchValue || this.deckSearchValue.length === 0\r\n      || item.card.name.toLowerCase().includes(this.deckSearchValue.toLowerCase()))\r\n      .filter(item => this.applyFilters(item))\r\n      .forEach(collectionItem => {\r\n        // Duplicate found, return\r\n        let isDuplicate = false;\r\n        if (alreadyIncludedCardInSetMap.get(collectionItem?.set?.code)?.includes(collectionItem.card.apiId)) {\r\n          isDuplicate = true;\r\n        }\r\n        if (collectionItem.set) {\r\n          if (this.setMap.has(collectionItem.set.code)) {\r\n            this.setMap.get(collectionItem.set.code).push(collectionItem);\r\n            if (!isDuplicate) {\r\n              this.setNumberOfCardsMap.set(collectionItem.set.code,\r\n                this.setNumberOfCardsMap.get(collectionItem.set.code) + 1);\r\n            }\r\n          } else {\r\n            this.setMap.set(collectionItem.set.code, [collectionItem]);\r\n            if (!isDuplicate) {\r\n              this.setNumberOfCardsMap.set(collectionItem.set.code, 1);\r\n            }\r\n          }\r\n          if (alreadyIncludedCardInSetMap.has(collectionItem.set.code)) {\r\n            alreadyIncludedCardInSetMap.get(collectionItem.set.code).push(collectionItem.card.apiId);\r\n          } else {\r\n            alreadyIncludedCardInSetMap.set(collectionItem.set.code, [collectionItem.card.apiId]);\r\n          }\r\n        } else {\r\n          this.setMap.get('SANS CODE').push(collectionItem);\r\n          if (!isDuplicate) {\r\n            this.setNumberOfCardsMap.set('SANS CODE', this.setNumberOfCardsMap.get('SANS CODE') + 1);\r\n          }\r\n          alreadyIncludedCardInSetMap.get('SANS CODE').push(collectionItem.card.apiId);\r\n        }\r\n\r\n        this.flatCollection.items.push(collectionItem);\r\n      });\r\n\r\n    this.collection.totalItems = this.collection.items.map(value => value.quantity)\r\n      .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\r\n\r\n    // Order setMap by key in alphabetical order\r\n    this.setMap = new Map([...this.setMap].sort());\r\n\r\n    /*this.setMap.forEach(collectionsItems => {\r\n      // collectionsItems.sort((a, b) => a.card.name.localeCompare(b.card.name) || a.card.type.localeCompare(b.card.type));\r\n      collectionsItems.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.name.localeCompare(b.card.name));\r\n    });*/\r\n\r\n    this.populateCardValues();\r\n  }\r\n\r\n  sortCollection(items: CollectionItem[]) {\r\n    // nb, lelve, atk, def , price\r\n    switch (this.sort) {\r\n      case CardSort.alphabeticalAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.name.localeCompare(b.card.name));\r\n        break;\r\n      case CardSort.alphabeticalDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.name.localeCompare(a.card.name));\r\n        break;\r\n      case CardSort.nbOwnedAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.quantity - b.quantity);\r\n        break;\r\n      case CardSort.nbOwnedDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.quantity - a.quantity);\r\n        break;\r\n      case CardSort.levelRankLinkAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.level - b.card.level);\r\n        break;\r\n      case CardSort.levelRankLinkDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.level - a.card.level);\r\n        break;\r\n      case CardSort.atkAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.atk - b.card.atk);\r\n        break;\r\n      case CardSort.atkDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.atk - a.card.atk);\r\n        break;\r\n      case CardSort.defAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.def - b.card.def);\r\n        break;\r\n      case CardSort.defDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.def - a.card.def);\r\n        break;\r\n      case CardSort.priceAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.price - b.card.price);\r\n        break;\r\n      case CardSort.priceDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.price - a.card.price);\r\n        break;\r\n    }\r\n  }\r\n\r\n  applyFilters(item: CollectionItem): boolean {\r\n    if (this.filterDto?.cardTypes.length > 0\r\n      && this.filterDto.cardTypes.filter(value => item.card.type.toLowerCase().includes(value.toLowerCase())).length === 0) {\r\n      return false;\r\n    }\r\n\r\n    // Si filtre présent et attribute pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.attributes.length > 0 && this.filterDto.attributes.indexOf(item.card.attribute) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et level pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.levels.length > 0 && this.filterDto.levels.indexOf(item.card.level) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et monster race pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.monsterRaces.length > 0 && this.filterDto.monsterRaces.indexOf(item.card.race) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et spell race pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.spellRaces.length > 0 && this.filterDto.spellRaces.indexOf(item.card.race) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et trap race pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.trapRaces.length > 0 && this.filterDto.trapRaces.indexOf(item.card.race) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et archétype différent du filtre alors on l'enlève\r\n    if (this.filterDto.archetype && item.card.archetype !== this.filterDto.archetype) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  populateCardValues() {\r\n    this.cards.forEach(card => {\r\n      card.mapMainDeckQuantity = new Map<string, number>();\r\n      this.collection?.items.forEach(item => {\r\n        if (item.card.name === card.name && item.set) {\r\n          card.mapMainDeckQuantity.set(item.set.code, item.quantity);\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  openSortDialog() {\r\n    const dialogRef = this.dialog.open(SortDialogComponent, {\r\n      width: '300px',\r\n      data: {\r\n        sort: this.sort !== undefined ? this.sort : null,\r\n        collectionView: true\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(value => {\r\n      this.sort = value;\r\n      this.refreshCollectionView();\r\n    });\r\n  }\r\n\r\n  saveDeck() {\r\n\r\n    this.yugiohService.addOrUpdateCollection(this.collection)\r\n      .subscribe(collection => {\r\n          this.collection = collection;\r\n          this.refreshCollectionView();\r\n          this.localUpdateCollection(false);\r\n        },\r\n        () => this.openSnackBar('Erreur lors de la sauvegarde', 'OK'));\r\n  }\r\n\r\n  localUpdateCollection(canSave: boolean) {\r\n    this.canSave = canSave;\r\n    this.refreshCollectionView();\r\n    if (canSave) {\r\n      window.onbeforeunload = (e) => {\r\n        // IE & Firefox\r\n        if (e) {\r\n          e.returnValue = 'Are you sure?';\r\n        }\r\n\r\n        // For Safari\r\n        return 'Are you sure?';\r\n      };\r\n    } else {\r\n      window.onbeforeunload = null; // no alert on close window\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    if (this.canSave) {\r\n      if (confirm('Les modification apportées à la collection n\\'ont pas été sauvegardées. Quitter quand même ?')) {\r\n        window.onbeforeunload = null; // no alert on close window\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    window.onbeforeunload = null; // no alert on close window\r\n    return true;\r\n  }\r\n\r\n  onClick($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    if ($event.which === 2) {\r\n      window.open('/');\r\n    }\r\n  }\r\n\r\n  setCardAsCollectionImage(cardApidId: string) {\r\n    if (!this.staticCollection) {\r\n      this.collection.mainCardApiId = cardApidId;\r\n      this.localUpdateCollection(true);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isFiltered() {\r\n    return this.filterDto.attributes.length > 0\r\n      || this.filterDto.levels.length > 0\r\n      || this.filterDto.cardTypes.length > 0\r\n      || this.filterDto.monsterRaces.length > 0\r\n      || this.filterDto.spellRaces.length > 0\r\n      || this.filterDto.trapRaces.length > 0\r\n      || this.filterDto.archetype;\r\n  }\r\n\r\n  cardSearchTypeChange() {\r\n    this.searchCardWithString(this.cardSearchValue);\r\n  }\r\n\r\n\r\n  open(content: TemplateRef<any>) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      // this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  // Search deck section\r\n  searchValueChanged($event: string) {\r\n    this.deckSearchValue = $event;\r\n    this.refreshCollectionView();\r\n  }\r\n\r\n  applyFilter(filterDto: FilterDto) {\r\n    this.filterDto = filterDto;\r\n    this.refreshCollectionView();\r\n  }\r\n\r\n  applySort(sort: CardSort) {\r\n    this.sort = sort;\r\n    this.refreshCollectionView();\r\n  }\r\n\r\n  download() {\r\n    const strings = new Array<string>();\r\n    for (const value of this.collection.items) {\r\n      let code: string;\r\n      if (value?.set?.code) {\r\n        code = value?.set?.code;\r\n      } else {\r\n        code = '';\r\n      }\r\n      strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n    }\r\n    const stringToDownload = strings.join('\\r\\n');\r\n\r\n    const data: Blob = new Blob([stringToDownload], {type: 'text/plain;charset=utf-8'});\r\n    const filename = this.collection.name + '.json';\r\n    const options: FileSaverOptions = {\r\n      autoBom: false,\r\n    };\r\n\r\n    saveAs(data, filename, options);\r\n  }\r\n\r\n  openImportDialog() {\r\n    const dialogRef = this.dialog.open(DialogImportCollectionComponent, {\r\n      width: '400px',\r\n      data: this.collection\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      const importData = result as ImportData;\r\n      console.log('The dialog was closed');\r\n      if (importData.selectedIndex === 0) {\r\n        const cardLines = result.split(/[\\r\\n]+/);\r\n        console.log(cardLines);\r\n\r\n        const lines = new Array<CollectionImportPojo>();\r\n\r\n        for (const line of cardLines) {\r\n          if (line && line.trim().length > 0) {\r\n            if (line.charAt(0) >= '0' && line.charAt(0) <= '9') { // first character is a number\r\n              const lineSplit = line.trim().split(/ +/); // to handle cases like \"  first    middle    last    \"\r\n              // tslint:disable-next-line:max-line-length\r\n              const linePotentialSet = this.sets.filter(value => value.code.toLowerCase() === lineSplit[lineSplit.length - 1].toLowerCase());\r\n              const cardNumber = lineSplit[0].charAt(0); // TODO : DOESN'T WORK FOR NUMBER higher than 9 because we only keep the first character\r\n              let cardName = '';\r\n              const cardCode = linePotentialSet && linePotentialSet.length > 0 ? linePotentialSet[0].code : null;\r\n              // tslint:disable-next-line:prefer-for-of\r\n              for (let i = 1; i < (cardCode ? lineSplit.length - 1 : lineSplit.length); i++) {\r\n                if (lineSplit[i] && lineSplit.length > 0) {\r\n                  cardName += lineSplit[i] + ' ';\r\n                }\r\n              }\r\n              lines.push(new CollectionImportPojo(cardNumber, cardName.trim(), cardCode, 0));\r\n            }\r\n          }\r\n        }\r\n\r\n        this.yugiohService.importCollection(this.collection.id, lines).subscribe(value => {\r\n          this.collection = value.collection;\r\n          this.localUpdateCollection(false);\r\n          this.openSnackBar(value.notAddedPojos.toString(), 'OK');\r\n        });\r\n      } else {\r\n        this.yugiohService.importCollectionBySet(this.collection.id, importData.setCode, importData.language).subscribe(value => {\r\n          this.collection = value;\r\n          this.localUpdateCollection(false);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div style=\"display: flex\">\r\n  <div *ngIf=\"!staticCollection\"\r\n       style=\"min-width: 300px; max-width: 300px; display: flex; flex-direction: column; height: calc(100vh - 58px); overflow-y: auto; background-color: rgb(15 15 15); padding-left: 4px; padding-right: 4px\"\r\n       class=\"card-column\">\r\n    <div style=\"display: flex\">\r\n      <mat-form-field appearance=\"outline\" [style.fontSize.px]=\"14\" style=\"width: 75%\">\r\n        <input #inputElement id=\"sidebar-search-input\" matInput\r\n               [placeholder]=\"'Recherche par '\"\r\n               [(ngModel)]=\"cardSearchValue\" (keyup)=\"applyCardFilter($event)\">\r\n        <button mat-icon-button matSuffix (click)=\"applyCardFilter(null)\">\r\n          <mat-icon>clear</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" [style.fontSize.px]=\"14\" style=\"width: 25%\">\r\n        <mat-select [(value)]=\"searchBy\" (selectionChange)=\"cardSearchTypeChange()\">\r\n          <mat-option *ngFor=\"let searchType of searchTypes\" [value]=\"searchType\">\r\n            {{searchType}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div *ngFor=\"let card of cards | sort:'name'\" style=\"display:flex; width: 100%;\" [ngbTooltip]=\"tipContent\"\r\n         [container]=\"'body'\">\r\n      <div style=\"width: 20%\">\r\n        <img class=\"img-fluid\" style=\"margin-right: 4px\" src=\"{{backEndCardUrl + card.apiId + '/image'}}\"\r\n             alt=\"Character picture\">\r\n      </div>\r\n      <div style=\"width: 65%\">\r\n        <div class=\"list-card-name\">{{card.name}}</div>\r\n        <div class=\"list-card-content\">{{card.attribute}}\r\n          <span *ngIf=\"card.type !== 'Spell Card' && card.type !== 'Trap Card'\">-</span> {{card.race}}</div>\r\n        <!--<div>{{card.level}}</div>-->\r\n        <div class=\"list-card-content\" *ngIf=\"card.type !== 'Spell Card' && card.type !== 'Trap Card'\">{{card.atk}}\r\n          / {{card.def}}</div>\r\n      </div>\r\n      <div>\r\n        <div *ngFor=\"let set of card.setCodes | sort\" style=\"display: flex; align-items: center\">\r\n          <div class=\"list-card-content\" style=\"width: 38px\">{{ set }}</div>\r\n          <div class=\"list-card-mat-icon\" style=\"border-radius: 6px;\"\r\n               (contextmenu)=\"removeCollectionItem(card, set, Position.MAIN_DECK)\"\r\n               (click)=\"addCollectionItem(card, set, Position.MAIN_DECK)\">{{card?.mapMainDeckQuantity?.get(set) ? card?.mapMainDeckQuantity.get(set) : 'C'}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ng-template #tipContent>\r\n        <app-tooltip-card [card]=\"card\"></app-tooltip-card>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div style=\"width: 100%; max-height: calc(100vh - 58px); display: flex; flex-direction: column; overflow-y: auto;\">\r\n    <app-bar-collection-information [canSave]=\"canSave\" [collection]=\"collection\" [staticCollection]=\"staticCollection\"\r\n                                    [totalPrice]=\"totalPrice\"\r\n                                    (save)=\"saveDeck()\"\r\n                                    (removeImage)=\"setCardAsCollectionImage(null)\"></app-bar-collection-information>\r\n    <app-search [showYdke]=\"false\" [showDownloadAndUpload]=\"!staticCollection\"\r\n                (searchValueChanged)=\"searchValueChanged($event)\"\r\n                (filterDtoChanged)=\"applyFilter($event)\"\r\n                (sortChanged)=\"applySort($event)\"\r\n                (downloadClicked)=\"download()\" (importDialogClicked)=\"openImportDialog()\"></app-search>\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Cartes\">\r\n        <div *ngIf=\"!isFullCollection\" style=\"flex-grow: 1; max-height: calc(100vh - 58px);\">\r\n          <div style=\"width: 100%;\">\r\n            <div style=\"display: flex; align-items: center; justify-content: center; margin-top: 20vh;\">\r\n              <mat-spinner></mat-spinner>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"isFullCollection\" style=\"flex-grow: 1; height: 100%; overflow-y: auto;\">\r\n          <div style=\"padding-bottom: 1vh\">\r\n            <mat-accordion multi>\r\n              <mat-expansion-panel [expanded]=\"true\" *ngFor=\"let set of getKeys()\">\r\n                <mat-expansion-panel-header>\r\n                  <mat-panel-title>\r\n                    <div class=\"category-cards\">\r\n                      {{set}} {{getSetName(set)}} - {{setNumberOfCardsMap.get(set)}} {{getSetNumberOfCards(set)}} cartes\r\n                    </div>\r\n                  </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"card-group-container\">\r\n                  <div *ngFor=\"let item of setMap.get(set);\" class=\"card-container\" ngbDropdown #myDrop=\"ngbDropdown\"\r\n                       (click)=\"open(content)\">\r\n                    <div class=\"card-container-inside\" [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                         [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                         [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                         ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                         (contextmenu)=\"myDrop.open(); false;\">\r\n                      <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                      <div class=\"card-name\">\r\n                        <div style=\"display: flex; align-items: center\">\r\n                          <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                               style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                          <div>{{item.card.name}} <span *ngIf=\"item.owner\" style=\"font-weight: bold;\"> ({{item.owner}}\r\n                            )</span></div>\r\n                        </div>\r\n                        <div>\r\n                          <mat-icon *ngIf=\"!staticCollection\"\r\n                                    (click)=\"addCollectionItemSimple(item); $event.stopPropagation();\">add_circle\r\n                          </mat-icon>\r\n                          <mat-icon *ngIf=\"!staticCollection\"\r\n                                    (click)=\"removeCollectionItemSimple(item); $event.stopPropagation()\">remove_circle\r\n                          </mat-icon>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div ngbDropdownMenu>\r\n                      <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                        qu'image\r\n                        de\r\n                        deck\r\n                      </button>\r\n                    </div>\r\n                    <ng-template #content let-modal>\r\n                      <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                    </ng-template>\r\n                  </div>\r\n                </div>\r\n\r\n              </mat-expansion-panel>\r\n            </mat-accordion>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Vue plate\">\r\n        <div style=\"width: 95%; margin-left: 2.5%\" *ngIf=\"flatCollection\">\r\n          <div *ngFor=\"let item of flatCollection.items\" class=\"card-container\" style=\"width: 100%\"\r\n               (click)=\"open(content)\">\r\n            <div class=\"card-container-inside\" style=\"margin: 2px\"\r\n                 [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                 [matBadge]=\"item.card.banListInfo?.banTcg | ban\"\r\n                 [matBadgeHidden]=\"item.card.banListInfo?.banTcg === null\">\r\n              <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n              <div class=\"card-name\">\r\n                <div style=\"display: flex; align-items: center\">\r\n                  <img [src]=\"backEndCardUrl + item.card.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                       style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                  <div>{{item.card.name}} </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ng-template #content let-modal>\r\n              <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"Prix\">\r\n        <div style=\"width: 95%; margin-left: 2.5%\" *ngIf=\"collection && cardPriceEntries\">\r\n          <div *ngFor=\"let entry of cardPriceEntries\" class=\"card-container\" style=\"width: 100%\"\r\n               (click)=\"open(content)\">\r\n            <div class=\"card-container-inside\"\r\n                 [style.background-color]=\"mainDeckMap.get(entry[0].type)\"\r\n                 [matBadge]=\"entry[0]?.banListInfo?.banTcg | ban\"\r\n                 [matBadgeHidden]=\"entry[0]?.banListInfo?.banTcg === null\">\r\n              <div class=\"card-name\">\r\n                <div style=\"display: flex; align-items: center\">\r\n                  <img [src]=\"backEndCardUrl + entry[0].apiId + '/image-cropped'\" alt=\"website icon\"\r\n                       style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                  <div>{{entry[0].name}} </div>\r\n                  <div>&nbsp;- Prix {{entry[1]}}€</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ng-template #content let-modal>\r\n              <app-modal-card-detail [card]=\"entry[0]\"></app-modal-card-detail>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {CollectionItem} from './collection-item';\r\nimport {Image} from './image';\r\n\r\nexport class Collection {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  createdBy: string;\r\n  comment: string;\r\n  items: Array<CollectionItem> = [];\r\n  images: Array<Image> = [];\r\n  color: string;\r\n  mainCardApiId: string;\r\n\r\n  totalItems: number; // Used only in front\r\n\r\n  constructor(name: string, type: string) {\r\n    this.name = name;\r\n    this.type = type;\r\n  }\r\n}\r\n","import {AfterViewInit, Component, HostListener, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {YugiohService} from '../../yugioh.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {CollectionDialogData, DialogAddCollectionComponent} from './dialog-add-collection.component';\r\nimport {DialogEditRemoveCollectionComponent} from '../../dialog-remove-collection/dialog-edit-remove-collection.component';\r\nimport {Router} from '@angular/router';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {Subject} from 'rxjs';\r\nimport {CollectionLight} from './collection-light';\r\nimport {backendUrl, idAllCollections} from '../../global';\r\nimport {FileSaverOptions, saveAs} from 'file-saver';\r\nimport {CollectionItem} from './collection-item';\r\nimport {CollectionImportPojo} from './collection-import-pojo';\r\nimport {Card} from './card';\r\nimport {CollectionItemComparison} from './collection-item-comparison';\r\nimport {NgbModal, NgbTooltip} from '@ng-bootstrap/ng-bootstrap';\r\nimport {Utils} from './utils';\r\nimport {FilterDialogComponent} from '../../filter-dialog/filter-dialog.component';\r\nimport {FilterDto} from '../../filter-dialog/filter-dto';\r\nimport {CardSort} from '../../sort-dialog/card-sort';\r\nimport {SortDialogComponent} from '../../sort-dialog/sort-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-deck-list',\r\n  templateUrl: './deck-list.component.html',\r\n  styleUrls: ['./deck-list.component.scss']\r\n})\r\nexport class DeckListComponent implements OnInit, AfterViewInit {\r\n\r\n  constructor(private yugiohService: YugiohService, private snackBar: MatSnackBar, public dialog: MatDialog, public router: Router,\r\n              private modalService: NgbModal) {\r\n  }\r\n\r\n  @ViewChild('matPaginator') matPaginator: MatPaginator;\r\n\r\n  backEndCardUrl = backendUrl + '/cards/';\r\n\r\n  collections: CollectionLight[] = [];\r\n  decks: CollectionLight[] = [];\r\n  collectionCreators = new Array<string>();\r\n  activeCollectionCreators = [];\r\n  deckCreators = new Array<string>();\r\n  activeDeckCreators = [];\r\n  private searchSub$ = new Subject<string>();\r\n  cardSearchValue: any;\r\n\r\n  private searchSubDeck$ = new Subject<string>();\r\n  cardSearchValueDeck: any;\r\n  numberOfTimesMKeyPressedInARow = 0;\r\n  placeholder = `1 Souleating Oviraptor\r\n1x Aérosol de Destruction\r\n6x TrOU noIr\r\n2 Ultimate Conductor Tyranno\r\n\r\nNe pas mettre de set, il faut forcément mettre un nombre avant le nom de la carte`;\r\n  cardsForComparison = '';\r\n  foundLines = new Array<CollectionImportPojo>();\r\n  missingLines = new Array<CollectionImportPojo>();\r\n  foundCollectionItems = new Array<CollectionItemComparison>();\r\n  incompleteCollectionItems = new Array<CollectionItemComparison>();\r\n  missingCollectionItems = new Array<CollectionItemComparison>();\r\n  totalPrice: number;\r\n  foundCollectionItemsPrice: number;\r\n  incompleteCollectionItemsPrice: number;\r\n  missingCollectionItemsPrice: number;\r\n\r\n  // Cards consultation\r\n  totalNumberOfCards = 0;\r\n  defaultPageSize = 25;\r\n  globalCards = new Array<Card>();\r\n  mainDeckMap = Utils.cardColorMap;\r\n  private searchSub2$ = new Subject<string>();\r\n  cardSearchValue2: any;\r\n  filterDto: FilterDto = new FilterDto();\r\n  sort = CardSort.alphabeticalAsc;\r\n\r\n  ngOnInit(): void {\r\n    this.getCollections();\r\n\r\n    this.searchSub$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged()\r\n    ).subscribe((filterValue: string) => {\r\n      this.getCollections(filterValue);\r\n    });\r\n\r\n\r\n    this.searchSubDeck$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged()\r\n    ).subscribe((filterValue: string) => {\r\n      this.getCollections(filterValue);\r\n    });\r\n\r\n\r\n    this.searchSub2$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged()\r\n    ).subscribe(() => {\r\n      this.refreshPaginator();\r\n    });\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.refreshPaginator();\r\n  }\r\n\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.key === 'm') {\r\n      this.numberOfTimesMKeyPressedInARow++;\r\n      if (this.numberOfTimesMKeyPressedInARow >= 10) {\r\n        console.log('10 times');\r\n        this.downloadAll();\r\n        this.numberOfTimesMKeyPressedInARow = 0;\r\n      }\r\n    } else {\r\n      this.numberOfTimesMKeyPressedInARow = 0;\r\n    }\r\n  }\r\n\r\n  refreshPaginator() {\r\n    this.matPaginator.pageIndex = 0;\r\n    this.matPaginator._changePageSize(this.matPaginator.pageSize);\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  getCollections(filter?: string): void {\r\n    this.yugiohService.getCollections(filter)\r\n      .subscribe(collections => {\r\n          this.collections = collections.filter(collection => collection.type === 'COLLECTION');\r\n          this.decks = collections.filter(collection => collection.type === 'DECK');\r\n          const set = new Set<string>();\r\n          this.collections.forEach(collection => {\r\n            if (collection.createdBy) {\r\n              set.add(collection.createdBy);\r\n            }\r\n          });\r\n          this.collectionCreators = Array.from(set);\r\n\r\n          const set2 = new Set<string>();\r\n          this.decks.forEach(deck => {\r\n            if (deck.createdBy) {\r\n              set2.add(deck.createdBy);\r\n            }\r\n          });\r\n          this.deckCreators = Array.from(set2);\r\n        },\r\n        () => this.openSnackBar('Erreur lors de la récupération des collections', 'OK'));\r\n  }\r\n\r\n  addCollection(collectionDialogData: CollectionDialogData) {\r\n    const collection = new CollectionLight(collectionDialogData.name, collectionDialogData.type,\r\n      collectionDialogData.createdBy, collectionDialogData.color);\r\n    this.yugiohService.addOrUpdateCollectionLight(collection)\r\n      .subscribe(() => this.getCollections(),\r\n        () => this.openSnackBar('Erreur lors de la création de la collection', 'OK'));\r\n  }\r\n\r\n  openDialog(type: string): void {\r\n    const dialogRef = this.dialog.open(DialogAddCollectionComponent, {\r\n      width: '700px',\r\n      data: {type}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      console.log(result);\r\n      this.addCollection(result);\r\n    });\r\n  }\r\n\r\n  openEditOrRemoveCollectionDialog($event, collection: CollectionLight): void {\r\n    $event.stopPropagation();\r\n    const dialogRef = this.dialog.open(DialogEditRemoveCollectionComponent, {\r\n      width: '700px',\r\n      data: {\r\n        id: collection.id,\r\n        name: collection.name,\r\n        createdBy: collection.createdBy,\r\n        type: collection.type,\r\n        color: collection.color\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n\r\n      console.log(result);\r\n      if (result.result === 'REMOVE') {\r\n        this.yugiohService.removeCollectionById(collection.id as unknown as string)\r\n          .subscribe(() => this.getCollections());\r\n      } else if (result.result === 'OK') {\r\n        console.log('addOrUpdate');\r\n        console.log(result);\r\n        this.yugiohService.addOrUpdateCollectionLight(result)\r\n          .subscribe(() => this.getCollections());\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRouting(event: MouseEvent, collection: CollectionLight) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      let collectionType: string;\r\n      if (collection.type === 'DECK') {\r\n        collectionType = 'decks';\r\n      } else if (collection.type === 'COLLECTION') {\r\n        collectionType = 'collections';\r\n      }\r\n      const url = '/yu-gi-oh/' + collectionType + '/' + collection.id;\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url], {queryParams: {cardSearchValue: this.cardSearchValue}});\r\n      } else {\r\n        let queryParam = '';\r\n        if (this.cardSearchValue) {\r\n          queryParam += '?cardSearchValue=' + this.cardSearchValue;\r\n        }\r\n        window.open(url + queryParam, '_blank');\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRouting2(event: MouseEvent, creator: string) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = '/yu-gi-oh/collections/' + creator;\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRouting3(event: MouseEvent) {\r\n    event.preventDefault();\r\n    if (event.which === 2 || event.which === 1) {\r\n      const url = '/yu-gi-oh/collections/' + idAllCollections;\r\n\r\n      if (event.which === 1) {\r\n        this.router.navigate([url]);\r\n      } else {\r\n        window.open(url, '_blank');\r\n      }\r\n    }\r\n  }\r\n\r\n  applyCardFilterForDecks($event: KeyboardEvent, inputElement: HTMLInputElement) {\r\n    let searchValue;\r\n    if ($event) {\r\n      searchValue = ($event.target as HTMLInputElement).value;\r\n    } else {\r\n      searchValue = '';\r\n    }\r\n    this.cardSearchValueDeck = searchValue;\r\n    this.searchSubDeck$.next(searchValue);\r\n    inputElement.focus();\r\n  }\r\n\r\n  applyCardFilter($event: KeyboardEvent, inputElement: HTMLInputElement) {\r\n    let searchValue;\r\n    if ($event) {\r\n      searchValue = ($event.target as HTMLInputElement).value;\r\n    } else {\r\n      searchValue = '';\r\n    }\r\n    this.cardSearchValue = searchValue;\r\n    this.searchSub$.next(searchValue);\r\n    inputElement.focus();\r\n  }\r\n\r\n  applyCardFilterForGlobalCards($event: KeyboardEvent, inputElement: HTMLInputElement) {\r\n    let searchValue;\r\n    if ($event) {\r\n      searchValue = ($event.target as HTMLInputElement).value;\r\n    } else {\r\n      searchValue = '';\r\n    }\r\n    this.cardSearchValue2 = searchValue;\r\n    this.searchSub2$.next(searchValue);\r\n    inputElement.focus();\r\n  }\r\n\r\n  downloadAll() {\r\n    const collectionsAndDecks: CollectionLight[] = [...this.collections, ...this.decks];\r\n    collectionsAndDecks.forEach(collectionLight => {\r\n      this.yugiohService.getCollectionById(String(collectionLight.id)).subscribe(collection => {\r\n        const strings = new Array<string>();\r\n        if (collection.type === 'COLLECTION') {\r\n          for (const value of collection.items) {\r\n            let code: string;\r\n            if (value?.set?.code) {\r\n              code = value?.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          }\r\n        } else {\r\n          const mainDeckCards = new Array<CollectionItem>();\r\n          const extraDeckCards = new Array<CollectionItem>();\r\n          const sideDeckCards = new Array<CollectionItem>();\r\n          collection.items.forEach(item => {\r\n            if (item.position === 0) {\r\n              mainDeckCards.push(item);\r\n            } else if (item.position === 1) {\r\n              extraDeckCards.push(item);\r\n            } else if (item.position === 2) {\r\n              sideDeckCards.push(item);\r\n            }\r\n          });\r\n\r\n          strings.push('main deck');\r\n          mainDeckCards.forEach(value => {\r\n            let code: string;\r\n            if (value.set?.code) {\r\n              code = value.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          });\r\n\r\n          strings.push('extra deck');\r\n          extraDeckCards.forEach(value => {\r\n            let code: string;\r\n            if (value.set?.code) {\r\n              code = value.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          });\r\n\r\n          strings.push('side deck');\r\n          sideDeckCards.forEach(value => {\r\n            let code: string;\r\n            if (value.set?.code) {\r\n              code = value.set?.code;\r\n            } else {\r\n              code = '';\r\n            }\r\n            strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n          });\r\n        }\r\n\r\n        const stringToDownload = strings.join('\\r\\n');\r\n        const data: Blob = new Blob([stringToDownload], {type: 'text/plain;charset=utf-8'});\r\n        const filename = collection.name + '.json';\r\n        const options: FileSaverOptions = {\r\n          autoBom: false,\r\n        };\r\n\r\n        saveAs(data, filename, options);\r\n      });\r\n    });\r\n  }\r\n\r\n  getCardsForComparison() {\r\n    this.totalPrice = 0;\r\n    const cardLines = this.cardsForComparison.split(/[\\r\\n]+/);\r\n    console.log(cardLines);\r\n\r\n    const lines = new Array<CollectionImportPojo>();\r\n\r\n    for (const line of cardLines) {\r\n      if (line && line.trim().length > 0) {\r\n        if (line.charAt(0) >= '0' && line.charAt(0) <= '9') { // first character is a number\r\n          const lineSplit = line.trim().split(/ +/); // to handle cases like \"  first    middle    last    \"\r\n          // tslint:disable-next-line:max-line-length\r\n          const cardNumber = lineSplit[0].split('x')[0];\r\n          let cardName = '';\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 1; i < lineSplit.length; i++) {\r\n            if (lineSplit[i] && lineSplit.length > 0) {\r\n              cardName += lineSplit[i] + ' ';\r\n            }\r\n          }\r\n          lines.push(new CollectionImportPojo(Number(cardNumber), cardName.trim(), null, 0));\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(lines);\r\n    this.foundCollectionItems = undefined;\r\n    this.incompleteCollectionItems = undefined;\r\n    this.missingCollectionItems = undefined;\r\n    this.foundLines = [];\r\n    this.missingLines = [];\r\n    let nbLinesGot = lines.length;\r\n    // TODO : JS pipe or something like that\r\n    for (const line of lines) {\r\n      this.yugiohService.getCardbyName(line.cardName).subscribe(value => {\r\n        line.cardApiId = value.apiId;\r\n        this.foundLines.push(line);\r\n        console.log(this.foundLines);\r\n        nbLinesGot -= 1;\r\n        if (nbLinesGot === 0) {\r\n          this.compareToCollections();\r\n        }\r\n      }, error => {\r\n        this.missingLines.push(line);\r\n        nbLinesGot -= 1;\r\n        if (nbLinesGot === 0) {\r\n          this.compareToCollections();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  compareToCollections() {\r\n    const collectionItems: CollectionItem[] = [];\r\n\r\n    this.foundLines.forEach(line => {\r\n      const card = new Card();\r\n      card.name = line.cardName;\r\n      card.apiId = line.cardApiId;\r\n      const collectionItem = new CollectionItem(0, card, null);\r\n      collectionItem.quantity = line.cardNumber;\r\n      collectionItems.push(collectionItem);\r\n    });\r\n\r\n    this.generateTotalPrice(collectionItems);\r\n    this.findCardsInCollectionAndAssociatePrices(collectionItems);\r\n  }\r\n\r\n  private generateTotalPrice(collectionItems: CollectionItem[]) {\r\n    const apiIds = collectionItems.map(value => value.card.apiId);\r\n    this.yugiohService.getCardsPriceById(apiIds)\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        if (value?.data && value.data.length > 0) {\r\n          const map = new Map<string, number>();\r\n          for (const data of value.data) {\r\n            map.set(String(data.id), data.card_prices[0].cardmarket_price);\r\n          }\r\n          this.totalPrice = 0;\r\n          console.log(map);\r\n          collectionItems.forEach(item => {\r\n            const price = Number(map.get(item.card.apiId));\r\n            if (price) {\r\n              this.totalPrice += price * item.quantity;\r\n              item.card.price = price;\r\n            } else {\r\n              console.log(item.card.apiId);\r\n              item.card.price = 0;\r\n            }\r\n          });\r\n          console.log(this.totalPrice);\r\n          // Keep only last 2 digits\r\n          this.totalPrice = Number(this.totalPrice.toFixed(2));\r\n          this.findCardsInCollectionAndAssociatePrices(collectionItems);\r\n        }\r\n      });\r\n  }\r\n\r\n  private findCardsInCollectionAndAssociatePrices(collectionItems: CollectionItem[]) {\r\n    this.foundCollectionItemsPrice = 0;\r\n    this.incompleteCollectionItemsPrice = 0;\r\n    this.missingCollectionItemsPrice = 0;\r\n    this.yugiohService.findCardsInCollection(collectionItems)\r\n      .subscribe(value => {\r\n        console.log(value);\r\n        value[0].forEach(item => {\r\n          item.price = collectionItems.filter(itemm => itemm.card.name === item.cardName)[0]?.card?.price;\r\n          this.foundCollectionItemsPrice += item.price;\r\n        });\r\n        value[1].forEach(item => {\r\n          item.price = collectionItems.filter(itemm => itemm.card.name === item.cardName)[0]?.card?.price;\r\n          this.incompleteCollectionItemsPrice += item.price;\r\n        });\r\n        value[2].forEach(item => {\r\n          item.price = collectionItems.filter(itemm => itemm.card.name === item.cardName)[0]?.card?.price;\r\n          this.missingCollectionItemsPrice += item.price;\r\n        });\r\n\r\n        // Keep only last 2 digits\r\n        this.foundCollectionItemsPrice = Number(this.foundCollectionItemsPrice.toFixed(2));\r\n        this.incompleteCollectionItemsPrice = Number(this.incompleteCollectionItemsPrice.toFixed(2));\r\n        this.missingCollectionItemsPrice = Number(this.missingCollectionItemsPrice.toFixed(2));\r\n\r\n        this.foundCollectionItems = value[0];\r\n        this.incompleteCollectionItems = value[1];\r\n        this.missingCollectionItems = value[2];\r\n      });\r\n  }\r\n\r\n  onPageChanged($event: PageEvent) {\r\n    console.log('pageChanged');\r\n    this.yugiohService.getCardsPaginated($event.pageIndex, $event.pageSize, this.sort, this.cardSearchValue2, this.filterDto)\r\n      .subscribe(response => {\r\n        this.globalCards = response.body;\r\n        this.totalNumberOfCards = Number(response.headers.get('pageTotalElements'));\r\n      });\r\n  }\r\n\r\n  open(content: TemplateRef<any>, ngbTooltip: NgbTooltip) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      // this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n\r\n    for (let i = 0; i < 11; i++) {\r\n      setTimeout(() => ngbTooltip.close(), 100 * i);\r\n    }\r\n  }\r\n\r\n  openSortDialog() {\r\n    const dialogRef = this.dialog.open(SortDialogComponent, {\r\n      width: '300px',\r\n      data: {\r\n        sort: this.sort !== undefined ? this.sort : null,\r\n        collectionView: false\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(value => {\r\n      console.log(value);\r\n      this.sort = value;\r\n      this.refreshPaginator();\r\n    });\r\n  }\r\n\r\n  filter() {\r\n    this.filterDto.collectionView = false;\r\n    const dialog = this.dialog.open(FilterDialogComponent, {\r\n      width: '500px',\r\n      data: this.filterDto\r\n    });\r\n\r\n    dialog.afterClosed().subscribe(() => {\r\n      console.log(this.filterDto);\r\n      this.refreshPaginator();\r\n    });\r\n  }\r\n\r\n  isFiltered() {\r\n    return this.filterDto.attributes.length > 0\r\n      || this.filterDto.levels.length > 0\r\n      || this.filterDto.cardTypes.length > 0\r\n      || this.filterDto.monsterRaces.length > 0\r\n      || this.filterDto.spellRaces.length > 0\r\n      || this.filterDto.trapRaces.length > 0\r\n      || this.filterDto.archetype;\r\n  }\r\n\r\n  // Filter creators or deck\r\n  toggle(filter, filterList) {\r\n    const index = filterList.indexOf(filter);\r\n    if (index === -1) { // Not present\r\n      filterList.push(filter);\r\n    } else { // Present\r\n      filterList.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getDecksToDisplay() {\r\n    return this.activeDeckCreators.length === 0\r\n      ? this.decks\r\n      : this.decks.filter(deck => this.activeDeckCreators.includes(deck.createdBy));\r\n  }\r\n\r\n  getCollectionsToDisplay() {\r\n    return this.activeCollectionCreators.length === 0\r\n      ? this.collections\r\n      : this.collections.filter(deck => this.activeCollectionCreators.includes(deck.createdBy));\r\n  }\r\n}\r\n","<p>deck-list works!</p>\r\n","import {AfterViewInit, Component, ElementRef, HostListener, OnDestroy, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {YugiohService} from '../../yugioh.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {Card} from './card';\r\nimport {Set} from './set';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Collection} from './collection';\r\nimport {Position} from './position';\r\nimport {CollectionItem} from './collection-item';\r\nimport {Observable, Subject, Subscription} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\r\nimport {DialogImportCollectionComponent, ImportData} from '../../dialog-import-collection/dialog-import-collection.component';\r\nimport {CollectionImportPojo} from './collection-import-pojo';\r\nimport {NgbModal, NgbTooltipConfig} from '@ng-bootstrap/ng-bootstrap';\r\nimport {FullImageDialogComponent} from '../../full-image-dialog/full-image-dialog.component';\r\nimport {CardSort} from '../../sort-dialog/card-sort';\r\nimport {backendUrl} from '../../global';\r\nimport {Image} from './image';\r\nimport {DragulaService} from 'ng2-dragula';\r\nimport {FileSaverOptions, saveAs} from 'file-saver';\r\nimport {FilterDto} from '../../filter-dialog/filter-dto';\r\nimport * as ydke from 'ydke';\r\n\r\n@Component({\r\n  selector: 'app-deck',\r\n  templateUrl: './deck.component.html',\r\n  styleUrls: ['./deck.component.scss'],\r\n  providers: [NgbTooltipConfig]\r\n})\r\nexport class DeckComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  backEndCardUrl = backendUrl + '/cards/';\r\n  backEndCollectionsUrl = backendUrl + '/collections/';\r\n\r\n  canSave = false;\r\n\r\n  cards: Array<Card> = [];\r\n  collection: Collection;\r\n  competitiveViewCollection: Collection;\r\n  sets: Array<Set>;\r\n  Position = Position;\r\n\r\n  sort = CardSort.alphabeticalAsc;\r\n\r\n  mainDeckMonstersItems: Array<CollectionItem> = [];\r\n  mainDeckSpellsItems: Array<CollectionItem> = [];\r\n  mainDeckTrapsItems: Array<CollectionItem> = [];\r\n  extraDeckItems: Array<CollectionItem> = [];\r\n  sideDeckItems: Array<CollectionItem> = [];\r\n  nbMainDeckMonstersItems: number;\r\n  nbMainDeckSpellsItems: number;\r\n  nbMainDeckTrapsItems: number;\r\n  nbExtraDeckItems: number;\r\n  nbSideDeckItems: number;\r\n\r\n  mainDeckMonstersCompetitiveViewItems: Array<CollectionItem> = [];\r\n  mainDeckSpellsCompetitiveViewItems: Array<CollectionItem> = [];\r\n  mainDeckTrapsCompetitiveViewItems: Array<CollectionItem> = [];\r\n  extraDeckCompetitiveViewItems: Array<CollectionItem> = [];\r\n  sideDeckCompetitiveViewItems: Array<CollectionItem> = [];\r\n  nbMainDeckMonstersCompetitiveViewItems: number;\r\n  nbMainDeckSpellsCompetitiveViewItems: number;\r\n  nbMainDeckTrapsCompetitiveViewItems: number;\r\n  nbExtraDeckCompetitiveViewItems: number;\r\n  nbSideDeckCompetitiveViewItems: number;\r\n\r\n  private searchSub$ = new Subject<string>();\r\n  searchCardValue: string;\r\n  deckSearchValue: string;\r\n\r\n  @ViewChild('inputElement') searchInput: ElementRef;\r\n\r\n  mainDeckMap = new Map<string, string>([\r\n    ['Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Flip Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Flip Tuner Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Gemini Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Normal Monster', 'rgba(237, 227, 213, 1)'],\r\n    ['Normal Tuner Monster', 'rgba(237, 227, 213, 1)'],\r\n    ['Pendulum Effect Monster', 'rgba(115, 131, 112, 1)'],\r\n    ['Pendulum Flip Effect Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Pendulum Normal Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Pendulum Tuner Effect Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Ritual Effect Monster', 'rgba(200, 210, 234, 1)'],\r\n    ['Ritual Monster', 'rgba(200, 210, 234 , 1)'],\r\n    ['Skill Card', 'rgb(233, 219, 223)'],\r\n    ['Spell Card', 'rgb(220, 234, 236)'],\r\n    ['Spirit Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Toon Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Trap Card', 'rgb(233, 219, 223)'],\r\n    ['Tuner Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Union Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n  ]);\r\n\r\n  extraDeckMap = new Map<string, string>([\r\n    ['Fusion Monster', 'rgb(216 206 231)'],\r\n    ['Link Monster', 'rgb(57 93 168)'],\r\n    ['Pendulum Effect Fusion Monster', 'rgb(216 206 231)'],\r\n    ['Synchro Monster', 'rgb(238 238 238)'],\r\n    ['Synchro Pendulum Effect Monster', 'rgb(238 238 238)'],\r\n    ['Synchro Tuner Monster', 'rgb(238 238 238)'],\r\n    ['XYZ Monster', 'rgb(193 193 193)'],\r\n    ['XYZ Pendulum Effect Monster', 'rgb(193 193 193)'],\r\n  ]);\r\n\r\n\r\n  sideDeckMap = new Map<string, string>([\r\n    ['Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Flip Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Flip Tuner Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Gemini Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Normal Monster', 'rgba(237, 227, 213, 1)'],\r\n    ['Normal Tuner Monster', 'rgba(237, 227, 213, 1)'],\r\n    ['Pendulum Effect Monster', 'rgba(115, 131, 112, 1)'],\r\n    ['Pendulum Flip Effect Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Pendulum Normal Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Pendulum Tuner Effect Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Ritual Effect Monster', 'rgba(200, 210, 234, 1)'],\r\n    ['Ritual Monster', 'rgba(200, 210, 234 , 1)'],\r\n    ['Skill Card', 'rgb(233, 219, 223)'],\r\n    ['Spell Card', 'rgb(220, 234, 236)'],\r\n    ['Spirit Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Toon Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Trap Card', 'rgb(233, 219, 223)'],\r\n    ['Tuner Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Union Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Fusion Monster', 'rgb(216 206 231)'],\r\n    ['Link Monster', 'rgb(57 93 168)'],\r\n    ['Pendulum Effect Fusion Monster', 'rgb(216 206 231)'],\r\n    ['Synchro Monster', 'rgb(238 238 238)'],\r\n    ['Synchro Pendulum Effect Monster', 'rgb(238 238 238)'],\r\n    ['Synchro Tuner Monster', 'rgb(238 238 238)'],\r\n    ['XYZ Monster', 'rgb(193 193 193)'],\r\n    ['XYZ Pendulum Effect Monster', 'rgb(193 193 193)'],\r\n  ]);\r\n\r\n  subs = new Subscription();\r\n  dragulaName = 'CARDS';\r\n\r\n  filterDto: FilterDto = new FilterDto();\r\n  searchTypes = ['nom', 'set', 'id'];\r\n  searchBy = 'nom';\r\n\r\n  totalPrice: number;\r\n  cardPriceMap = new Map<Card, number>();\r\n  cardPriceEntries: [Card, number][];\r\n\r\n  constructor(private yugiohService: YugiohService, private snackBar: MatSnackBar, private modalService: NgbModal,\r\n              private route: ActivatedRoute, public dialog: MatDialog, config: NgbTooltipConfig, private dragulaService: DragulaService) {\r\n    config.openDelay = 400;\r\n\r\n    this.subs.add(dragulaService.dropModel(this.dragulaName)\r\n      .subscribe(({el, target, source, sourceModel, targetModel, item}) => {\r\n        const collectionItem = item as CollectionItem;\r\n        collectionItem.position =\r\n          target.id === 'id-main-monsters' || target.id === 'id-main-spells' || target.id === 'id-main-traps'\r\n            ? Position.MAIN_DECK : target.id === 'id-side' ? Position.SIDE_DECK : Position.EXTRA_DECK;\r\n\r\n        // Fuse collectionItem with same apiId but not in the same object. Happens when 1 raigeki is in spell zone and 1 raigeki is side deck,\r\n        // when one raigeki is moved to the other zone then we have 2 CollectionItems with 1 raigeki, instead, we want 1 CollectionItem we 2 raigeki\r\n        const duplicateApiId = this.collection.items.filter(value => value.card.apiId === collectionItem.card.apiId && collectionItem.position === value.position && value.set.code === collectionItem.set.code && value.card.language === collectionItem.card.language);\r\n        console.log(duplicateApiId);\r\n        if (duplicateApiId.length === 2) {\r\n          duplicateApiId[0].quantity += duplicateApiId[1].quantity;\r\n          this.collection.items.splice(this.collection.items.indexOf(duplicateApiId[1]), 1);\r\n        }\r\n        console.log('UPDATE LOCALE COLLECTION');\r\n        setTimeout(() => {\r\n          this.localUpdateCollection(true);\r\n        }, 25); // needed or else the reordering of the items in the UI is not done properly\r\n      })\r\n    );\r\n\r\n    dragulaService.createGroup(this.dragulaName, {\r\n      accepts: (el, target, source, sibling) => {\r\n        // To avoid dragging from right to left container\r\n        const cardType: string = el.classList.value.split('|')[0];\r\n        console.log(cardType);\r\n        switch (source.id) {\r\n          case 'id-main-monsters':\r\n            return target.id === 'id-main-monsters' || target.id === 'id-side';\r\n          case 'id-main-spells':\r\n            return target.id === 'id-main-spells' || target.id === 'id-side';\r\n          case 'id-main-traps':\r\n            return target.id === 'id-main-traps' || target.id === 'id-side';\r\n          case 'id-extra':\r\n            return target.id === 'id-extra' || target.id === 'id-side';\r\n          case 'id-side': {\r\n            if (target.id === 'id-main-monsters') {\r\n              console.log(this.mainDeckMap.get(cardType) && cardType.toLowerCase().includes('monster') !== undefined);\r\n              return this.mainDeckMap.get(cardType) && cardType.toLowerCase().includes('monster') !== undefined;\r\n            } else if (target.id === 'id-main-spells') {\r\n              console.log(this.mainDeckMap.get(cardType) && cardType.toLowerCase().includes('spell') !== undefined);\r\n              return this.mainDeckMap.get(cardType) && cardType.toLowerCase().includes('spell') !== undefined;\r\n            } else if (target.id === 'id-main-traps') {\r\n              console.log(this.mainDeckMap.get(cardType) && cardType.toLowerCase().includes('trap') !== undefined);\r\n              return this.mainDeckMap.get(cardType) && cardType.toLowerCase().includes('trap') !== undefined;\r\n            } else if (target.id === 'id-extra') {\r\n              console.log(this.extraDeckMap.get(cardType));\r\n              return this.extraDeckMap.get(cardType) !== undefined;\r\n            } else {\r\n              return true;\r\n            }\r\n          }\r\n          default:\r\n            return true;\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const localFilterDto = JSON.parse(localStorage.getItem('filterDto'));\r\n    this.filterDto = localFilterDto ? localFilterDto : new FilterDto();\r\n\r\n    this.yugiohService.getCardsbyName()\r\n      .subscribe(cards => {\r\n        this.cards = cards;\r\n        if (this.collection) {\r\n          this.refreshCollectionView();\r\n        }\r\n      });\r\n\r\n    this.deckSearchValue = this.route.snapshot.queryParamMap.get('cardSearchValue');\r\n    this.yugiohService.getCollectionById(this.route.snapshot.paramMap.get('id'))\r\n      .subscribe(collection => {\r\n        this.collection = collection;\r\n        this.generateTotalPrice();\r\n        this.refreshCollectionView();\r\n      });\r\n    this.yugiohService.getSets().subscribe(sets => this.sets = sets,\r\n      () => this.openSnackBar('Erreur lors de la récupération des sets', 'OK'));\r\n\r\n    this.searchSub$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged()\r\n    ).subscribe((filterValue: string) => {\r\n      this.searchCardWithString(filterValue);\r\n    });\r\n  }\r\n\r\n  private generateTotalPrice() {\r\n    if (!this.totalPrice) {\r\n      const apiIds = this.collection.items.map(value => value.card.apiId);\r\n      this.yugiohService.getCardsPriceById(apiIds)\r\n        .subscribe(value => {\r\n          console.log(value);\r\n          if (value?.data && value.data.length > 0) {\r\n            const map = new Map<string, number>();\r\n            for (const data of value.data) {\r\n              map.set(String(data.id), data.card_prices[0].cardmarket_price);\r\n              this.cardPriceMap.set(this.collection.items.map(item => item.card)\r\n                .find(c => c.apiId === String(data.id)), data.card_prices[0].cardmarket_price);\r\n            }\r\n            // sort\r\n            this.cardPriceEntries = Array.from(new Map([...this.cardPriceMap.entries()].sort((a, b) => b[1] - a[1])).entries());\r\n            console.log(map);\r\n            this.totalPrice = 0;\r\n            this.collection.items.forEach(item => {\r\n              const price = Number(map.get(item.card.apiId));\r\n              if (price) {\r\n                this.totalPrice += price * item.quantity;\r\n                item.card.price = price;\r\n              } else {\r\n                console.log(item.card.apiId);\r\n                item.card.price = 0;\r\n              }\r\n            });\r\n            console.log(this.totalPrice);\r\n            // Keep only last 2 digits\r\n            this.totalPrice = Number(this.totalPrice.toFixed(2));\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  searchCardWithString(search: string) {\r\n    let cardsObservable: Observable<Array<Card>>;\r\n    if (this.searchBy === 'id') {\r\n      cardsObservable = this.yugiohService.getCardsByApiId(search.trim().toLowerCase());\r\n    } else if (this.searchBy === 'nom') {\r\n      cardsObservable = this.yugiohService.getCardsbyName(search.trim().toLowerCase());\r\n    } else if (this.searchBy === 'set') {\r\n      cardsObservable = this.yugiohService.getCardsBySet(search.trim().toLowerCase());\r\n    }\r\n\r\n    cardsObservable\r\n      .subscribe(cards => {\r\n        this.cards = cards;\r\n        if (this.collection) {\r\n          this.refreshCollectionView();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // destroy all the subscriptions at once\r\n    this.subs.unsubscribe();\r\n    this.dragulaService.destroy(this.dragulaName);\r\n  }\r\n\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.code === 'Escape') {\r\n      setTimeout(() => {\r\n        this.searchInput.nativeElement.blur();\r\n        this.searchInput.nativeElement.focus();\r\n      }, 15);\r\n    }\r\n  }\r\n\r\n  applyCardFilter($event: KeyboardEvent) {\r\n    console.log($event);\r\n    let searchValue;\r\n    if ($event) {\r\n      if ($event.code === 'Escape') {\r\n        searchValue = '';\r\n      } else {\r\n        console.log(($event.target as HTMLInputElement).value);\r\n        searchValue = ($event.target as HTMLInputElement).value;\r\n      }\r\n    } else {\r\n      searchValue = '';\r\n    }\r\n    this.searchCardValue = searchValue;\r\n    this.searchSub$.next(searchValue);\r\n  }\r\n\r\n\r\n  addCollectionItemSimple(item: CollectionItem) {\r\n    if (item.quantity < 3) { // TODO : handle quantity\r\n      item.quantity += 1;\r\n      this.localUpdateCollection(true);\r\n    }\r\n  }\r\n\r\n  removeCollectionItemSimple(item: CollectionItem) { // if add = false then it is a removal\r\n    console.log(this.collection.items.length);\r\n    if (item.quantity > 1) {\r\n      item.quantity -= 1;\r\n    } else {\r\n      this.collection.items.splice(this.collection.items.indexOf(item), 1);\r\n    }\r\n    this.localUpdateCollection(true);\r\n  }\r\n\r\n  addCollectionItem(card: Card, setCode: string, position: Position) { // if add = false then it is a removal\r\n    let isUpdate = false;\r\n\r\n    const set = this.sets.filter(cardSet => cardSet.code === setCode)[0];\r\n    for (const item of this.collection.items) {\r\n      if (item.card.id === card.id && item.position === position && item?.set?.code === set?.code) {\r\n        if (item.quantity < 3) {\r\n          item.quantity += 1;\r\n          isUpdate = true;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (!isUpdate) {\r\n      this.collection.items.push(new CollectionItem(position, card, set));\r\n    }\r\n    this.localUpdateCollection(true);\r\n  }\r\n\r\n  removeCollectionItem(card: Card, setCode: string, position: Position) {\r\n    console.log('removeCollectionItem');\r\n    const set = this.sets.filter(cardSet => cardSet.code === setCode)[0];\r\n    for (const item of this.collection.items) {\r\n      // TODO : fix issues with enum between spring and angular\r\n      if (item.card.id === card.id && item.position === position && item?.set?.code === set.code) {\r\n        if (item.quantity > 1) {\r\n          item.quantity -= 1;\r\n        } else {\r\n          this.collection.items.splice(this.collection.items.indexOf(item), 1);\r\n        }\r\n      }\r\n    }\r\n    this.localUpdateCollection(true);\r\n    return false;\r\n  }\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  refreshCollectionView() {\r\n    this.mainDeckSpellsItems = [];\r\n    this.mainDeckTrapsItems = [];\r\n    this.mainDeckMonstersItems = [];\r\n    this.extraDeckItems = [];\r\n    this.sideDeckItems = [];\r\n    this.nbMainDeckMonstersItems = 0;\r\n    this.nbMainDeckSpellsItems = 0;\r\n    this.nbMainDeckTrapsItems = 0;\r\n    this.nbExtraDeckItems = 0;\r\n    this.nbSideDeckItems = 0;\r\n\r\n    this.sortCollection(this.collection.items);\r\n\r\n    for (const item of this.collection.items) {\r\n      if (this.deckSearchValue && this.deckSearchValue.length > 0\r\n        && !item.card.name.toLowerCase().includes(this.deckSearchValue.toLowerCase())) {\r\n        continue;\r\n      }\r\n      if (!this.applyFilters(item)) {\r\n        continue;\r\n      }\r\n\r\n      switch (item.position) {\r\n        case Position.MAIN_DECK:\r\n          if (item.card.type === 'Spell Card') {\r\n            this.mainDeckSpellsItems.push(item);\r\n          } else if (item.card.type === 'Trap Card') {\r\n            this.mainDeckTrapsItems.push(item);\r\n          } else {\r\n            this.mainDeckMonstersItems.push(item);\r\n          }\r\n          break;\r\n        case Position.EXTRA_DECK:\r\n          this.extraDeckItems.push(item);\r\n          break;\r\n        case Position.SIDE_DECK:\r\n          this.sideDeckItems.push(item);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    for (const item of this.mainDeckMonstersItems) {\r\n      this.nbMainDeckMonstersItems += item.quantity;\r\n    }\r\n    for (const item of this.mainDeckSpellsItems) {\r\n      this.nbMainDeckSpellsItems += item.quantity;\r\n    }\r\n    for (const item of this.mainDeckTrapsItems) {\r\n      this.nbMainDeckTrapsItems += item.quantity;\r\n    }\r\n    for (const item of this.extraDeckItems) {\r\n      this.nbExtraDeckItems += item.quantity;\r\n    }\r\n    for (const item of this.sideDeckItems) {\r\n      this.nbSideDeckItems += item.quantity;\r\n    }\r\n\r\n    this.collection.totalItems = this.collection.items.map(value => value.quantity)\r\n      .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\r\n\r\n    this.refreshCompetitiveCollectionView();\r\n    this.populateCardValues();\r\n  }\r\n\r\n  refreshCompetitiveCollectionView() {\r\n    this.mainDeckSpellsCompetitiveViewItems = [];\r\n    this.mainDeckTrapsCompetitiveViewItems = [];\r\n    this.mainDeckMonstersCompetitiveViewItems = [];\r\n    this.extraDeckCompetitiveViewItems = [];\r\n    this.sideDeckCompetitiveViewItems = [];\r\n    this.nbMainDeckMonstersCompetitiveViewItems = 0;\r\n    this.nbMainDeckSpellsCompetitiveViewItems = 0;\r\n    this.nbMainDeckTrapsCompetitiveViewItems = 0;\r\n    this.nbExtraDeckCompetitiveViewItems = 0;\r\n    this.nbSideDeckCompetitiveViewItems = 0;\r\n\r\n    this.competitiveViewCollection = this.aggregateItems(this.collection);\r\n\r\n    this.sortCollection(this.competitiveViewCollection.items);\r\n\r\n    for (const item of this.competitiveViewCollection.items) {\r\n      // Osef des filtres ?\r\n      if (this.deckSearchValue && this.deckSearchValue.length > 0\r\n        && !item.card.name.toLowerCase().includes(this.deckSearchValue.toLowerCase())) {\r\n        continue;\r\n      }\r\n      if (!this.applyFilters(item)) {\r\n        continue;\r\n      }\r\n\r\n      switch (item.position) {\r\n        case Position.MAIN_DECK:\r\n          if (item.card.type === 'Spell Card') {\r\n            this.mainDeckSpellsCompetitiveViewItems.push(item);\r\n          } else if (item.card.type === 'Trap Card') {\r\n            this.mainDeckTrapsCompetitiveViewItems.push(item);\r\n          } else {\r\n            this.mainDeckMonstersCompetitiveViewItems.push(item);\r\n          }\r\n          break;\r\n        case Position.EXTRA_DECK:\r\n          this.extraDeckCompetitiveViewItems.push(item);\r\n          break;\r\n        case Position.SIDE_DECK:\r\n          this.sideDeckCompetitiveViewItems.push(item);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    for (const item of this.mainDeckMonstersCompetitiveViewItems) {\r\n      this.nbMainDeckMonstersCompetitiveViewItems += item.quantity;\r\n    }\r\n    for (const item of this.mainDeckSpellsCompetitiveViewItems) {\r\n      this.nbMainDeckSpellsCompetitiveViewItems += item.quantity;\r\n    }\r\n    for (const item of this.mainDeckTrapsCompetitiveViewItems) {\r\n      this.nbMainDeckTrapsCompetitiveViewItems += item.quantity;\r\n    }\r\n    for (const item of this.extraDeckCompetitiveViewItems) {\r\n      this.nbExtraDeckCompetitiveViewItems += item.quantity;\r\n    }\r\n    for (const item of this.sideDeckCompetitiveViewItems) {\r\n      this.nbSideDeckCompetitiveViewItems += item.quantity;\r\n    }\r\n\r\n    this.competitiveViewCollection.totalItems = this.competitiveViewCollection.items.map(value => value.quantity)\r\n      .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\r\n  }\r\n\r\n\r\n  sortCollection(items: CollectionItem[]) {\r\n    // nb, lelve, atk, def , price\r\n    switch (this.sort) {\r\n      case CardSort.alphabeticalAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.name.localeCompare(b.card.name));\r\n        break;\r\n      case CardSort.alphabeticalDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.name.localeCompare(a.card.name));\r\n        break;\r\n      case CardSort.nbOwnedAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.quantity - b.quantity);\r\n        break;\r\n      case CardSort.nbOwnedDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.quantity - a.quantity);\r\n        break;\r\n      case CardSort.levelRankLinkAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.level - b.card.level);\r\n        break;\r\n      case CardSort.levelRankLinkDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.level - a.card.level);\r\n        break;\r\n      case CardSort.atkAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.atk - b.card.atk);\r\n        break;\r\n      case CardSort.atkDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.atk - a.card.atk);\r\n        break;\r\n      case CardSort.defAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.def - b.card.def);\r\n        break;\r\n      case CardSort.defDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.def - a.card.def);\r\n        break;\r\n      case CardSort.priceAsc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || a.card.price - b.card.price);\r\n        break;\r\n      case CardSort.priceDesc:\r\n        items.sort((a, b) => a.card.type.localeCompare(b.card.type) || b.card.price - a.card.price);\r\n        break;\r\n    }\r\n\r\n    // TODO : filter by card type, monster, xyz, etc\r\n  }\r\n\r\n  aggregateItems(collection: Collection): Collection {\r\n    collection = JSON.parse(JSON.stringify(collection));\r\n    const aggregatedCollection = new Collection(collection.name, 'DECK');\r\n\r\n    const mapApiIdAndPositionItems = new Map<string, CollectionItem>();\r\n\r\n    collection.items.forEach(item => {\r\n      const mapItem = mapApiIdAndPositionItems.get(item.card.apiId + item.position);\r\n      if (mapItem) {\r\n        mapItem.quantity += item.quantity;\r\n      } else {\r\n        mapApiIdAndPositionItems.set(item.card.apiId + item.position, item);\r\n      }\r\n    });\r\n\r\n    aggregatedCollection.items.push(...mapApiIdAndPositionItems.values());\r\n\r\n    collection = aggregatedCollection;\r\n    collection.id = null; // TODO TODO -> IMPORTANT : KEEP NULL AT ALL COSTS OR ELSE IT WILL MESS UP WITH EXISTING COLLECTIONS !\r\n    return collection;\r\n  }\r\n\r\n  applyFilters(item: CollectionItem): boolean {\r\n    // Si filtre présent et cardType pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.cardTypes.length > 0\r\n      && this.filterDto.cardTypes.filter(value => item.card.type.toLowerCase().includes(value.toLowerCase())).length === 0) {\r\n      return false;\r\n    }\r\n\r\n    // Si filtre présent et attribute pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.attributes.length > 0 && this.filterDto.attributes.indexOf(item.card.attribute) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et level pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.levels.length > 0 && this.filterDto.levels.indexOf(item.card.level) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et monster race pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.monsterRaces.length > 0 && this.filterDto.monsterRaces.indexOf(item.card.race) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et spell race pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.spellRaces.length > 0 && this.filterDto.spellRaces.indexOf(item.card.race) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et trap race pas dans la liste de filtre alors on l'enlève\r\n    if (this.filterDto?.trapRaces.length > 0 && this.filterDto.trapRaces.indexOf(item.card.race) === -1) {\r\n      return false;\r\n    }\r\n    // Si filtre présent et archétype différent du filtre alors on l'enlève\r\n    if (this.filterDto.archetype && item.card.archetype !== this.filterDto.archetype) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  populateCardValues() {\r\n    this.cards.forEach(card => {\r\n      card.mapMainDeckQuantity = new Map<string, number>();\r\n      card.mapExtraDeckQuantity = new Map<string, number>();\r\n      card.mapSideDeckQuantity = new Map<string, number>();\r\n      this.collection?.items.forEach(item => {\r\n        if (item.card.name === card.name && item.set) {\r\n          if (item.position === 0) {\r\n            card.mapMainDeckQuantity.set(item.set.code, item.quantity);\r\n          } else if (item.position === 1) {\r\n            card.mapExtraDeckQuantity.set(item.set.code, item.quantity);\r\n          } else if (item.position === 2) {\r\n            card.mapSideDeckQuantity.set(item.set.code, item.quantity);\r\n          }\r\n          return;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  uploadFile(event) {\r\n    // for (let index = 0; index < event.length; index++) {\r\n    const element = event.target.files[0]; // we keep only the 1st image\r\n    if (!this.collection.images) {\r\n      this.collection.images = [];\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(element);\r\n    reader.onload = () => {\r\n      const imageWithoutBase64Prefix = reader.result.toString().split(',')[1];\r\n      if (this.collection.images) {\r\n        this.collection.images.push(new Image(imageWithoutBase64Prefix));\r\n      } else {\r\n        this.collection.images = [new Image(imageWithoutBase64Prefix)];\r\n      }\r\n      this.localUpdateCollection(true);\r\n    };\r\n  }\r\n\r\n  openFullWidthImageDialog(image: Image) {\r\n    const imageUrl = backendUrl + '/collections/' + this.collection.id + '/images/' + image.id;\r\n    this.dialog.open(FullImageDialogComponent, {\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      height: '100%',\r\n      width: '100%',\r\n      panelClass: 'full-screen-modal',\r\n      data: imageUrl\r\n    });\r\n  }\r\n\r\n  deleteImage(image: Image) {\r\n    this.collection.images.splice(this.collection.images.indexOf(image), 1);\r\n    this.localUpdateCollection(true);\r\n  }\r\n\r\n  saveDeck() {\r\n    // Reorganize position of collectionItems before saving collections\r\n    this.mainDeckMonstersItems.forEach(value => value.position = Position.MAIN_DECK);\r\n    this.mainDeckSpellsItems.forEach(value => value.position = Position.MAIN_DECK);\r\n    this.mainDeckTrapsItems.forEach(value => value.position = Position.MAIN_DECK);\r\n    this.extraDeckItems.forEach(value => value.position = Position.EXTRA_DECK);\r\n    this.sideDeckItems.forEach(value => value.position = Position.SIDE_DECK);\r\n\r\n    this.yugiohService.addOrUpdateCollection(this.collection)\r\n      .subscribe(collection => {\r\n          this.collection = collection;\r\n          this.refreshCollectionView();\r\n          this.localUpdateCollection(false);\r\n        },\r\n        () => this.openSnackBar('Erreur lors de la sauvegarde', 'OK'));\r\n  }\r\n\r\n  localUpdateCollection(canSave: boolean) {\r\n    this.canSave = canSave;\r\n    console.log(this.collection);\r\n    this.refreshCollectionView();\r\n    if (canSave) {\r\n      window.onbeforeunload = (e) => {\r\n        // IE & Firefox\r\n        if (e) {\r\n          e.returnValue = 'Are you sure?';\r\n        }\r\n\r\n        // For Safari\r\n        return 'Are you sure?';\r\n      };\r\n    } else {\r\n      window.onbeforeunload = null; // no alert on close window\r\n    }\r\n  }\r\n\r\n  canDeactivate(): boolean {\r\n    if (this.canSave) {\r\n      if (confirm('Les modification apportées au deck n\\'ont pas été sauvegardées. Quitter quand même ?')) {\r\n        window.onbeforeunload = null; // no alert on close window\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    window.onbeforeunload = null; // no alert on close window\r\n    return true;\r\n  }\r\n\r\n  onClick($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    if ($event.which === 2) {\r\n      window.open('/');\r\n    }\r\n  }\r\n\r\n  setCardAsCollectionImage(cardApidId: string) {\r\n    this.collection.mainCardApiId = cardApidId;\r\n    this.localUpdateCollection(true);\r\n    return false;\r\n  }\r\n\r\n  cardSearchTypeChange() {\r\n    this.searchCardWithString(this.searchCardValue);\r\n  }\r\n\r\n  open(content: TemplateRef<any>) {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      // this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  textAreaChanged() {\r\n    this.localUpdateCollection(true);\r\n  }\r\n\r\n  // Search deck section\r\n  searchValueChanged($event: string) {\r\n    this.deckSearchValue = $event;\r\n    this.refreshCollectionView();\r\n  }\r\n\r\n  applyFilter(filterDto: FilterDto) {\r\n    this.filterDto = filterDto;\r\n    this.refreshCollectionView();\r\n  }\r\n\r\n  applySort(sort: CardSort) {\r\n    this.sort = sort;\r\n    this.refreshCollectionView();\r\n  }\r\n\r\n  download() {\r\n    const strings = new Array<string>();\r\n\r\n    strings.push('main deck');\r\n    this.mainDeckMonstersItems.forEach(value => {\r\n      let code: string;\r\n      if (value.set?.code) {\r\n        code = value.set?.code;\r\n      } else {\r\n        code = '';\r\n      }\r\n      strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n    });\r\n\r\n    this.mainDeckSpellsItems.forEach(value => {\r\n      let code: string;\r\n      if (value.set?.code) {\r\n        code = value.set?.code;\r\n      } else {\r\n        code = '';\r\n      }\r\n      strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n    });\r\n\r\n\r\n    this.mainDeckTrapsItems.forEach(value => {\r\n      let code: string;\r\n      if (value.set?.code) {\r\n        code = value.set?.code;\r\n      } else {\r\n        code = '';\r\n      }\r\n      strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n    });\r\n\r\n    strings.push('extra deck');\r\n    this.extraDeckItems.forEach(value => {\r\n      let code: string;\r\n      if (value.set?.code) {\r\n        code = value.set?.code;\r\n      } else {\r\n        code = '';\r\n      }\r\n      strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n    });\r\n\r\n    strings.push('side deck');\r\n    this.sideDeckItems.forEach(value => {\r\n      let code: string;\r\n      if (value.set?.code) {\r\n        code = value.set?.code;\r\n      } else {\r\n        code = '';\r\n      }\r\n      strings.push(value.quantity + ' ' + value.card.name + ' ' + code);\r\n    });\r\n\r\n    const stringToDownload = strings.join('\\r\\n');\r\n\r\n    const data: Blob = new Blob([stringToDownload], {type: 'text/plain;charset=utf-8'});\r\n    const filename = this.collection.name + '.json';\r\n    const options: FileSaverOptions = {\r\n      autoBom: false,\r\n    };\r\n\r\n    saveAs(data, filename, options);\r\n  }\r\n\r\n  importAsYdke(lines: Array<CollectionImportPojo>) {\r\n    this.yugiohService.importCollectionYdke(this.collection.id, lines).subscribe(collection => {\r\n      this.collection = collection;\r\n      this.localUpdateCollection(false);\r\n    });\r\n  }\r\n\r\n  exportAsYdke() {\r\n    const ydkeString = ydke.toURL({\r\n      main: Uint32Array.from([...this.extractIds(this.mainDeckMonstersItems),\r\n        ...this.extractIds(this.mainDeckSpellsItems),\r\n        ...this.extractIds(this.mainDeckTrapsItems)]),\r\n      extra: Uint32Array.from(this.extractIds(this.extraDeckItems)),\r\n      side: Uint32Array.from(this.extractIds(this.sideDeckItems))\r\n    });\r\n\r\n\r\n    // Copy to clipboard\r\n    const selBox = document.createElement('textarea');\r\n    selBox.style.position = 'fixed';\r\n    selBox.style.left = '0';\r\n    selBox.style.top = '0';\r\n    selBox.style.opacity = '0';\r\n    selBox.value = ydkeString;\r\n    document.body.appendChild(selBox);\r\n    selBox.focus();\r\n    selBox.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(selBox);\r\n\r\n    this.openSnackBar('Deck copié dans le presse papier', 'OK');\r\n  }\r\n\r\n  extractIds(collectionItems: Array<CollectionItem>): number[] {\r\n    const array = [];\r\n    collectionItems.forEach(item => Array.from(Array(item.quantity).keys()).forEach(() => array.push(Number(item.card.apiId))));\r\n    return array;\r\n  }\r\n\r\n  openImportDialog() {\r\n    const dialogRef = this.dialog.open(DialogImportCollectionComponent, {\r\n      width: '400px',\r\n      data: this.collection\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      const importData = result as ImportData;\r\n      console.log('The dialog was closed');\r\n      if (importData.selectedIndex === 0) {\r\n        const cardLines = result.split(/[\\r\\n]+/);\r\n        console.log(cardLines);\r\n        const lines = new Array<CollectionImportPojo>();\r\n\r\n        const indexMainLine = cardLines.findIndex(element => element.includes('main'));\r\n        const indexExtraLine = cardLines.findIndex(element => element.includes('extra'));\r\n        const indexSideLine = cardLines.findIndex(element => element.includes('side'));\r\n\r\n        for (let i = indexMainLine + 1; i < cardLines.length; i++) {\r\n          if (i === indexExtraLine || i === indexSideLine) {\r\n            i++; // skip line 'EXTRA' and 'SIDE'\r\n          }\r\n          const line = cardLines[i];\r\n          console.log(line);\r\n          if (line && line.trim().length > 0) {\r\n            const lineSplit = line.trim().split(/ +/); // to handle cases like \"  first    middle    last    \"\r\n            // tslint:disable-next-line:max-line-length\r\n            const linePotentialSet = this.sets.filter(value => value?.code.toLowerCase() === lineSplit[lineSplit.length - 1].toLowerCase());\r\n            const cardNumber: any = lineSplit[0].charAt(0); // TODO : DOESN'T WORK FOR NUMBER higher than 9 because we only keep the first character\r\n            const position = i < indexExtraLine ? 0 : i < indexSideLine ? 1 : 2;\r\n            let cardName = '';\r\n            const cardCode = linePotentialSet && linePotentialSet.length > 0 ? linePotentialSet[0].code : null;\r\n            // tslint:disable-next-line:prefer-for-of\r\n            for (let j = 1; j < (cardCode ? lineSplit.length - 1 : lineSplit.length); j++) {\r\n              if (lineSplit[j] && lineSplit.length > 0) {\r\n                cardName += lineSplit[j] + ' ';\r\n              }\r\n            }\r\n            lines.push(new CollectionImportPojo(cardNumber, cardName.trim(), cardCode, position));\r\n          }\r\n        }\r\n\r\n        this.yugiohService.importCollection(this.collection.id, lines).subscribe(value => {\r\n          this.collection = value.collection;\r\n          this.localUpdateCollection(false);\r\n          this.openSnackBar(value.notAddedPojos.toString(), 'OK');\r\n        });\r\n      } else {\r\n        this.yugiohService.importCollectionBySet(this.collection.id, importData.setCode, importData.language).subscribe(value => {\r\n          this.collection = value;\r\n          this.localUpdateCollection(false);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div style=\"display: flex\">\r\n  <div\r\n    style=\"min-width: 300px; max-width: 300px; display: flex; flex-direction: column; height: calc(100vh - 58px); overflow-y: auto;background-color: rgb(15 15 15); padding-left: 4px; padding-right: 4px\"\r\n    class=\"card-column\">\r\n    <div style=\"display: flex\">\r\n      <mat-form-field appearance=\"outline\" [style.fontSize.px]=\"14\" style=\"width: 75%\">\r\n        <input #inputElement id=\"sidebar-search-input\" matInput\r\n               [placeholder]=\"'Recherche par '\"\r\n               [(ngModel)]=\"searchCardValue\" (keyup)=\"applyCardFilter($event)\">\r\n        <button mat-icon-button matSuffix (click)=\"applyCardFilter(null)\">\r\n          <mat-icon>clear</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" [style.fontSize.px]=\"14\" style=\"width: 25%\">\r\n        <mat-select [(value)]=\"searchBy\" (selectionChange)=\"cardSearchTypeChange()\">\r\n          <mat-option *ngFor=\"let searchType of searchTypes\" [value]=\"searchType\">\r\n            {{searchType}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div *ngFor=\"let card of cards | sort:'name'\" style=\"display:flex; width: 100%;\" [ngbTooltip]=\"tipContent\"\r\n         [container]=\"'body'\">\r\n      <div style=\"width: 20%\">\r\n        <img class=\"img-fluid\" style=\"margin-right: 4px\" src=\"{{backEndCardUrl + card.apiId + '/image'}}\"\r\n             alt=\"Character picture\">\r\n      </div>\r\n      <div style=\"width: 45%\">\r\n        <div class=\"list-card-name\">{{card.name}}</div>\r\n        <div class=\"list-card-content\">{{card.attribute}}\r\n          <span *ngIf=\"card.type !== 'Spell Card' && card.type !== 'Trap Card'\">-</span> {{card.race}}</div>\r\n        <!--<div>{{card.level}}</div>-->\r\n        <div class=\"list-card-content\" *ngIf=\"card.type !== 'Spell Card' && card.type !== 'Trap Card'\">{{card.atk}}\r\n          / {{card.def}}</div>\r\n      </div>\r\n      <div>\r\n        <div *ngFor=\"let set of card.setCodes | sort\" style=\"display: flex; align-items: center\">\r\n          <div class=\"list-card-content\" style=\"width: 38px\">{{ set }}</div>\r\n          <div class=\"list-card-mat-icon\" style=\"border-radius: 6px 0 0 6px;\" *ngIf=mainDeckMap.get(card.type)\r\n               (contextmenu)=\"removeCollectionItem(card, set, Position.MAIN_DECK)\"\r\n               (click)=\"addCollectionItem(card, set, Position.MAIN_DECK)\">{{card?.mapMainDeckQuantity?.get(set) ? card?.mapMainDeckQuantity.get(set) : 'M'}}\r\n          </div>\r\n          <div class=\"list-card-mat-icon\" *ngIf=\"card.type !== 'Spell Card' && card.type !== 'Trap Card'\"\r\n               (contextmenu)=\"removeCollectionItem(card, set, Position.EXTRA_DECK)\"\r\n               (click)=\"addCollectionItem(card, set, Position.EXTRA_DECK)\">\r\n            {{card?.mapExtraDeckQuantity?.get(set) ? card?.mapExtraDeckQuantity.get(set) : 'E'}}\r\n          </div>\r\n          <div class=\"list-card-mat-icon\" style=\"border-radius: 0 6px 6px 0;\"\r\n               (contextmenu)=\"removeCollectionItem(card, set, Position.SIDE_DECK)\"\r\n               (click)=\"addCollectionItem(card, set, Position.SIDE_DECK)\">{{card?.mapSideDeckQuantity?.get(set) ? card?.mapSideDeckQuantity.get(set) : 'S'}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ng-template #tipContent>\r\n        <app-tooltip-card [card]=\"card\"></app-tooltip-card>\r\n      </ng-template>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div style=\"width: 100%; max-height: calc(100vh - 58px); display: flex; flex-direction: column; overflow-y: auto;\">\r\n    <app-bar-collection-information [canSave]=\"canSave\" [collection]=\"collection\"\r\n                                    [totalPrice]=\"totalPrice\"\r\n                                    (save)=\"saveDeck()\"\r\n                                    (removeImage)=\"setCardAsCollectionImage(null)\"></app-bar-collection-information>\r\n    <app-search (searchValueChanged)=\"searchValueChanged($event)\" (filterDtoChanged)=\"applyFilter($event)\"\r\n                (sortChanged)=\"applySort($event)\"\r\n                (downloadClicked)=\"download()\" (importYdkeClicked)=\"importAsYdke($event)\"\r\n                (exportYdkeClicked)=\"exportAsYdke()\" (importDialogClicked)=\"openImportDialog()\"></app-search>\r\n    <div>\r\n      <mat-tab-group>\r\n        <mat-tab label=\"Cartes\">\r\n          <div class=\"container-fluid\"\r\n               style=\"display: flex; flex-direction: column; height:100%; padding-right: 0\">\r\n            <div class=\"row\" style=\"width: 100%;\">\r\n              <div class=\"col-lg-6\" style=\"padding-right: 1vw; padding-left: 1vw; padding-bottom: 1vh\">\r\n                <mat-accordion multi>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\" style=\"margin-top: 0\">\r\n                          Main Deck ({{nbMainDeckMonstersItems + nbMainDeckSpellsItems + nbMainDeckTrapsItems}}),\r\n                          Monstres ({{nbMainDeckMonstersItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-main-monsters\" style=\"min-height: 20px\" [dragula]=\"dragulaName\"\r\n                         [(dragulaModel)]=\"mainDeckMonstersItems\">\r\n                      <div *ngFor=\"let item of mainDeckMonstersItems\"\r\n                           [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\" ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\"\r\n                             [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}} <span\r\n                                *ngIf=\"item.set?.code\"> - {{item.set.code}}</span></div>\r\n                            </div>\r\n                            <div>\r\n                              <mat-icon (click)=\"addCollectionItemSimple(item); $event.stopPropagation();\">add_circle\r\n                              </mat-icon>\r\n                              <mat-icon (click)=\"removeCollectionItemSimple(item); $event.stopPropagation()\">\r\n                                remove_circle\r\n                              </mat-icon>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\">\r\n                          Magies ({{nbMainDeckSpellsItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-main-spells\" style=\"min-height: 20px\" [dragula]=\"dragulaName\"\r\n                         [(dragulaModel)]=\"mainDeckSpellsItems\">\r\n                      <div *ngFor=\"let item of mainDeckSpellsItems\"\r\n                           [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\" ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}} <span\r\n                                *ngIf=\" item.set?.code\"> - {{item.set.code}}</span></div>\r\n                            </div>\r\n                            <div>\r\n                              <mat-icon\r\n                                (click)=\"addCollectionItemSimple(item); $event.stopPropagation();\">add_circle\r\n                              </mat-icon>\r\n                              <mat-icon\r\n                                (click)=\"removeCollectionItemSimple(item); $event.stopPropagation()\">\r\n                                remove_circle\r\n                              </mat-icon>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\">\r\n                          Pièges ({{nbMainDeckTrapsItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-main-traps\" style=\"min-height: 20px\" [dragula]=\"dragulaName\"\r\n                         [(dragulaModel)]=\"mainDeckTrapsItems\">\r\n                      <div *ngFor=\"let item of mainDeckTrapsItems\" [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}} <span\r\n                                *ngIf=\" item.set?.code\"> - {{item.set.code}}</span></div>\r\n                            </div>\r\n                            <div>\r\n                              <mat-icon\r\n                                (click)=\"addCollectionItemSimple(item); $event.stopPropagation();\">add_circle\r\n                              </mat-icon>\r\n                              <mat-icon\r\n                                (click)=\"removeCollectionItemSimple(item); $event.stopPropagation()\">\r\n                                remove_circle\r\n                              </mat-icon>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                </mat-accordion>\r\n              </div>\r\n              <div class=\"col-lg-6\" style=\"padding-right: 1vw;padding-left: 1vw; padding-bottom: 1vw;\">\r\n                <mat-accordion multi>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\" style=\"margin-top: 0\">\r\n                          Extra Deck ({{nbExtraDeckItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-extra\" style=\"min-height: 20px\" [dragula]=\"dragulaName\"\r\n                         [(dragulaModel)]=\"extraDeckItems\">\r\n                      <div *ngFor=\"let item of extraDeckItems\" [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"extraDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}} <span\r\n                                *ngIf=\" item.set?.code\"> - {{item.set.code}}</span></div>\r\n                            </div>\r\n                            <div>\r\n                              <mat-icon\r\n                                (click)=\"addCollectionItemSimple(item); $event.stopPropagation();\">add_circle\r\n                              </mat-icon>\r\n                              <mat-icon\r\n                                (click)=\"removeCollectionItemSimple(item); $event.stopPropagation()\">\r\n                                remove_circle\r\n                              </mat-icon>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div ngbDropdownMenu>\r\n                            <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                              qu'image de deck\r\n                            </button>\r\n                          </div>\r\n\r\n                          <ng-template #content let-modal>\r\n                            <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                          </ng-template>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\">\r\n                          Side Deck ({{nbSideDeckItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-side\" [dragula]=\"dragulaName\" [(dragulaModel)]=\"sideDeckItems\"\r\n                         style=\"min-height: 20px\">\r\n                      <div *ngFor=\"let item of sideDeckItems\" [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"sideDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}} <span\r\n                                *ngIf=\" item.set?.code\"> - {{item.set.code}}</span></div>\r\n                            </div>\r\n                            <div>\r\n                              <mat-icon\r\n                                (click)=\"addCollectionItemSimple(item); $event.stopPropagation();\">add_circle\r\n                              </mat-icon>\r\n                              <mat-icon\r\n                                (click)=\"removeCollectionItemSimple(item); $event.stopPropagation()\">\r\n                                remove_circle\r\n                              </mat-icon>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                </mat-accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Vue compact\">\r\n          <div class=\"container-fluid\"\r\n               style=\"display: flex; flex-direction: column; height:100%; padding-right: 0\">\r\n            <div class=\"row\" style=\"width: 100%;\">\r\n              <div class=\"col-lg-6\" style=\"padding-right: 1vw; padding-left: 1vw; padding-bottom: 1vh\">\r\n                <mat-accordion multi>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\" style=\"margin-top: 0\">\r\n                          Main Deck\r\n                          ({{nbMainDeckMonstersCompetitiveViewItems + nbMainDeckSpellsCompetitiveViewItems + nbMainDeckTrapsCompetitiveViewItems}}\r\n                          ),\r\n                          Monstres ({{nbMainDeckMonstersCompetitiveViewItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-main-monsters-2\" style=\"min-height: 20px\">\r\n                      <div *ngFor=\"let item of mainDeckMonstersCompetitiveViewItems\"\r\n                           [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\"\r\n                             [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\">\r\n                          Magies ({{nbMainDeckSpellsCompetitiveViewItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-main-spells-2\" style=\"min-height: 20px\">\r\n                      <div *ngFor=\"let item of mainDeckSpellsCompetitiveViewItems\"\r\n                           [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\">\r\n                          Pièges ({{nbMainDeckTrapsCompetitiveViewItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-main-traps-2\" style=\"min-height: 20px\">\r\n                      <div *ngFor=\"let item of mainDeckTrapsCompetitiveViewItems\"\r\n                           [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"mainDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                </mat-accordion>\r\n              </div>\r\n              <div class=\"col-lg-6\" style=\"padding-right: 1vw;padding-left: 1vw; padding-bottom: 1vw;\">\r\n                <mat-accordion multi>\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\" style=\"margin-top: 0\">\r\n                          Extra Deck ({{nbExtraDeckCompetitiveViewItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-extra-2\" style=\"min-height: 20px\">\r\n                      <div *ngFor=\"let item of extraDeckCompetitiveViewItems\"\r\n                           [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"extraDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}}</div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div ngbDropdownMenu>\r\n                            <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                              qu'image de deck\r\n                            </button>\r\n                          </div>\r\n\r\n                          <ng-template #content let-modal>\r\n                            <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                          </ng-template>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n\r\n                  <mat-expansion-panel [expanded]=\"true\">\r\n                    <mat-expansion-panel-header>\r\n                      <mat-panel-title>\r\n                        <div class=\"category-cards\">\r\n                          Side Deck ({{nbSideDeckCompetitiveViewItems}})\r\n                        </div>\r\n                      </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n                    <div id=\"id-side-2\"\r\n                         style=\"min-height: 20px\">\r\n                      <div *ngFor=\"let item of sideDeckCompetitiveViewItems\"\r\n                           [className]=\"item.card.type+ '|' + ' card-container'\"\r\n                           [container]=\"'body'\"\r\n                           ngbDropdown #myDrop=\"ngbDropdown\"\r\n                           (click)=\"open(content)\">\r\n                        <div class=\"card-container-inside\" [style.background-color]=\"sideDeckMap.get(item.card.type)\"\r\n                             [matBadge]=\"item.card?.banListInfo?.banTcg | ban\"\r\n                             [matBadgeHidden]=\"item.card?.banListInfo?.banTcg === null\"\r\n                             ngbDropdownToggle (click)=\"myDrop.close()\"\r\n                             (contextmenu)=\"myDrop.open(); false;\">\r\n                          <strong class=\"card-quantity\">{{item.quantity}}x</strong>\r\n                          <div class=\"card-name\">\r\n                            <div style=\"display: flex; align-items: center\">\r\n                              <img [src]=\"backEndCardUrl + item?.card?.apiId + '/image-cropped'\" alt=\"website icon\"\r\n                                   style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                              <div>{{item.card.name}}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div ngbDropdownMenu>\r\n                          <button ngbDropdownItem (click)=\"setCardAsCollectionImage(item.card.apiId)\">Choisir en tant\r\n                            qu'image de deck\r\n                          </button>\r\n                        </div>\r\n\r\n                        <ng-template #content let-modal>\r\n                          <app-modal-card-detail [card]=\"item.card\"></app-modal-card-detail>\r\n                        </ng-template>\r\n                      </div>\r\n                    </div>\r\n                  </mat-expansion-panel>\r\n                </mat-accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Prix\">\r\n          <div style=\"width: 95%; margin-left: 2.5%\" *ngIf=\"collection && cardPriceEntries\">\r\n            <div *ngFor=\"let entry of cardPriceEntries\" class=\"card-container\" style=\"width: 100%\"\r\n                 (click)=\"open(content)\">\r\n              <div class=\"card-container-inside\"\r\n                   [style.background-color]=\"mainDeckMap.get(entry[0].type)\"\r\n                   [matBadge]=\"entry[0]?.banListInfo?.banTcg | ban\"\r\n                   [matBadgeHidden]=\"entry[0]?.banListInfo?.banTcg === null\">\r\n                <div class=\"card-name\">\r\n                  <div style=\"display: flex; align-items: center\">\r\n                    <img [src]=\"backEndCardUrl + entry[0].apiId + '/image-cropped'\" alt=\"website icon\"\r\n                         style=\"width:42px;height:42px;border:0; margin-right: 8px\">\r\n                    <div>{{entry[0].name}} </div>\r\n                    <div>&nbsp;- Prix {{entry[1]}}€</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ng-template #content let-modal>\r\n                <app-modal-card-detail [card]=\"entry[0]\"></app-modal-card-detail>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab label=\"Commentaires & Images\">\r\n          <div style=\"width: 100%;\" *ngIf=\"collection\">\r\n        <textarea matInput style=\"width: 90%; height: 90px; border: #3b3b3b 1px solid; padding: 8px; margin: 8px;\"\r\n                  placeholder=\"Commentaire...\" [(ngModel)]=\"collection.comment\" (change)=\"textAreaChanged()\">\r\n\r\n        </textarea>\r\n            <button mat-raised-button style=\"margin: 8px\" (click)=\"fileInput.click()\">Ajouter Image\r\n              <input id=\"inputImage\" hidden type=\"file\" #fileInput (change)=\"uploadFile($event)\">\r\n            </button>\r\n            <div *ngIf=\"collection?.images\">\r\n              <div *ngFor=\"let image of collection.images\" style=\"margin: 16px\">\r\n                <div class=\"file-preview\" *ngIf=\"image.id\">\r\n                  <img src=\"{{backEndCollectionsUrl + collection.id + '/images/' + image.id}}\"\r\n                       style=\"height: 150px; margin-right: 16px;\" height=\"120px\"\r\n                       (click)=\"openFullWidthImageDialog(image)\">\r\n                  <mat-icon class=\"delete-file\" [ngStyle]=\"{'color':'black'}\" (click)=\"deleteImage(image)\"\r\n                            aria-hidden=\"false\"\r\n                            aria-label=\"Delte icon\">delete\r\n                  </mat-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ColorEvent} from 'ngx-color';\r\n\r\nexport interface CollectionDialogData {\r\n  name: string;\r\n  type: string;\r\n  createdBy: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dialog-collection',\r\n  templateUrl: 'dialog-add-collection.html',\r\n})\r\nexport class DialogAddCollectionComponent {\r\n\r\n  collectionTypes = ['DECK', 'COLLECTION'];\r\n  data: CollectionDialogData = {\r\n    name: '',\r\n    type: 'DECK',\r\n    createdBy: '',\r\n    color: ''\r\n  };\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogAddCollectionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\r\n  ) {\r\n    this.data.type = dialogData.type;\r\n  }\r\n\r\n  changeComplete($event: ColorEvent) {\r\n    this.data.color = $event.color.hex;\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Ajout {{data.type | lowercase}}</h1>\r\n<div mat-dialog-content>\r\n  <div>\r\n    <mat-form-field style=\"width: 100%\">\r\n      <mat-label>Nom</mat-label>\r\n      <input matInput [(ngModel)]=\"data.name\" autofocus>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>\r\n    <mat-form-field style=\"width: 100%\">\r\n      <mat-label>Créé par</mat-label>\r\n      <input matInput [(ngModel)]=\"data.createdBy\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div style=\"display: flex; align-items: center; justify-content: center\">\r\n    <div style=\"width: 50%\">\r\n      <mat-form-field style=\"width: 100%\">\r\n        <mat-label>Couleur</mat-label>\r\n        <input matInput [(ngModel)]=\"data.color\">\r\n      </mat-form-field>\r\n    </div>\r\n    <div style=\"width: 50%; display: flex; align-items: center; justify-content: center\">\r\n      <color-circle [color]=\"data.color\" (onChangeComplete)=\"changeComplete($event)\"></color-circle>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button [mat-dialog-close]=\"data\">Ajouter</button>\r\n</div>\r\n","export class Image {\r\n  id: number;\r\n  data: string;\r\n\r\n\r\n  constructor(data: string) {\r\n    this.data = data;\r\n  }\r\n}\r\n","export enum Position {\r\n  // NONE,\r\n  MAIN_DECK,\r\n  EXTRA_DECK,\r\n  SIDE_DECK\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Card} from '../card';\r\nimport {backendUrl} from '../../../global';\r\nimport {YugiohService} from '../../../yugioh.service';\r\n\r\n@Component({\r\n  selector: 'app-tooltip-card',\r\n  templateUrl: './tooltip-card.component.html',\r\n  styleUrls: ['./tooltip-card.component.scss']\r\n})\r\nexport class TooltipCardComponent implements OnInit {\r\n\r\n  backEndCardUrl = backendUrl + '/cards/';\r\n\r\n  @Input() card: Card;\r\n\r\n  cardmarketPrice: string;\r\n\r\n  constructor(private yugiohService: YugiohService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.yugiohService.getCardPriceById(this.card?.apiId)\r\n      .subscribe(value => {\r\n        if (value?.data && value.data.length > 0) {\r\n          if (value.data[0]?.card_prices && value.data[0].card_prices.length > 0) {\r\n            this.cardmarketPrice = value.data[0].card_prices[0].cardmarket_price;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<div style=\"display: flex; opacity: 1; \">\r\n  <div style=\"width: 300px\">\r\n    <img class=\"img-fluid\" style=\"margin-right: 4px\" src=\"{{backEndCardUrl + card.apiId + '/image'}}\"\r\n         alt=\"Character picture\">\r\n  </div>\r\n  <div style=\"width: 30vw; margin-left: 6px; border: 1px #bebebe solid; height: fit-content\">\r\n    <div\r\n      style=\"display: flex; flex-direction: column; justify-content: center; align-content: center; background-color: blue;\">\r\n      <div style=\"font-weight: bolder; font-size: 20px\">\r\n        {{card.name}}\r\n      </div>\r\n      <div style=\"padding-bottom: 4px\">{{card.race}}, {{card.attribute}}</div>\r\n      <mat-divider style=\"width: 94%; margin-left: 3%\"></mat-divider>\r\n      <div style=\"padding: 4px\">\r\n        {{card.type}}<span *ngIf=\"card.type !== 'Spell Card' && card.type !== 'Trap Card'\">, {{card.atk}}, {{card.def}}, Level / Rank / Link : {{card.level}}</span>\r\n      </div>\r\n    </div>\r\n    <div style=\"padding: 4px; background-color: white; color: black\">\r\n      <div>{{card.description}}</div>\r\n      <div *ngIf=\"cardmarketPrice\">Prix CardMarket : {{cardmarketPrice}}€</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class Utils {\r\n\r\n  public static cardColorMap = new Map<string, string>([\r\n    ['Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Flip Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Flip Tuner Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Gemini Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Normal Monster', 'rgba(237, 227, 213, 1)'],\r\n    ['Normal Tuner Monster', 'rgba(237, 227, 213, 1)'],\r\n    ['Pendulum Effect Monster', 'rgba(115, 131, 112, 1)'],\r\n    ['Pendulum Flip Effect Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Pendulum Normal Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Pendulum Tuner Effect Monster', 'rgba(115, 131, 112 , 1)'],\r\n    ['Ritual Effect Monster', 'rgba(200, 210, 234, 1)'],\r\n    ['Ritual Monster', 'rgba(200, 210, 234 , 1)'],\r\n    ['Skill Card', 'rgb(233, 219, 223)'],\r\n    ['Spell Card', 'rgb(220, 234, 236)'],\r\n    ['Spirit Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Toon Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Trap Card', 'rgb(233, 219, 223)'],\r\n    ['Tuner Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Union Effect Monster', 'rgba(139, 98, 32, 0.3)'],\r\n    ['Fusion Monster', 'rgb(216 206 231)'],\r\n    ['Link Monster', 'rgb(57 93 168)'],\r\n    ['Pendulum Effect Fusion Monster', 'rgb(216 206 231)'],\r\n    ['Synchro Monster', 'rgb(238 238 238)'],\r\n    ['Synchro Pendulum Effect Monster', 'rgb(238 238 238)'],\r\n    ['Synchro Tuner Monster', 'rgb(238 238 238)'],\r\n    ['XYZ Monster', 'rgb(193 193 193)'],\r\n    ['XYZ Pendulum Effect Monster', 'rgb(193 193 193)']\r\n  ]);\r\n}\r\n","import {TypeOfSummon} from './type-of-summon.enum';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport class CardNode {\r\n  id: string;\r\n  name: string;\r\n  image: string;\r\n  typeOfSummon: TypeOfSummon;\r\n  children?: CardNode[] = [];\r\n  brothers?: CardNode[] = []; // card needed beside a parent to create the child (ex: oviraptor would need a 4* card to XYZ summon a child)\r\n  target: CardNode; // used to draw an arrow between a brother and a direct child from another cardNode\r\n  fakeNode: boolean; // used to create a hidden div so a cardNode and its brother point to it and then the fake node points to their child/target\r\n\r\n\r\n  constructor(name?: string, image?: string, typeOfSummon?: TypeOfSummon, target?: CardNode) {\r\n    this.id = uuidv4();\r\n    this.name = name;\r\n    this.image = image;\r\n    this.typeOfSummon = typeOfSummon;\r\n    this.children = [];\r\n    this.brothers = [];\r\n    this.target = target;\r\n  }\r\n}\r\n","export class Card {\r\n  apiId: string;\r\n  name: string;\r\n  image: any;\r\n\r\n  constructor(apiId: string, name?: string, image?: any) {\r\n    this.apiId = apiId;\r\n    this.name = name;\r\n    this.image = image;\r\n  }\r\n}\r\n","import {Component, ElementRef, OnInit, QueryList, ViewChildren} from '@angular/core';\r\nimport {CardNode} from './card-node';\r\nimport {TypeOfSummon} from './type-of-summon.enum';\r\nimport 'leader-line';\r\nimport {Card} from './card';\r\nimport {YugiohService} from '../../yugioh.service';\r\nimport {forkJoin} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\ndeclare let LeaderLine: any;\r\n\r\n@Component({\r\n  selector: 'app-combo-graph-two',\r\n  templateUrl: './combo-graph-two.component.html',\r\n  styleUrls: ['./combo-graph-two.component.scss']\r\n})\r\nexport class ComboGraphTwoComponent implements OnInit {\r\n\r\n  @ViewChildren('aaaaaa') divs: QueryList<ElementRef>;\r\n\r\n  flowchart: [CardNode[]];\r\n\r\n  constructor(private yugiohService: YugiohService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const insertIntoArray = (arr, value) => {\r\n\r\n      return arr.reduce((result, element, index, array) => {\r\n\r\n        result.push(element);\r\n\r\n        if (index < array.length - 1) {\r\n          result.push(value);\r\n        }\r\n\r\n        return result;\r\n      }, []);\r\n    };\r\n\r\n\r\n    const ovi = new Card('44335251');\r\n    const misc = new Card('38572779');\r\n    const archosaur = new Card('98022050');\r\n    const petite = new Card('82946847');\r\n    const doublePill = new Card('38179121');\r\n    const uct = new Card('18940556');\r\n\r\n\r\n    forkJoin([\r\n      this.yugiohService.getCardById(petite.apiId),\r\n      this.yugiohService.getCardById(ovi.apiId),\r\n      this.yugiohService.getCardById(misc.apiId),\r\n      this.yugiohService.getCardById(doublePill.apiId),\r\n      this.yugiohService.getCardById(uct.apiId),\r\n      this.yugiohService.getCardById(archosaur.apiId)\r\n    ]).pipe(\r\n      map((data: Card[]) => {\r\n        return data;\r\n      })\r\n    ).subscribe(\r\n      data => {\r\n        const node1 = new CardNode(data[1].name, data[1].image);\r\n\r\n        const node2 = new CardNode(data[2].name, data[2].image, TypeOfSummon.SPECIAL);\r\n\r\n        const node3 = new CardNode(data[5].name, data[5].image, TypeOfSummon.BANISH);\r\n\r\n        const node4 = new CardNode(data[3].name, data[3].image, TypeOfSummon.DRAW);\r\n        const node4Brother1 = new CardNode(data[1].name, data[1].image);\r\n        const node4Brother2 = new CardNode(data[1].name, data[1].image);\r\n\r\n        const node5 = new CardNode(data[4].name, data[4].image, TypeOfSummon.SPECIAL);\r\n        node4Brother1.target = node5;\r\n        node4Brother2.target = node5;\r\n\r\n        this.addChild(node1, node2);\r\n        this.addChild(node2, node3);\r\n        this.addChild(node3, node4);\r\n        this.addChild(node4, node5);\r\n        this.addBrother(node4, node4Brother1);\r\n        this.addBrother(node4, node4Brother2);\r\n\r\n        this.flowchart = [[]];\r\n        this.createFlowchart(node1, 0);\r\n        // this.createHiddenNodesRow(1);\r\n        this.flowchart = insertIntoArray(this.flowchart, []);\r\n        console.log(this.flowchart);\r\n        this.createHiddenNodes(1);\r\n        this.drawFlowChartArrows();\r\n        console.log(this.flowchart);\r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  createFlowchart(node: CardNode, rowIndex: number): void {\r\n    console.log(this.flowchart.length);\r\n    if (rowIndex === this.flowchart.length) {\r\n      this.flowchart.push([node].concat(node.brothers));\r\n    } else {\r\n      this.flowchart[rowIndex].push(node);\r\n      node.brothers.forEach(value => this.flowchart[rowIndex].push(value));\r\n    }\r\n\r\n    if (Array.isArray(node.children) && node.children.length) {\r\n      rowIndex += 1;\r\n      for (const childNode of node.children) {\r\n        //rowIndex = this.handleBrothers(node, rowIndex);\r\n        this.createFlowchart(childNode, rowIndex);\r\n        //this.drawArrow(node, childNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  createHiddenNodesRow(rowIndex: number): void {\r\n    console.log('creating nodes rows');\r\n    if (rowIndex % 2 === 0 || rowIndex > this.flowchart.length - 2) {\r\n      return;\r\n    }\r\n    this.flowchart.splice(rowIndex, 0, []); // Create a new row for hidden nodes\r\n    this.createHiddenNodesRow(rowIndex + 2);\r\n  }\r\n\r\n  createHiddenNodes(rowIndex: number): void {\r\n    // -1 because the last row doesn't need hidden nodes\r\n    // rowIndex % 2 === 0 because the hidden row has only odd index because the first one is always a normal row\r\n    if (rowIndex % 2 === 0 || rowIndex >= this.flowchart.length - 1) {\r\n      return;\r\n    }\r\n    console.log('creating nodes for row ' + rowIndex);\r\n    const hiddenNodes = [];\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.flowchart[rowIndex - 1].length; i++) { // there is as much hidden nodes as node on the row on top of it\r\n      const nodeOnTop = this.flowchart[rowIndex - 1][i]; // It is the node right on top of the fake node so the \"parent\" of the fake node\r\n      const hiddenNode = new CardNode();\r\n      console.log(nodeOnTop);\r\n      hiddenNode.fakeNode = true;\r\n      if (Array.isArray(nodeOnTop.brothers) && nodeOnTop.brothers.length) { // If the parent has brothers then we need to fuse arrows\r\n        console.log('assigning new target on fake nodes');\r\n        // We get the child node impacted by looking for the node which has the same id as the one in the brothers of the nodeOnTop\r\n        const childImpactedByArrowFusion = this.flowchart[rowIndex + 1].find(child => child.id === nodeOnTop.brothers[0].target.id);\r\n        // set the target for hidden node\r\n        hiddenNode.target = childImpactedByArrowFusion;\r\n        // Replace the arrow destination of parent and brothers from the child to the hidden cardNode to fuse the arrows\r\n        nodeOnTop.brothers.forEach(node => node.target = hiddenNode);\r\n        console.log('child');\r\n        console.log(childImpactedByArrowFusion);\r\n        const childToChangeForNodeOnTopIndex = nodeOnTop.children.findIndex(child => child === hiddenNode.target);\r\n        nodeOnTop.children[childToChangeForNodeOnTopIndex] = hiddenNode;\r\n      }\r\n      hiddenNodes.push(hiddenNode);\r\n    }\r\n    this.flowchart[rowIndex] = hiddenNodes;\r\n    this.createHiddenNodes(rowIndex + 2); //\r\n  }\r\n\r\n  drawFlowChartArrows() {\r\n    this.flowchart.forEach(row => {\r\n      row.forEach(node => {\r\n        if (node.target) {\r\n          if (node.target.fakeNode) {\r\n            this.drawLineWithBottomSocket(node, node.target, false, 'disc');\r\n          } else {\r\n            this.drawArrowWithStartLabel(node, node.target);\r\n          }\r\n        }\r\n        if (Array.isArray(node.children) && node.children.length) {\r\n          for (const child of node.children) {\r\n            if (child.fakeNode) {\r\n              this.drawLine(node, child, false, 'disc');\r\n            } else {\r\n              this.drawArrow(node, child);\r\n            }\r\n          }\r\n        }\r\n        if (Array.isArray(node.brothers) && node.brothers.length) {\r\n          for (const brother of node.brothers) { // TODO : fix issue of arrow overlapping if multiple brothers (z-index probably)\r\n            this.drawLine(node, brother, false, 'behind');\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  drawArrow(parent: CardNode, child: CardNode) {\r\n    setTimeout(() => {\r\n      const a = new LeaderLine(\r\n        document.getElementById(parent.id),\r\n        document.getElementById(child.id),\r\n        {\r\n          middleLabel: TypeOfSummon[child.typeOfSummon],\r\n          path: 'magnet',\r\n          startSocket: 'bottom',\r\n          endSocket: 'top'\r\n        }\r\n      );\r\n    }, 200);\r\n  }\r\n\r\n  drawLine(parent: CardNode, child: CardNode, showLabel: boolean, endPlug: string, startSocket?: 'bottom',) {\r\n    setTimeout(() => {\r\n      const a = new LeaderLine(\r\n        document.getElementById(parent.id),\r\n        document.getElementById(child.id),\r\n        {\r\n          middleLabel: showLabel ? TypeOfSummon[child.typeOfSummon] : '',\r\n          endPlug: endPlug ? endPlug : 'behind',\r\n          path: 'magnet'\r\n        }\r\n      );\r\n    }, 200);\r\n  }\r\n\r\n  drawLineWithBottomSocket(parent: CardNode, child: CardNode, showLabel: boolean, endPlug: string) {\r\n    setTimeout(() => {\r\n      const a = new LeaderLine(\r\n        document.getElementById(parent.id),\r\n        document.getElementById(child.id),\r\n        {\r\n          middleLabel: showLabel ? TypeOfSummon[child.typeOfSummon] : '',\r\n          endPlug: endPlug ? endPlug : 'behind',\r\n          path: 'magnet',\r\n          startSocket: 'bottom'\r\n        }\r\n      );\r\n    }, 200);\r\n  }\r\n\r\n  drawArrowWithStartLabel(parent: CardNode, child: CardNode) {\r\n    setTimeout(() => {\r\n      const a = new LeaderLine(\r\n        document.getElementById(parent.id),\r\n        document.getElementById(child.id),\r\n        {\r\n          middleLabel: TypeOfSummon[child.typeOfSummon],\r\n          path: 'magnet'\r\n        }\r\n      );\r\n    }, 200);\r\n  }\r\n\r\n  addChild(parent: CardNode, child: CardNode) {\r\n    if (parent.children === null) {\r\n      parent.children = [];\r\n    }\r\n    parent.children.push(child);\r\n  }\r\n\r\n  addBrother(parent: CardNode, brother: CardNode) {\r\n    if (parent.brothers === null) {\r\n      parent.brothers = [];\r\n    }\r\n    parent.brothers.push(brother);\r\n  }\r\n\r\n  // TODO : addTarget method ?\r\n}\r\n","<div #aaaaaa style=\"display: flex;\r\nflex-direction: column; align-items: center; justify-content: center;\">\r\n  <div *ngFor=\"let row of flowchart; first as isFirst;\" [style.margin-top]=\"isFirst ? '0' : '4vh'\"\r\n       style=\"display: flex; align-items: center; max-width: 70vw;\">\r\n    <div *ngFor=\"let node of row\">\r\n      <div class=\"example-card\" [id]=\"node.id\">\r\n        <img *ngIf=\"node.image\" height=\"267\" width=\"186\" mat-card-image src=\"{{'data:image/jpg;base64,' + node.image}}\"\r\n             alt=\"card picture\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export enum TypeOfSummon {\r\n  NORMAL,\r\n  SPECIAL,\r\n  XYZ,\r\n  SYNCHRO,\r\n  LINK,\r\n  RITUAL,\r\n  DRAW,\r\n  BANISH,\r\n  SEND_TO_GRAVEYARD\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpParams, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {backendUrl, httpOptions, ygoproApiUrl} from './global';\r\nimport {Card} from './yu-gi-oh/collection/card';\r\nimport {Card as OtherCard} from './yu-gi-oh/combo-graph-two/card';\r\nimport {Collection} from './yu-gi-oh/collection/collection';\r\nimport {Set} from './yu-gi-oh/collection/set';\r\nimport {CollectionImportPojo} from './yu-gi-oh/collection/collection-import-pojo';\r\nimport {CollectionImportOutputPojo} from './yu-gi-oh/collection/collection-import-output-pojo';\r\nimport {CollectionLight} from './yu-gi-oh/collection/collection-light';\r\nimport {CollectionItem} from './yu-gi-oh/collection/collection-item';\r\nimport {CollectionItemComparison} from './yu-gi-oh/collection/collection-item-comparison';\r\nimport {FilterDto} from './filter-dialog/filter-dto';\r\nimport {CardSort} from './sort-dialog/card-sort';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class YugiohService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getCardById(apiId: string): Observable<OtherCard> {\r\n    return this.http.get<OtherCard>(backendUrl + '/cards/' + apiId, {headers: httpOptions.headers});\r\n  }\r\n\r\n  getCardPriceById(apiId: string): Observable<any> {\r\n    const params = new HttpParams()\r\n      .set('id', apiId);\r\n    return this.http.get<any>(ygoproApiUrl, {params, headers: httpOptions.headers});\r\n  }\r\n\r\n  getCardsPriceById(apiIds: string[]): Observable<any> {\r\n    console.log(apiIds);\r\n    const params = new HttpParams()\r\n      .set('id', apiIds.join(','));\r\n    return this.http.get<any>(ygoproApiUrl, {params, headers: httpOptions.headers});\r\n  }\r\n\r\n  getCardsbyName(filter = ''): Observable<Array<Card>> {\r\n    const params = new HttpParams()\r\n      .set('filter', filter);\r\n    return this.http.post<Array<Card>>(backendUrl + '/cards', {}, {params, headers: httpOptions.headers});\r\n  }\r\n\r\n  getCardsPaginated(pageIndex: number, pageSize: number, sort: CardSort, filter: string = '', filters?: FilterDto):\r\n    Observable<HttpResponse<Array<Card>>> {\r\n    const params = new HttpParams().set('pageSize', String(pageSize))\r\n      .set('pageIndex', String(pageIndex)).set('filter', filter).set('sort', CardSort[sort]);\r\n    return this.http.post<Array<Card>>(backendUrl + '/cards', filters, {params, headers: httpOptions.headers, observe: 'response'});\r\n  }\r\n\r\n  getCardbyName(name): Observable<Card> {\r\n    return this.http.get<Card>(backendUrl + '/cards/name/' + name, {headers: httpOptions.headers});\r\n  }\r\n\r\n  findCardsInCollection(collectionsItems: CollectionItem[]): Observable<Array<Array<CollectionItemComparison>>> {\r\n    return this.http.post<Array<Array<CollectionItemComparison>>>(backendUrl + '/findCardsInCollection',\r\n      collectionsItems, {headers: httpOptions.headers});\r\n  }\r\n\r\n  getCardsByApiId(apidId: string): Observable<Array<Card>> {\r\n    return this.http.get<Array<Card>>(backendUrl + '/cards/apiId/' + apidId, {headers: httpOptions.headers});\r\n  }\r\n\r\n  getCardsBySet(set: string): Observable<Array<Card>> {\r\n    return this.http.get<Array<Card>>(backendUrl + '/cards/set/' + set, {headers: httpOptions.headers});\r\n  }\r\n\r\n  getSets(): Observable<Array<Set>> {\r\n    return this.http.get<Array<Set>>(backendUrl + '/sets', {headers: httpOptions.headers});\r\n  }\r\n\r\n  getCollections(filter?: string, collectionType ?: string): Observable<Array<CollectionLight>> {\r\n    let params = new HttpParams();\r\n    if (filter) {\r\n      params = params.set('filter', filter);\r\n    }\r\n    if (collectionType) {\r\n      params = params.set('collectionType', collectionType);\r\n    }\r\n\r\n    console.log(collectionType);\r\n\r\n    return this.http.get<Array<CollectionLight>>(backendUrl + '/collections', {params, headers: httpOptions.headers});\r\n  }\r\n\r\n  getCollectionsFull(): Observable<Array<Collection>> {\r\n    return this.http.get<Array<Collection>>(backendUrl + '/collections/full', {headers: httpOptions.headers});\r\n  }\r\n\r\n  removeCollectionById(id: string): Observable<Collection> {\r\n    return this.http.delete<Collection>(backendUrl + '/collections/' + id, {headers: httpOptions.headers});\r\n  }\r\n\r\n  getCollectionById(id: string): Observable<Collection> {\r\n    return this.http.get<Collection>(backendUrl + '/collections/' + id, {headers: httpOptions.headers});\r\n  }\r\n\r\n  getCollectionsByCreator(createdBy: string): Observable<Collection[]> {\r\n    return this.http.get<Collection[]>(backendUrl + '/collections/by-creator/' + createdBy, {headers: httpOptions.headers});\r\n  }\r\n\r\n  addOrUpdateCollectionLight(collection: CollectionLight): Observable<CollectionLight> {\r\n    return this.http.post<CollectionLight>(backendUrl + '/collections/light', collection, {headers: httpOptions.headers});\r\n  }\r\n\r\n  addOrUpdateCollection(collection: Collection): Observable<Collection> {\r\n    console.log(backendUrl + '/collections');\r\n    return this.http.post<Collection>(backendUrl + '/collections', collection, {headers: httpOptions.headers});\r\n  }\r\n\r\n  importCollection(id: number, collectionPojos: CollectionImportPojo[]): Observable<CollectionImportOutputPojo> {\r\n    return this.http.post<CollectionImportOutputPojo>(backendUrl + '/collections/' + id + '/import', collectionPojos,\r\n      {headers: httpOptions.headers});\r\n  }\r\n\r\n  importCollectionYdke(id: number, collectionPojos: CollectionImportPojo[]): Observable<Collection> {\r\n    return this.http.post<Collection>(backendUrl + '/collections/' + id + '/importYdke', collectionPojos,\r\n      {headers: httpOptions.headers});\r\n  }\r\n\r\n  importCollectionBySet(id: number, setCode: string, language: string): Observable<Collection> {\r\n    const params = new HttpParams().set('language', language);\r\n\r\n    return this.http.post<Collection>(backendUrl + '/collections/' + id + '/import/' + setCode,\r\n      {}, {params, headers: httpOptions.headers});\r\n  }\r\n\r\n  getArchetypes(): Observable<Array<string>> {\r\n    return this.http.get<Array<string>>(backendUrl + '/archetypes', {headers: httpOptions.headers});\r\n  }\r\n\r\n\r\n  /*addCardWithSetToCollection(collectionItem: CollectionItem, add: boolean): Observable<CollectionItem> {\r\n    const params = new HttpParams()\r\n      .set('add', String(add));\r\n    console.log(collectionItem);\r\n    return this.http.post<CollectionItem>(backendUrl + '/collections', collectionItem, {'params': params, headers: httpOptions.headers});\r\n  }*/\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["MAT_DIALOG_DATA","UntypedFormControl","map","startWith","i0","FilterDialogComponent","constructor","data","dialogRef","yugiohService","filteredOptions","archetypeControl","valueChanges","pipe","value","_filter","tmpFilterDto","JSON","parse","stringify","console","log","activeLevels","levels","activeAttributes","attributes","activeCardTypes","cardTypes","activeMonsterRaces","monsterRaces","activeSpellRaces","spellRaces","activeTrapRaces","trapRaces","setValue","archetype","ngOnInit","getArchetypes","subscribe","options","onCancelClick","close","onConfirmClick","activeArchetype","toggle","filter","filterList","index","indexOf","push","splice","clear","undefined","filterValue","toLowerCase","option","includes","selectors","decls","vars","consts","template","ctx","_r6"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}